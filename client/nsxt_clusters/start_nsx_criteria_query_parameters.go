// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package nsxt_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// NewStartNsxCriteriaQueryParams creates a new StartNsxCriteriaQueryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewStartNsxCriteriaQueryParams() *StartNsxCriteriaQueryParams {
	return &StartNsxCriteriaQueryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewStartNsxCriteriaQueryParamsWithTimeout creates a new StartNsxCriteriaQueryParams object
// with the ability to set a timeout on a request.
func NewStartNsxCriteriaQueryParamsWithTimeout(timeout time.Duration) *StartNsxCriteriaQueryParams {
	return &StartNsxCriteriaQueryParams{
		timeout: timeout,
	}
}

// NewStartNsxCriteriaQueryParamsWithContext creates a new StartNsxCriteriaQueryParams object
// with the ability to set a context for a request.
func NewStartNsxCriteriaQueryParamsWithContext(ctx context.Context) *StartNsxCriteriaQueryParams {
	return &StartNsxCriteriaQueryParams{
		Context: ctx,
	}
}

// NewStartNsxCriteriaQueryParamsWithHTTPClient creates a new StartNsxCriteriaQueryParams object
// with the ability to set a custom HTTPClient for a request.
func NewStartNsxCriteriaQueryParamsWithHTTPClient(client *http.Client) *StartNsxCriteriaQueryParams {
	return &StartNsxCriteriaQueryParams{
		HTTPClient: client,
	}
}

/*
StartNsxCriteriaQueryParams contains all the parameters to send to the API endpoint

	for the start nsx criteria query operation.

	Typically these are written to a http.Request.
*/
type StartNsxCriteriaQueryParams struct {

	/* NSXTCriterion.

	   nsxtCriterion
	*/
	NSXTCriterion *models.NsxTCriterion

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the start nsx criteria query params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *StartNsxCriteriaQueryParams) WithDefaults() *StartNsxCriteriaQueryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the start nsx criteria query params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *StartNsxCriteriaQueryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the start nsx criteria query params
func (o *StartNsxCriteriaQueryParams) WithTimeout(timeout time.Duration) *StartNsxCriteriaQueryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the start nsx criteria query params
func (o *StartNsxCriteriaQueryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the start nsx criteria query params
func (o *StartNsxCriteriaQueryParams) WithContext(ctx context.Context) *StartNsxCriteriaQueryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the start nsx criteria query params
func (o *StartNsxCriteriaQueryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the start nsx criteria query params
func (o *StartNsxCriteriaQueryParams) WithHTTPClient(client *http.Client) *StartNsxCriteriaQueryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the start nsx criteria query params
func (o *StartNsxCriteriaQueryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNSXTCriterion adds the nSXTCriterion to the start nsx criteria query params
func (o *StartNsxCriteriaQueryParams) WithNSXTCriterion(nSXTCriterion *models.NsxTCriterion) *StartNsxCriteriaQueryParams {
	o.SetNSXTCriterion(nSXTCriterion)
	return o
}

// SetNSXTCriterion adds the nsxtCriterion to the start nsx criteria query params
func (o *StartNsxCriteriaQueryParams) SetNSXTCriterion(nSXTCriterion *models.NsxTCriterion) {
	o.NSXTCriterion = nSXTCriterion
}

// WriteToRequest writes these params to a swagger request
func (o *StartNsxCriteriaQueryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.NSXTCriterion != nil {
		if err := r.SetBodyParam(o.NSXTCriterion); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
