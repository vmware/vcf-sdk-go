// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetCredentialTaskByResourceIDReader is a Reader for the GetCredentialTaskByResourceID structure.
type GetCredentialTaskByResourceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCredentialTaskByResourceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCredentialTaskByResourceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCredentialTaskByResourceIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCredentialTaskByResourceIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/credentials/tasks/{id}/resource-credentials] getCredentialTaskByResourceID", response, response.Code())
	}
}

// NewGetCredentialTaskByResourceIDOK creates a GetCredentialTaskByResourceIDOK with default headers values
func NewGetCredentialTaskByResourceIDOK() *GetCredentialTaskByResourceIDOK {
	return &GetCredentialTaskByResourceIDOK{}
}

/*
GetCredentialTaskByResourceIDOK describes a response with status code 200, with default header values.

OK
*/
type GetCredentialTaskByResourceIDOK struct {
	Payload []*models.ResourceCredentials
}

// IsSuccess returns true when this get credential task by resource Id o k response has a 2xx status code
func (o *GetCredentialTaskByResourceIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get credential task by resource Id o k response has a 3xx status code
func (o *GetCredentialTaskByResourceIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credential task by resource Id o k response has a 4xx status code
func (o *GetCredentialTaskByResourceIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get credential task by resource Id o k response has a 5xx status code
func (o *GetCredentialTaskByResourceIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get credential task by resource Id o k response a status code equal to that given
func (o *GetCredentialTaskByResourceIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get credential task by resource Id o k response
func (o *GetCredentialTaskByResourceIDOK) Code() int {
	return 200
}

func (o *GetCredentialTaskByResourceIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/resource-credentials][%d] getCredentialTaskByResourceIdOK  %+v", 200, o.Payload)
}

func (o *GetCredentialTaskByResourceIDOK) String() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/resource-credentials][%d] getCredentialTaskByResourceIdOK  %+v", 200, o.Payload)
}

func (o *GetCredentialTaskByResourceIDOK) GetPayload() []*models.ResourceCredentials {
	return o.Payload
}

func (o *GetCredentialTaskByResourceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialTaskByResourceIDBadRequest creates a GetCredentialTaskByResourceIDBadRequest with default headers values
func NewGetCredentialTaskByResourceIDBadRequest() *GetCredentialTaskByResourceIDBadRequest {
	return &GetCredentialTaskByResourceIDBadRequest{}
}

/*
GetCredentialTaskByResourceIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCredentialTaskByResourceIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credential task by resource Id bad request response has a 2xx status code
func (o *GetCredentialTaskByResourceIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credential task by resource Id bad request response has a 3xx status code
func (o *GetCredentialTaskByResourceIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credential task by resource Id bad request response has a 4xx status code
func (o *GetCredentialTaskByResourceIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credential task by resource Id bad request response has a 5xx status code
func (o *GetCredentialTaskByResourceIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get credential task by resource Id bad request response a status code equal to that given
func (o *GetCredentialTaskByResourceIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get credential task by resource Id bad request response
func (o *GetCredentialTaskByResourceIDBadRequest) Code() int {
	return 400
}

func (o *GetCredentialTaskByResourceIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/resource-credentials][%d] getCredentialTaskByResourceIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCredentialTaskByResourceIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/resource-credentials][%d] getCredentialTaskByResourceIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCredentialTaskByResourceIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCredentialTaskByResourceIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialTaskByResourceIDInternalServerError creates a GetCredentialTaskByResourceIDInternalServerError with default headers values
func NewGetCredentialTaskByResourceIDInternalServerError() *GetCredentialTaskByResourceIDInternalServerError {
	return &GetCredentialTaskByResourceIDInternalServerError{}
}

/*
GetCredentialTaskByResourceIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCredentialTaskByResourceIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credential task by resource Id internal server error response has a 2xx status code
func (o *GetCredentialTaskByResourceIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credential task by resource Id internal server error response has a 3xx status code
func (o *GetCredentialTaskByResourceIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credential task by resource Id internal server error response has a 4xx status code
func (o *GetCredentialTaskByResourceIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get credential task by resource Id internal server error response has a 5xx status code
func (o *GetCredentialTaskByResourceIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get credential task by resource Id internal server error response a status code equal to that given
func (o *GetCredentialTaskByResourceIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get credential task by resource Id internal server error response
func (o *GetCredentialTaskByResourceIDInternalServerError) Code() int {
	return 500
}

func (o *GetCredentialTaskByResourceIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/resource-credentials][%d] getCredentialTaskByResourceIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCredentialTaskByResourceIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/credentials/tasks/{id}/resource-credentials][%d] getCredentialTaskByResourceIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCredentialTaskByResourceIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCredentialTaskByResourceIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
