// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// CancelCredentialsTaskReader is a Reader for the CancelCredentialsTask structure.
type CancelCredentialsTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelCredentialsTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCancelCredentialsTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewCancelCredentialsTaskNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCancelCredentialsTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCancelCredentialsTaskInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/credentials/tasks/{id}] cancelCredentialsTask", response, response.Code())
	}
}

// NewCancelCredentialsTaskOK creates a CancelCredentialsTaskOK with default headers values
func NewCancelCredentialsTaskOK() *CancelCredentialsTaskOK {
	return &CancelCredentialsTaskOK{}
}

/*
CancelCredentialsTaskOK describes a response with status code 200, with default header values.

OK
*/
type CancelCredentialsTaskOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this cancel credentials task o k response has a 2xx status code
func (o *CancelCredentialsTaskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cancel credentials task o k response has a 3xx status code
func (o *CancelCredentialsTaskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel credentials task o k response has a 4xx status code
func (o *CancelCredentialsTaskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cancel credentials task o k response has a 5xx status code
func (o *CancelCredentialsTaskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel credentials task o k response a status code equal to that given
func (o *CancelCredentialsTaskOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cancel credentials task o k response
func (o *CancelCredentialsTaskOK) Code() int {
	return 200
}

func (o *CancelCredentialsTaskOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/tasks/{id}][%d] cancelCredentialsTaskOK  %+v", 200, o.Payload)
}

func (o *CancelCredentialsTaskOK) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/tasks/{id}][%d] cancelCredentialsTaskOK  %+v", 200, o.Payload)
}

func (o *CancelCredentialsTaskOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *CancelCredentialsTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelCredentialsTaskNoContent creates a CancelCredentialsTaskNoContent with default headers values
func NewCancelCredentialsTaskNoContent() *CancelCredentialsTaskNoContent {
	return &CancelCredentialsTaskNoContent{}
}

/*
CancelCredentialsTaskNoContent describes a response with status code 204, with default header values.

No content
*/
type CancelCredentialsTaskNoContent struct {
	Payload *models.Task
}

// IsSuccess returns true when this cancel credentials task no content response has a 2xx status code
func (o *CancelCredentialsTaskNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cancel credentials task no content response has a 3xx status code
func (o *CancelCredentialsTaskNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel credentials task no content response has a 4xx status code
func (o *CancelCredentialsTaskNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this cancel credentials task no content response has a 5xx status code
func (o *CancelCredentialsTaskNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel credentials task no content response a status code equal to that given
func (o *CancelCredentialsTaskNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the cancel credentials task no content response
func (o *CancelCredentialsTaskNoContent) Code() int {
	return 204
}

func (o *CancelCredentialsTaskNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/tasks/{id}][%d] cancelCredentialsTaskNoContent  %+v", 204, o.Payload)
}

func (o *CancelCredentialsTaskNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/tasks/{id}][%d] cancelCredentialsTaskNoContent  %+v", 204, o.Payload)
}

func (o *CancelCredentialsTaskNoContent) GetPayload() *models.Task {
	return o.Payload
}

func (o *CancelCredentialsTaskNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelCredentialsTaskBadRequest creates a CancelCredentialsTaskBadRequest with default headers values
func NewCancelCredentialsTaskBadRequest() *CancelCredentialsTaskBadRequest {
	return &CancelCredentialsTaskBadRequest{}
}

/*
CancelCredentialsTaskBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CancelCredentialsTaskBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this cancel credentials task bad request response has a 2xx status code
func (o *CancelCredentialsTaskBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cancel credentials task bad request response has a 3xx status code
func (o *CancelCredentialsTaskBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel credentials task bad request response has a 4xx status code
func (o *CancelCredentialsTaskBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this cancel credentials task bad request response has a 5xx status code
func (o *CancelCredentialsTaskBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this cancel credentials task bad request response a status code equal to that given
func (o *CancelCredentialsTaskBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the cancel credentials task bad request response
func (o *CancelCredentialsTaskBadRequest) Code() int {
	return 400
}

func (o *CancelCredentialsTaskBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/tasks/{id}][%d] cancelCredentialsTaskBadRequest  %+v", 400, o.Payload)
}

func (o *CancelCredentialsTaskBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/tasks/{id}][%d] cancelCredentialsTaskBadRequest  %+v", 400, o.Payload)
}

func (o *CancelCredentialsTaskBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CancelCredentialsTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelCredentialsTaskInternalServerError creates a CancelCredentialsTaskInternalServerError with default headers values
func NewCancelCredentialsTaskInternalServerError() *CancelCredentialsTaskInternalServerError {
	return &CancelCredentialsTaskInternalServerError{}
}

/*
CancelCredentialsTaskInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CancelCredentialsTaskInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this cancel credentials task internal server error response has a 2xx status code
func (o *CancelCredentialsTaskInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this cancel credentials task internal server error response has a 3xx status code
func (o *CancelCredentialsTaskInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cancel credentials task internal server error response has a 4xx status code
func (o *CancelCredentialsTaskInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this cancel credentials task internal server error response has a 5xx status code
func (o *CancelCredentialsTaskInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this cancel credentials task internal server error response a status code equal to that given
func (o *CancelCredentialsTaskInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the cancel credentials task internal server error response
func (o *CancelCredentialsTaskInternalServerError) Code() int {
	return 500
}

func (o *CancelCredentialsTaskInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/credentials/tasks/{id}][%d] cancelCredentialsTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *CancelCredentialsTaskInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/credentials/tasks/{id}][%d] cancelCredentialsTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *CancelCredentialsTaskInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CancelCredentialsTaskInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
