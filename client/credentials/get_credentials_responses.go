// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetCredentialsReader is a Reader for the GetCredentials structure.
type GetCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCredentialsOK creates a GetCredentialsOK with default headers values
func NewGetCredentialsOK() *GetCredentialsOK {
	return &GetCredentialsOK{}
}

/*
GetCredentialsOK describes a response with status code 200, with default header values.

OK
*/
type GetCredentialsOK struct {
	Payload *models.PageOfCredential
}

// IsSuccess returns true when this get credentials o k response has a 2xx status code
func (o *GetCredentialsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get credentials o k response has a 3xx status code
func (o *GetCredentialsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credentials o k response has a 4xx status code
func (o *GetCredentialsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get credentials o k response has a 5xx status code
func (o *GetCredentialsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get credentials o k response a status code equal to that given
func (o *GetCredentialsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCredentialsOK) Error() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsOK  %+v", 200, o.Payload)
}

func (o *GetCredentialsOK) String() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsOK  %+v", 200, o.Payload)
}

func (o *GetCredentialsOK) GetPayload() *models.PageOfCredential {
	return o.Payload
}

func (o *GetCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfCredential)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialsBadRequest creates a GetCredentialsBadRequest with default headers values
func NewGetCredentialsBadRequest() *GetCredentialsBadRequest {
	return &GetCredentialsBadRequest{}
}

/*
GetCredentialsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCredentialsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credentials bad request response has a 2xx status code
func (o *GetCredentialsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credentials bad request response has a 3xx status code
func (o *GetCredentialsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credentials bad request response has a 4xx status code
func (o *GetCredentialsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credentials bad request response has a 5xx status code
func (o *GetCredentialsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get credentials bad request response a status code equal to that given
func (o *GetCredentialsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCredentialsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCredentialsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialsUnauthorized creates a GetCredentialsUnauthorized with default headers values
func NewGetCredentialsUnauthorized() *GetCredentialsUnauthorized {
	return &GetCredentialsUnauthorized{}
}

/*
GetCredentialsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCredentialsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credentials unauthorized response has a 2xx status code
func (o *GetCredentialsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credentials unauthorized response has a 3xx status code
func (o *GetCredentialsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credentials unauthorized response has a 4xx status code
func (o *GetCredentialsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credentials unauthorized response has a 5xx status code
func (o *GetCredentialsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get credentials unauthorized response a status code equal to that given
func (o *GetCredentialsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCredentialsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCredentialsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialsForbidden creates a GetCredentialsForbidden with default headers values
func NewGetCredentialsForbidden() *GetCredentialsForbidden {
	return &GetCredentialsForbidden{}
}

/*
GetCredentialsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCredentialsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credentials forbidden response has a 2xx status code
func (o *GetCredentialsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credentials forbidden response has a 3xx status code
func (o *GetCredentialsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credentials forbidden response has a 4xx status code
func (o *GetCredentialsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get credentials forbidden response has a 5xx status code
func (o *GetCredentialsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get credentials forbidden response a status code equal to that given
func (o *GetCredentialsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetCredentialsForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsForbidden  %+v", 403, o.Payload)
}

func (o *GetCredentialsForbidden) String() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsForbidden  %+v", 403, o.Payload)
}

func (o *GetCredentialsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialsInternalServerError creates a GetCredentialsInternalServerError with default headers values
func NewGetCredentialsInternalServerError() *GetCredentialsInternalServerError {
	return &GetCredentialsInternalServerError{}
}

/*
GetCredentialsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCredentialsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get credentials internal server error response has a 2xx status code
func (o *GetCredentialsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get credentials internal server error response has a 3xx status code
func (o *GetCredentialsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get credentials internal server error response has a 4xx status code
func (o *GetCredentialsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get credentials internal server error response has a 5xx status code
func (o *GetCredentialsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get credentials internal server error response a status code equal to that given
func (o *GetCredentialsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCredentialsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/credentials][%d] getCredentialsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCredentialsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
