// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package upgrades

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetUpgradeByIDReader is a Reader for the GetUpgradeByID structure.
type GetUpgradeByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUpgradeByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUpgradeByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetUpgradeByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUpgradeByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUpgradeByIDOK creates a GetUpgradeByIDOK with default headers values
func NewGetUpgradeByIDOK() *GetUpgradeByIDOK {
	return &GetUpgradeByIDOK{}
}

/*
GetUpgradeByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetUpgradeByIDOK struct {
	Payload *models.Upgrade
}

// IsSuccess returns true when this get upgrade by Id o k response has a 2xx status code
func (o *GetUpgradeByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get upgrade by Id o k response has a 3xx status code
func (o *GetUpgradeByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgrade by Id o k response has a 4xx status code
func (o *GetUpgradeByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgrade by Id o k response has a 5xx status code
func (o *GetUpgradeByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgrade by Id o k response a status code equal to that given
func (o *GetUpgradeByIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUpgradeByIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdOK  %+v", 200, o.Payload)
}

func (o *GetUpgradeByIDOK) String() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdOK  %+v", 200, o.Payload)
}

func (o *GetUpgradeByIDOK) GetPayload() *models.Upgrade {
	return o.Payload
}

func (o *GetUpgradeByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Upgrade)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpgradeByIDNotFound creates a GetUpgradeByIDNotFound with default headers values
func NewGetUpgradeByIDNotFound() *GetUpgradeByIDNotFound {
	return &GetUpgradeByIDNotFound{}
}

/*
GetUpgradeByIDNotFound describes a response with status code 404, with default header values.

Upgrade not found
*/
type GetUpgradeByIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgrade by Id not found response has a 2xx status code
func (o *GetUpgradeByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgrade by Id not found response has a 3xx status code
func (o *GetUpgradeByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgrade by Id not found response has a 4xx status code
func (o *GetUpgradeByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upgrade by Id not found response has a 5xx status code
func (o *GetUpgradeByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgrade by Id not found response a status code equal to that given
func (o *GetUpgradeByIDNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUpgradeByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUpgradeByIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUpgradeByIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUpgradeByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpgradeByIDInternalServerError creates a GetUpgradeByIDInternalServerError with default headers values
func NewGetUpgradeByIDInternalServerError() *GetUpgradeByIDInternalServerError {
	return &GetUpgradeByIDInternalServerError{}
}

/*
GetUpgradeByIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUpgradeByIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgrade by Id internal server error response has a 2xx status code
func (o *GetUpgradeByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgrade by Id internal server error response has a 3xx status code
func (o *GetUpgradeByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgrade by Id internal server error response has a 4xx status code
func (o *GetUpgradeByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgrade by Id internal server error response has a 5xx status code
func (o *GetUpgradeByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get upgrade by Id internal server error response a status code equal to that given
func (o *GetUpgradeByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUpgradeByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUpgradeByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/upgrades/{upgradeId}][%d] getUpgradeByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUpgradeByIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUpgradeByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
