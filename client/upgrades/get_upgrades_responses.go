// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package upgrades

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetUpgradesReader is a Reader for the GetUpgrades structure.
type GetUpgradesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUpgradesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUpgradesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetUpgradesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUpgradesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUpgradesOK creates a GetUpgradesOK with default headers values
func NewGetUpgradesOK() *GetUpgradesOK {
	return &GetUpgradesOK{}
}

/*
GetUpgradesOK describes a response with status code 200, with default header values.

OK
*/
type GetUpgradesOK struct {
	Payload *models.PageOfUpgrade
}

// IsSuccess returns true when this get upgrades o k response has a 2xx status code
func (o *GetUpgradesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get upgrades o k response has a 3xx status code
func (o *GetUpgradesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgrades o k response has a 4xx status code
func (o *GetUpgradesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgrades o k response has a 5xx status code
func (o *GetUpgradesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgrades o k response a status code equal to that given
func (o *GetUpgradesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUpgradesOK) Error() string {
	return fmt.Sprintf("[GET /v1/upgrades][%d] getUpgradesOK  %+v", 200, o.Payload)
}

func (o *GetUpgradesOK) String() string {
	return fmt.Sprintf("[GET /v1/upgrades][%d] getUpgradesOK  %+v", 200, o.Payload)
}

func (o *GetUpgradesOK) GetPayload() *models.PageOfUpgrade {
	return o.Payload
}

func (o *GetUpgradesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfUpgrade)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpgradesNotFound creates a GetUpgradesNotFound with default headers values
func NewGetUpgradesNotFound() *GetUpgradesNotFound {
	return &GetUpgradesNotFound{}
}

/*
GetUpgradesNotFound describes a response with status code 404, with default header values.

Upgrade not found
*/
type GetUpgradesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgrades not found response has a 2xx status code
func (o *GetUpgradesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgrades not found response has a 3xx status code
func (o *GetUpgradesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgrades not found response has a 4xx status code
func (o *GetUpgradesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upgrades not found response has a 5xx status code
func (o *GetUpgradesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgrades not found response a status code equal to that given
func (o *GetUpgradesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUpgradesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/upgrades][%d] getUpgradesNotFound  %+v", 404, o.Payload)
}

func (o *GetUpgradesNotFound) String() string {
	return fmt.Sprintf("[GET /v1/upgrades][%d] getUpgradesNotFound  %+v", 404, o.Payload)
}

func (o *GetUpgradesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUpgradesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpgradesInternalServerError creates a GetUpgradesInternalServerError with default headers values
func NewGetUpgradesInternalServerError() *GetUpgradesInternalServerError {
	return &GetUpgradesInternalServerError{}
}

/*
GetUpgradesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUpgradesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgrades internal server error response has a 2xx status code
func (o *GetUpgradesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgrades internal server error response has a 3xx status code
func (o *GetUpgradesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgrades internal server error response has a 4xx status code
func (o *GetUpgradesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgrades internal server error response has a 5xx status code
func (o *GetUpgradesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get upgrades internal server error response a status code equal to that given
func (o *GetUpgradesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUpgradesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/upgrades][%d] getUpgradesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUpgradesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/upgrades][%d] getUpgradesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUpgradesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUpgradesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
