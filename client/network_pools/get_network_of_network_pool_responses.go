// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package network_pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetNetworkOfNetworkPoolReader is a Reader for the GetNetworkOfNetworkPool structure.
type GetNetworkOfNetworkPoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNetworkOfNetworkPoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNetworkOfNetworkPoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetNetworkOfNetworkPoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNetworkOfNetworkPoolInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetNetworkOfNetworkPoolOK creates a GetNetworkOfNetworkPoolOK with default headers values
func NewGetNetworkOfNetworkPoolOK() *GetNetworkOfNetworkPoolOK {
	return &GetNetworkOfNetworkPoolOK{}
}

/*
GetNetworkOfNetworkPoolOK describes a response with status code 200, with default header values.

Network for referenced network pool
*/
type GetNetworkOfNetworkPoolOK struct {
	Payload *models.Network
}

// IsSuccess returns true when this get network of network pool o k response has a 2xx status code
func (o *GetNetworkOfNetworkPoolOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get network of network pool o k response has a 3xx status code
func (o *GetNetworkOfNetworkPoolOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network of network pool o k response has a 4xx status code
func (o *GetNetworkOfNetworkPoolOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network of network pool o k response has a 5xx status code
func (o *GetNetworkOfNetworkPoolOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get network of network pool o k response a status code equal to that given
func (o *GetNetworkOfNetworkPoolOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetNetworkOfNetworkPoolOK) Error() string {
	return fmt.Sprintf("[GET /v1/network-pools/{id}/networks/{networkId}][%d] getNetworkOfNetworkPoolOK  %+v", 200, o.Payload)
}

func (o *GetNetworkOfNetworkPoolOK) String() string {
	return fmt.Sprintf("[GET /v1/network-pools/{id}/networks/{networkId}][%d] getNetworkOfNetworkPoolOK  %+v", 200, o.Payload)
}

func (o *GetNetworkOfNetworkPoolOK) GetPayload() *models.Network {
	return o.Payload
}

func (o *GetNetworkOfNetworkPoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Network)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkOfNetworkPoolNotFound creates a GetNetworkOfNetworkPoolNotFound with default headers values
func NewGetNetworkOfNetworkPoolNotFound() *GetNetworkOfNetworkPoolNotFound {
	return &GetNetworkOfNetworkPoolNotFound{}
}

/*
GetNetworkOfNetworkPoolNotFound describes a response with status code 404, with default header values.

Networkpool not found
*/
type GetNetworkOfNetworkPoolNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get network of network pool not found response has a 2xx status code
func (o *GetNetworkOfNetworkPoolNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network of network pool not found response has a 3xx status code
func (o *GetNetworkOfNetworkPoolNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network of network pool not found response has a 4xx status code
func (o *GetNetworkOfNetworkPoolNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get network of network pool not found response has a 5xx status code
func (o *GetNetworkOfNetworkPoolNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get network of network pool not found response a status code equal to that given
func (o *GetNetworkOfNetworkPoolNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetNetworkOfNetworkPoolNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/network-pools/{id}/networks/{networkId}][%d] getNetworkOfNetworkPoolNotFound  %+v", 404, o.Payload)
}

func (o *GetNetworkOfNetworkPoolNotFound) String() string {
	return fmt.Sprintf("[GET /v1/network-pools/{id}/networks/{networkId}][%d] getNetworkOfNetworkPoolNotFound  %+v", 404, o.Payload)
}

func (o *GetNetworkOfNetworkPoolNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNetworkOfNetworkPoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNetworkOfNetworkPoolInternalServerError creates a GetNetworkOfNetworkPoolInternalServerError with default headers values
func NewGetNetworkOfNetworkPoolInternalServerError() *GetNetworkOfNetworkPoolInternalServerError {
	return &GetNetworkOfNetworkPoolInternalServerError{}
}

/*
GetNetworkOfNetworkPoolInternalServerError describes a response with status code 500, with default header values.

Unexpected error
*/
type GetNetworkOfNetworkPoolInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get network of network pool internal server error response has a 2xx status code
func (o *GetNetworkOfNetworkPoolInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get network of network pool internal server error response has a 3xx status code
func (o *GetNetworkOfNetworkPoolInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get network of network pool internal server error response has a 4xx status code
func (o *GetNetworkOfNetworkPoolInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get network of network pool internal server error response has a 5xx status code
func (o *GetNetworkOfNetworkPoolInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get network of network pool internal server error response a status code equal to that given
func (o *GetNetworkOfNetworkPoolInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetNetworkOfNetworkPoolInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/network-pools/{id}/networks/{networkId}][%d] getNetworkOfNetworkPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNetworkOfNetworkPoolInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/network-pools/{id}/networks/{networkId}][%d] getNetworkOfNetworkPoolInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNetworkOfNetworkPoolInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetNetworkOfNetworkPoolInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
