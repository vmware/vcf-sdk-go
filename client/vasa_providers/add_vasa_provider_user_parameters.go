// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vasa_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// NewAddVasaProviderUserParams creates a new AddVasaProviderUserParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddVasaProviderUserParams() *AddVasaProviderUserParams {
	return &AddVasaProviderUserParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddVasaProviderUserParamsWithTimeout creates a new AddVasaProviderUserParams object
// with the ability to set a timeout on a request.
func NewAddVasaProviderUserParamsWithTimeout(timeout time.Duration) *AddVasaProviderUserParams {
	return &AddVasaProviderUserParams{
		timeout: timeout,
	}
}

// NewAddVasaProviderUserParamsWithContext creates a new AddVasaProviderUserParams object
// with the ability to set a context for a request.
func NewAddVasaProviderUserParamsWithContext(ctx context.Context) *AddVasaProviderUserParams {
	return &AddVasaProviderUserParams{
		Context: ctx,
	}
}

// NewAddVasaProviderUserParamsWithHTTPClient creates a new AddVasaProviderUserParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddVasaProviderUserParamsWithHTTPClient(client *http.Client) *AddVasaProviderUserParams {
	return &AddVasaProviderUserParams{
		HTTPClient: client,
	}
}

/*
AddVasaProviderUserParams contains all the parameters to send to the API endpoint

	for the add vasa provider user operation.

	Typically these are written to a http.Request.
*/
type AddVasaProviderUserParams struct {

	/* ID.

	   VASA Provider ID
	*/
	ID string

	/* VasaUsers.

	   VASA Users data
	*/
	VasaUsers []*models.VasaUser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add vasa provider user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddVasaProviderUserParams) WithDefaults() *AddVasaProviderUserParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add vasa provider user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddVasaProviderUserParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add vasa provider user params
func (o *AddVasaProviderUserParams) WithTimeout(timeout time.Duration) *AddVasaProviderUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add vasa provider user params
func (o *AddVasaProviderUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add vasa provider user params
func (o *AddVasaProviderUserParams) WithContext(ctx context.Context) *AddVasaProviderUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add vasa provider user params
func (o *AddVasaProviderUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add vasa provider user params
func (o *AddVasaProviderUserParams) WithHTTPClient(client *http.Client) *AddVasaProviderUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add vasa provider user params
func (o *AddVasaProviderUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the add vasa provider user params
func (o *AddVasaProviderUserParams) WithID(id string) *AddVasaProviderUserParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the add vasa provider user params
func (o *AddVasaProviderUserParams) SetID(id string) {
	o.ID = id
}

// WithVasaUsers adds the vasaUsers to the add vasa provider user params
func (o *AddVasaProviderUserParams) WithVasaUsers(vasaUsers []*models.VasaUser) *AddVasaProviderUserParams {
	o.SetVasaUsers(vasaUsers)
	return o
}

// SetVasaUsers adds the vasaUsers to the add vasa provider user params
func (o *AddVasaProviderUserParams) SetVasaUsers(vasaUsers []*models.VasaUser) {
	o.VasaUsers = vasaUsers
}

// WriteToRequest writes these params to a swagger request
func (o *AddVasaProviderUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}
	if o.VasaUsers != nil {
		if err := r.SetBodyParam(o.VasaUsers); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
