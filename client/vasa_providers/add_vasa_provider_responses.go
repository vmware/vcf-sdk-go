// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vasa_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// AddVasaProviderReader is a Reader for the AddVasaProvider structure.
type AddVasaProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddVasaProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddVasaProviderCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddVasaProviderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddVasaProviderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/vasa-providers] addVasaProvider", response, response.Code())
	}
}

// NewAddVasaProviderCreated creates a AddVasaProviderCreated with default headers values
func NewAddVasaProviderCreated() *AddVasaProviderCreated {
	return &AddVasaProviderCreated{}
}

/*
AddVasaProviderCreated describes a response with status code 201, with default header values.

Created
*/
type AddVasaProviderCreated struct {
	Payload *models.VasaProvider
}

// IsSuccess returns true when this add vasa provider created response has a 2xx status code
func (o *AddVasaProviderCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add vasa provider created response has a 3xx status code
func (o *AddVasaProviderCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add vasa provider created response has a 4xx status code
func (o *AddVasaProviderCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add vasa provider created response has a 5xx status code
func (o *AddVasaProviderCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add vasa provider created response a status code equal to that given
func (o *AddVasaProviderCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add vasa provider created response
func (o *AddVasaProviderCreated) Code() int {
	return 201
}

func (o *AddVasaProviderCreated) Error() string {
	return fmt.Sprintf("[POST /v1/vasa-providers][%d] addVasaProviderCreated  %+v", 201, o.Payload)
}

func (o *AddVasaProviderCreated) String() string {
	return fmt.Sprintf("[POST /v1/vasa-providers][%d] addVasaProviderCreated  %+v", 201, o.Payload)
}

func (o *AddVasaProviderCreated) GetPayload() *models.VasaProvider {
	return o.Payload
}

func (o *AddVasaProviderCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VasaProvider)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddVasaProviderBadRequest creates a AddVasaProviderBadRequest with default headers values
func NewAddVasaProviderBadRequest() *AddVasaProviderBadRequest {
	return &AddVasaProviderBadRequest{}
}

/*
AddVasaProviderBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddVasaProviderBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add vasa provider bad request response has a 2xx status code
func (o *AddVasaProviderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add vasa provider bad request response has a 3xx status code
func (o *AddVasaProviderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add vasa provider bad request response has a 4xx status code
func (o *AddVasaProviderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add vasa provider bad request response has a 5xx status code
func (o *AddVasaProviderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add vasa provider bad request response a status code equal to that given
func (o *AddVasaProviderBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add vasa provider bad request response
func (o *AddVasaProviderBadRequest) Code() int {
	return 400
}

func (o *AddVasaProviderBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/vasa-providers][%d] addVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *AddVasaProviderBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/vasa-providers][%d] addVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *AddVasaProviderBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddVasaProviderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddVasaProviderInternalServerError creates a AddVasaProviderInternalServerError with default headers values
func NewAddVasaProviderInternalServerError() *AddVasaProviderInternalServerError {
	return &AddVasaProviderInternalServerError{}
}

/*
AddVasaProviderInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type AddVasaProviderInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add vasa provider internal server error response has a 2xx status code
func (o *AddVasaProviderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add vasa provider internal server error response has a 3xx status code
func (o *AddVasaProviderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add vasa provider internal server error response has a 4xx status code
func (o *AddVasaProviderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add vasa provider internal server error response has a 5xx status code
func (o *AddVasaProviderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add vasa provider internal server error response a status code equal to that given
func (o *AddVasaProviderInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add vasa provider internal server error response
func (o *AddVasaProviderInternalServerError) Code() int {
	return 500
}

func (o *AddVasaProviderInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/vasa-providers][%d] addVasaProviderInternalServerError  %+v", 500, o.Payload)
}

func (o *AddVasaProviderInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/vasa-providers][%d] addVasaProviderInternalServerError  %+v", 500, o.Payload)
}

func (o *AddVasaProviderInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddVasaProviderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
