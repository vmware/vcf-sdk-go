// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vasa_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetVasaProviderValidationReader is a Reader for the GetVasaProviderValidation structure.
type GetVasaProviderValidationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVasaProviderValidationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVasaProviderValidationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVasaProviderValidationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVasaProviderValidationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVasaProviderValidationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/vasa-providers/validations/{id}] getVasaProviderValidation", response, response.Code())
	}
}

// NewGetVasaProviderValidationOK creates a GetVasaProviderValidationOK with default headers values
func NewGetVasaProviderValidationOK() *GetVasaProviderValidationOK {
	return &GetVasaProviderValidationOK{}
}

/*
GetVasaProviderValidationOK describes a response with status code 200, with default header values.

OK
*/
type GetVasaProviderValidationOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this get vasa provider validation o k response has a 2xx status code
func (o *GetVasaProviderValidationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vasa provider validation o k response has a 3xx status code
func (o *GetVasaProviderValidationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vasa provider validation o k response has a 4xx status code
func (o *GetVasaProviderValidationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vasa provider validation o k response has a 5xx status code
func (o *GetVasaProviderValidationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vasa provider validation o k response a status code equal to that given
func (o *GetVasaProviderValidationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get vasa provider validation o k response
func (o *GetVasaProviderValidationOK) Code() int {
	return 200
}

func (o *GetVasaProviderValidationOK) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getVasaProviderValidationOK  %+v", 200, o.Payload)
}

func (o *GetVasaProviderValidationOK) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getVasaProviderValidationOK  %+v", 200, o.Payload)
}

func (o *GetVasaProviderValidationOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *GetVasaProviderValidationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVasaProviderValidationBadRequest creates a GetVasaProviderValidationBadRequest with default headers values
func NewGetVasaProviderValidationBadRequest() *GetVasaProviderValidationBadRequest {
	return &GetVasaProviderValidationBadRequest{}
}

/*
GetVasaProviderValidationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVasaProviderValidationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vasa provider validation bad request response has a 2xx status code
func (o *GetVasaProviderValidationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vasa provider validation bad request response has a 3xx status code
func (o *GetVasaProviderValidationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vasa provider validation bad request response has a 4xx status code
func (o *GetVasaProviderValidationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vasa provider validation bad request response has a 5xx status code
func (o *GetVasaProviderValidationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get vasa provider validation bad request response a status code equal to that given
func (o *GetVasaProviderValidationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get vasa provider validation bad request response
func (o *GetVasaProviderValidationBadRequest) Code() int {
	return 400
}

func (o *GetVasaProviderValidationBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getVasaProviderValidationBadRequest  %+v", 400, o.Payload)
}

func (o *GetVasaProviderValidationBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getVasaProviderValidationBadRequest  %+v", 400, o.Payload)
}

func (o *GetVasaProviderValidationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVasaProviderValidationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVasaProviderValidationNotFound creates a GetVasaProviderValidationNotFound with default headers values
func NewGetVasaProviderValidationNotFound() *GetVasaProviderValidationNotFound {
	return &GetVasaProviderValidationNotFound{}
}

/*
GetVasaProviderValidationNotFound describes a response with status code 404, with default header values.

Validation ID not found
*/
type GetVasaProviderValidationNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vasa provider validation not found response has a 2xx status code
func (o *GetVasaProviderValidationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vasa provider validation not found response has a 3xx status code
func (o *GetVasaProviderValidationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vasa provider validation not found response has a 4xx status code
func (o *GetVasaProviderValidationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vasa provider validation not found response has a 5xx status code
func (o *GetVasaProviderValidationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vasa provider validation not found response a status code equal to that given
func (o *GetVasaProviderValidationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get vasa provider validation not found response
func (o *GetVasaProviderValidationNotFound) Code() int {
	return 404
}

func (o *GetVasaProviderValidationNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getVasaProviderValidationNotFound  %+v", 404, o.Payload)
}

func (o *GetVasaProviderValidationNotFound) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getVasaProviderValidationNotFound  %+v", 404, o.Payload)
}

func (o *GetVasaProviderValidationNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVasaProviderValidationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVasaProviderValidationInternalServerError creates a GetVasaProviderValidationInternalServerError with default headers values
func NewGetVasaProviderValidationInternalServerError() *GetVasaProviderValidationInternalServerError {
	return &GetVasaProviderValidationInternalServerError{}
}

/*
GetVasaProviderValidationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetVasaProviderValidationInternalServerError struct {
}

// IsSuccess returns true when this get vasa provider validation internal server error response has a 2xx status code
func (o *GetVasaProviderValidationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vasa provider validation internal server error response has a 3xx status code
func (o *GetVasaProviderValidationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vasa provider validation internal server error response has a 4xx status code
func (o *GetVasaProviderValidationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vasa provider validation internal server error response has a 5xx status code
func (o *GetVasaProviderValidationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get vasa provider validation internal server error response a status code equal to that given
func (o *GetVasaProviderValidationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get vasa provider validation internal server error response
func (o *GetVasaProviderValidationInternalServerError) Code() int {
	return 500
}

func (o *GetVasaProviderValidationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getVasaProviderValidationInternalServerError ", 500)
}

func (o *GetVasaProviderValidationInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getVasaProviderValidationInternalServerError ", 500)
}

func (o *GetVasaProviderValidationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
