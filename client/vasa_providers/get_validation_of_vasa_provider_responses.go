// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vasa_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetValidationOfVasaProviderReader is a Reader for the GetValidationOfVasaProvider structure.
type GetValidationOfVasaProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetValidationOfVasaProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetValidationOfVasaProviderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetValidationOfVasaProviderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetValidationOfVasaProviderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetValidationOfVasaProviderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetValidationOfVasaProviderOK creates a GetValidationOfVasaProviderOK with default headers values
func NewGetValidationOfVasaProviderOK() *GetValidationOfVasaProviderOK {
	return &GetValidationOfVasaProviderOK{}
}

/*
GetValidationOfVasaProviderOK describes a response with status code 200, with default header values.

OK
*/
type GetValidationOfVasaProviderOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this get validation of vasa provider o k response has a 2xx status code
func (o *GetValidationOfVasaProviderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get validation of vasa provider o k response has a 3xx status code
func (o *GetValidationOfVasaProviderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of vasa provider o k response has a 4xx status code
func (o *GetValidationOfVasaProviderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get validation of vasa provider o k response has a 5xx status code
func (o *GetValidationOfVasaProviderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get validation of vasa provider o k response a status code equal to that given
func (o *GetValidationOfVasaProviderOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetValidationOfVasaProviderOK) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderOK  %+v", 200, o.Payload)
}

func (o *GetValidationOfVasaProviderOK) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderOK  %+v", 200, o.Payload)
}

func (o *GetValidationOfVasaProviderOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *GetValidationOfVasaProviderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetValidationOfVasaProviderBadRequest creates a GetValidationOfVasaProviderBadRequest with default headers values
func NewGetValidationOfVasaProviderBadRequest() *GetValidationOfVasaProviderBadRequest {
	return &GetValidationOfVasaProviderBadRequest{}
}

/*
GetValidationOfVasaProviderBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetValidationOfVasaProviderBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get validation of vasa provider bad request response has a 2xx status code
func (o *GetValidationOfVasaProviderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validation of vasa provider bad request response has a 3xx status code
func (o *GetValidationOfVasaProviderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of vasa provider bad request response has a 4xx status code
func (o *GetValidationOfVasaProviderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get validation of vasa provider bad request response has a 5xx status code
func (o *GetValidationOfVasaProviderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get validation of vasa provider bad request response a status code equal to that given
func (o *GetValidationOfVasaProviderBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetValidationOfVasaProviderBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *GetValidationOfVasaProviderBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderBadRequest  %+v", 400, o.Payload)
}

func (o *GetValidationOfVasaProviderBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetValidationOfVasaProviderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetValidationOfVasaProviderNotFound creates a GetValidationOfVasaProviderNotFound with default headers values
func NewGetValidationOfVasaProviderNotFound() *GetValidationOfVasaProviderNotFound {
	return &GetValidationOfVasaProviderNotFound{}
}

/*
GetValidationOfVasaProviderNotFound describes a response with status code 404, with default header values.

Validation ID not found
*/
type GetValidationOfVasaProviderNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get validation of vasa provider not found response has a 2xx status code
func (o *GetValidationOfVasaProviderNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validation of vasa provider not found response has a 3xx status code
func (o *GetValidationOfVasaProviderNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of vasa provider not found response has a 4xx status code
func (o *GetValidationOfVasaProviderNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get validation of vasa provider not found response has a 5xx status code
func (o *GetValidationOfVasaProviderNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get validation of vasa provider not found response a status code equal to that given
func (o *GetValidationOfVasaProviderNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetValidationOfVasaProviderNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderNotFound  %+v", 404, o.Payload)
}

func (o *GetValidationOfVasaProviderNotFound) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderNotFound  %+v", 404, o.Payload)
}

func (o *GetValidationOfVasaProviderNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetValidationOfVasaProviderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetValidationOfVasaProviderInternalServerError creates a GetValidationOfVasaProviderInternalServerError with default headers values
func NewGetValidationOfVasaProviderInternalServerError() *GetValidationOfVasaProviderInternalServerError {
	return &GetValidationOfVasaProviderInternalServerError{}
}

/*
GetValidationOfVasaProviderInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetValidationOfVasaProviderInternalServerError struct {
}

// IsSuccess returns true when this get validation of vasa provider internal server error response has a 2xx status code
func (o *GetValidationOfVasaProviderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validation of vasa provider internal server error response has a 3xx status code
func (o *GetValidationOfVasaProviderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validation of vasa provider internal server error response has a 4xx status code
func (o *GetValidationOfVasaProviderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get validation of vasa provider internal server error response has a 5xx status code
func (o *GetValidationOfVasaProviderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get validation of vasa provider internal server error response a status code equal to that given
func (o *GetValidationOfVasaProviderInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetValidationOfVasaProviderInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderInternalServerError ", 500)
}

func (o *GetValidationOfVasaProviderInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/vasa-providers/validations/{id}][%d] getValidationOfVasaProviderInternalServerError ", 500)
}

func (o *GetValidationOfVasaProviderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
