// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package pscs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetPscReader is a Reader for the GetPsc structure.
type GetPscReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPscReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPscOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPscNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPscInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPscOK creates a GetPscOK with default headers values
func NewGetPscOK() *GetPscOK {
	return &GetPscOK{}
}

/*
GetPscOK describes a response with status code 200, with default header values.

Ok
*/
type GetPscOK struct {
	Payload *models.Psc
}

// IsSuccess returns true when this get psc o k response has a 2xx status code
func (o *GetPscOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get psc o k response has a 3xx status code
func (o *GetPscOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get psc o k response has a 4xx status code
func (o *GetPscOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get psc o k response has a 5xx status code
func (o *GetPscOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get psc o k response a status code equal to that given
func (o *GetPscOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetPscOK) Error() string {
	return fmt.Sprintf("[GET /v1/pscs/{id}][%d] getPscOK  %+v", 200, o.Payload)
}

func (o *GetPscOK) String() string {
	return fmt.Sprintf("[GET /v1/pscs/{id}][%d] getPscOK  %+v", 200, o.Payload)
}

func (o *GetPscOK) GetPayload() *models.Psc {
	return o.Payload
}

func (o *GetPscOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Psc)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPscNotFound creates a GetPscNotFound with default headers values
func NewGetPscNotFound() *GetPscNotFound {
	return &GetPscNotFound{}
}

/*
GetPscNotFound describes a response with status code 404, with default header values.

Psc not found
*/
type GetPscNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get psc not found response has a 2xx status code
func (o *GetPscNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get psc not found response has a 3xx status code
func (o *GetPscNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get psc not found response has a 4xx status code
func (o *GetPscNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get psc not found response has a 5xx status code
func (o *GetPscNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get psc not found response a status code equal to that given
func (o *GetPscNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetPscNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/pscs/{id}][%d] getPscNotFound  %+v", 404, o.Payload)
}

func (o *GetPscNotFound) String() string {
	return fmt.Sprintf("[GET /v1/pscs/{id}][%d] getPscNotFound  %+v", 404, o.Payload)
}

func (o *GetPscNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPscNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPscInternalServerError creates a GetPscInternalServerError with default headers values
func NewGetPscInternalServerError() *GetPscInternalServerError {
	return &GetPscInternalServerError{}
}

/*
GetPscInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GetPscInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get psc internal server error response has a 2xx status code
func (o *GetPscInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get psc internal server error response has a 3xx status code
func (o *GetPscInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get psc internal server error response has a 4xx status code
func (o *GetPscInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get psc internal server error response has a 5xx status code
func (o *GetPscInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get psc internal server error response a status code equal to that given
func (o *GetPscInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetPscInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/pscs/{id}][%d] getPscInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPscInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/pscs/{id}][%d] getPscInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPscInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPscInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
