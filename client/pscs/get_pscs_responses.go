// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package pscs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetPscsReader is a Reader for the GetPscs structure.
type GetPscsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPscsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPscsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPscsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPscsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPscsOK creates a GetPscsOK with default headers values
func NewGetPscsOK() *GetPscsOK {
	return &GetPscsOK{}
}

/*
GetPscsOK describes a response with status code 200, with default header values.

Ok
*/
type GetPscsOK struct {
	Payload *models.PageOfPsc
}

// IsSuccess returns true when this get pscs o k response has a 2xx status code
func (o *GetPscsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get pscs o k response has a 3xx status code
func (o *GetPscsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pscs o k response has a 4xx status code
func (o *GetPscsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get pscs o k response has a 5xx status code
func (o *GetPscsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get pscs o k response a status code equal to that given
func (o *GetPscsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetPscsOK) Error() string {
	return fmt.Sprintf("[GET /v1/pscs][%d] getPscsOK  %+v", 200, o.Payload)
}

func (o *GetPscsOK) String() string {
	return fmt.Sprintf("[GET /v1/pscs][%d] getPscsOK  %+v", 200, o.Payload)
}

func (o *GetPscsOK) GetPayload() *models.PageOfPsc {
	return o.Payload
}

func (o *GetPscsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfPsc)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPscsBadRequest creates a GetPscsBadRequest with default headers values
func NewGetPscsBadRequest() *GetPscsBadRequest {
	return &GetPscsBadRequest{}
}

/*
GetPscsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPscsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get pscs bad request response has a 2xx status code
func (o *GetPscsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pscs bad request response has a 3xx status code
func (o *GetPscsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pscs bad request response has a 4xx status code
func (o *GetPscsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pscs bad request response has a 5xx status code
func (o *GetPscsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get pscs bad request response a status code equal to that given
func (o *GetPscsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetPscsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/pscs][%d] getPscsBadRequest  %+v", 400, o.Payload)
}

func (o *GetPscsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/pscs][%d] getPscsBadRequest  %+v", 400, o.Payload)
}

func (o *GetPscsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPscsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPscsInternalServerError creates a GetPscsInternalServerError with default headers values
func NewGetPscsInternalServerError() *GetPscsInternalServerError {
	return &GetPscsInternalServerError{}
}

/*
GetPscsInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GetPscsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get pscs internal server error response has a 2xx status code
func (o *GetPscsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pscs internal server error response has a 3xx status code
func (o *GetPscsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pscs internal server error response has a 4xx status code
func (o *GetPscsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get pscs internal server error response has a 5xx status code
func (o *GetPscsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get pscs internal server error response a status code equal to that given
func (o *GetPscsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetPscsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/pscs][%d] getPscsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPscsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/pscs][%d] getPscsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPscsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPscsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
