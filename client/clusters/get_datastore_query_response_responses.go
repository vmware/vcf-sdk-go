// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetDatastoreQueryResponseReader is a Reader for the GetDatastoreQueryResponse structure.
type GetDatastoreQueryResponseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDatastoreQueryResponseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDatastoreQueryResponseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDatastoreQueryResponseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDatastoreQueryResponseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDatastoreQueryResponseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDatastoreQueryResponseOK creates a GetDatastoreQueryResponseOK with default headers values
func NewGetDatastoreQueryResponseOK() *GetDatastoreQueryResponseOK {
	return &GetDatastoreQueryResponseOK{}
}

/*
GetDatastoreQueryResponseOK describes a response with status code 200, with default header values.

Ok
*/
type GetDatastoreQueryResponseOK struct {
	Payload *models.DatastoreQueryResponse
}

// IsSuccess returns true when this get datastore query response o k response has a 2xx status code
func (o *GetDatastoreQueryResponseOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get datastore query response o k response has a 3xx status code
func (o *GetDatastoreQueryResponseOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get datastore query response o k response has a 4xx status code
func (o *GetDatastoreQueryResponseOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get datastore query response o k response has a 5xx status code
func (o *GetDatastoreQueryResponseOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get datastore query response o k response a status code equal to that given
func (o *GetDatastoreQueryResponseOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetDatastoreQueryResponseOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/datastores/queries/{queryId}][%d] getDatastoreQueryResponseOK  %+v", 200, o.Payload)
}

func (o *GetDatastoreQueryResponseOK) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/datastores/queries/{queryId}][%d] getDatastoreQueryResponseOK  %+v", 200, o.Payload)
}

func (o *GetDatastoreQueryResponseOK) GetPayload() *models.DatastoreQueryResponse {
	return o.Payload
}

func (o *GetDatastoreQueryResponseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DatastoreQueryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatastoreQueryResponseBadRequest creates a GetDatastoreQueryResponseBadRequest with default headers values
func NewGetDatastoreQueryResponseBadRequest() *GetDatastoreQueryResponseBadRequest {
	return &GetDatastoreQueryResponseBadRequest{}
}

/*
GetDatastoreQueryResponseBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDatastoreQueryResponseBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get datastore query response bad request response has a 2xx status code
func (o *GetDatastoreQueryResponseBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get datastore query response bad request response has a 3xx status code
func (o *GetDatastoreQueryResponseBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get datastore query response bad request response has a 4xx status code
func (o *GetDatastoreQueryResponseBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get datastore query response bad request response has a 5xx status code
func (o *GetDatastoreQueryResponseBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get datastore query response bad request response a status code equal to that given
func (o *GetDatastoreQueryResponseBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetDatastoreQueryResponseBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/datastores/queries/{queryId}][%d] getDatastoreQueryResponseBadRequest  %+v", 400, o.Payload)
}

func (o *GetDatastoreQueryResponseBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/datastores/queries/{queryId}][%d] getDatastoreQueryResponseBadRequest  %+v", 400, o.Payload)
}

func (o *GetDatastoreQueryResponseBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDatastoreQueryResponseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatastoreQueryResponseNotFound creates a GetDatastoreQueryResponseNotFound with default headers values
func NewGetDatastoreQueryResponseNotFound() *GetDatastoreQueryResponseNotFound {
	return &GetDatastoreQueryResponseNotFound{}
}

/*
GetDatastoreQueryResponseNotFound describes a response with status code 404, with default header values.

Query Not Found
*/
type GetDatastoreQueryResponseNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get datastore query response not found response has a 2xx status code
func (o *GetDatastoreQueryResponseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get datastore query response not found response has a 3xx status code
func (o *GetDatastoreQueryResponseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get datastore query response not found response has a 4xx status code
func (o *GetDatastoreQueryResponseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get datastore query response not found response has a 5xx status code
func (o *GetDatastoreQueryResponseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get datastore query response not found response a status code equal to that given
func (o *GetDatastoreQueryResponseNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetDatastoreQueryResponseNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/datastores/queries/{queryId}][%d] getDatastoreQueryResponseNotFound  %+v", 404, o.Payload)
}

func (o *GetDatastoreQueryResponseNotFound) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/datastores/queries/{queryId}][%d] getDatastoreQueryResponseNotFound  %+v", 404, o.Payload)
}

func (o *GetDatastoreQueryResponseNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDatastoreQueryResponseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDatastoreQueryResponseInternalServerError creates a GetDatastoreQueryResponseInternalServerError with default headers values
func NewGetDatastoreQueryResponseInternalServerError() *GetDatastoreQueryResponseInternalServerError {
	return &GetDatastoreQueryResponseInternalServerError{}
}

/*
GetDatastoreQueryResponseInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDatastoreQueryResponseInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get datastore query response internal server error response has a 2xx status code
func (o *GetDatastoreQueryResponseInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get datastore query response internal server error response has a 3xx status code
func (o *GetDatastoreQueryResponseInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get datastore query response internal server error response has a 4xx status code
func (o *GetDatastoreQueryResponseInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get datastore query response internal server error response has a 5xx status code
func (o *GetDatastoreQueryResponseInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get datastore query response internal server error response a status code equal to that given
func (o *GetDatastoreQueryResponseInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetDatastoreQueryResponseInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/datastores/queries/{queryId}][%d] getDatastoreQueryResponseInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDatastoreQueryResponseInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/datastores/queries/{queryId}][%d] getDatastoreQueryResponseInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDatastoreQueryResponseInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDatastoreQueryResponseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
