// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetVdsesReader is a Reader for the GetVdses structure.
type GetVdsesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVdsesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVdsesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVdsesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVdsesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVdsesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVdsesOK creates a GetVdsesOK with default headers values
func NewGetVdsesOK() *GetVdsesOK {
	return &GetVdsesOK{}
}

/*
GetVdsesOK describes a response with status code 200, with default header values.

Ok
*/
type GetVdsesOK struct {
	Payload []*models.Vds
}

// IsSuccess returns true when this get vdses o k response has a 2xx status code
func (o *GetVdsesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vdses o k response has a 3xx status code
func (o *GetVdsesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vdses o k response has a 4xx status code
func (o *GetVdsesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vdses o k response has a 5xx status code
func (o *GetVdsesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vdses o k response a status code equal to that given
func (o *GetVdsesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetVdsesOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesOK  %+v", 200, o.Payload)
}

func (o *GetVdsesOK) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesOK  %+v", 200, o.Payload)
}

func (o *GetVdsesOK) GetPayload() []*models.Vds {
	return o.Payload
}

func (o *GetVdsesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVdsesBadRequest creates a GetVdsesBadRequest with default headers values
func NewGetVdsesBadRequest() *GetVdsesBadRequest {
	return &GetVdsesBadRequest{}
}

/*
GetVdsesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVdsesBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vdses bad request response has a 2xx status code
func (o *GetVdsesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vdses bad request response has a 3xx status code
func (o *GetVdsesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vdses bad request response has a 4xx status code
func (o *GetVdsesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vdses bad request response has a 5xx status code
func (o *GetVdsesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get vdses bad request response a status code equal to that given
func (o *GetVdsesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetVdsesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesBadRequest  %+v", 400, o.Payload)
}

func (o *GetVdsesBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesBadRequest  %+v", 400, o.Payload)
}

func (o *GetVdsesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVdsesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVdsesNotFound creates a GetVdsesNotFound with default headers values
func NewGetVdsesNotFound() *GetVdsesNotFound {
	return &GetVdsesNotFound{}
}

/*
GetVdsesNotFound describes a response with status code 404, with default header values.

Cluster Not Found
*/
type GetVdsesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vdses not found response has a 2xx status code
func (o *GetVdsesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vdses not found response has a 3xx status code
func (o *GetVdsesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vdses not found response has a 4xx status code
func (o *GetVdsesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vdses not found response has a 5xx status code
func (o *GetVdsesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vdses not found response a status code equal to that given
func (o *GetVdsesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetVdsesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesNotFound  %+v", 404, o.Payload)
}

func (o *GetVdsesNotFound) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesNotFound  %+v", 404, o.Payload)
}

func (o *GetVdsesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVdsesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVdsesInternalServerError creates a GetVdsesInternalServerError with default headers values
func NewGetVdsesInternalServerError() *GetVdsesInternalServerError {
	return &GetVdsesInternalServerError{}
}

/*
GetVdsesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVdsesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vdses internal server error response has a 2xx status code
func (o *GetVdsesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vdses internal server error response has a 3xx status code
func (o *GetVdsesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vdses internal server error response has a 4xx status code
func (o *GetVdsesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vdses internal server error response has a 5xx status code
func (o *GetVdsesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get vdses internal server error response a status code equal to that given
func (o *GetVdsesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetVdsesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVdsesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{clusterId}/vdses][%d] getVdsesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVdsesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVdsesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
