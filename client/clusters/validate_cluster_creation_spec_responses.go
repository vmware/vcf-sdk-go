// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// ValidateClusterCreationSpecReader is a Reader for the ValidateClusterCreationSpec structure.
type ValidateClusterCreationSpecReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateClusterCreationSpecReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateClusterCreationSpecOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateClusterCreationSpecBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateClusterCreationSpecInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/clusters/validations] validateClusterCreationSpec", response, response.Code())
	}
}

// NewValidateClusterCreationSpecOK creates a ValidateClusterCreationSpecOK with default headers values
func NewValidateClusterCreationSpecOK() *ValidateClusterCreationSpecOK {
	return &ValidateClusterCreationSpecOK{}
}

/*
ValidateClusterCreationSpecOK describes a response with status code 200, with default header values.

Ok
*/
type ValidateClusterCreationSpecOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate cluster creation spec o k response has a 2xx status code
func (o *ValidateClusterCreationSpecOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate cluster creation spec o k response has a 3xx status code
func (o *ValidateClusterCreationSpecOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate cluster creation spec o k response has a 4xx status code
func (o *ValidateClusterCreationSpecOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate cluster creation spec o k response has a 5xx status code
func (o *ValidateClusterCreationSpecOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate cluster creation spec o k response a status code equal to that given
func (o *ValidateClusterCreationSpecOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate cluster creation spec o k response
func (o *ValidateClusterCreationSpecOK) Code() int {
	return 200
}

func (o *ValidateClusterCreationSpecOK) Error() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClusterCreationSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateClusterCreationSpecOK) String() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClusterCreationSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateClusterCreationSpecOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateClusterCreationSpecOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateClusterCreationSpecBadRequest creates a ValidateClusterCreationSpecBadRequest with default headers values
func NewValidateClusterCreationSpecBadRequest() *ValidateClusterCreationSpecBadRequest {
	return &ValidateClusterCreationSpecBadRequest{}
}

/*
ValidateClusterCreationSpecBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateClusterCreationSpecBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate cluster creation spec bad request response has a 2xx status code
func (o *ValidateClusterCreationSpecBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate cluster creation spec bad request response has a 3xx status code
func (o *ValidateClusterCreationSpecBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate cluster creation spec bad request response has a 4xx status code
func (o *ValidateClusterCreationSpecBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate cluster creation spec bad request response has a 5xx status code
func (o *ValidateClusterCreationSpecBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate cluster creation spec bad request response a status code equal to that given
func (o *ValidateClusterCreationSpecBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate cluster creation spec bad request response
func (o *ValidateClusterCreationSpecBadRequest) Code() int {
	return 400
}

func (o *ValidateClusterCreationSpecBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClusterCreationSpecBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateClusterCreationSpecBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClusterCreationSpecBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateClusterCreationSpecBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateClusterCreationSpecBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateClusterCreationSpecInternalServerError creates a ValidateClusterCreationSpecInternalServerError with default headers values
func NewValidateClusterCreationSpecInternalServerError() *ValidateClusterCreationSpecInternalServerError {
	return &ValidateClusterCreationSpecInternalServerError{}
}

/*
ValidateClusterCreationSpecInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type ValidateClusterCreationSpecInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate cluster creation spec internal server error response has a 2xx status code
func (o *ValidateClusterCreationSpecInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate cluster creation spec internal server error response has a 3xx status code
func (o *ValidateClusterCreationSpecInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate cluster creation spec internal server error response has a 4xx status code
func (o *ValidateClusterCreationSpecInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate cluster creation spec internal server error response has a 5xx status code
func (o *ValidateClusterCreationSpecInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate cluster creation spec internal server error response a status code equal to that given
func (o *ValidateClusterCreationSpecInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate cluster creation spec internal server error response
func (o *ValidateClusterCreationSpecInternalServerError) Code() int {
	return 500
}

func (o *ValidateClusterCreationSpecInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClusterCreationSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateClusterCreationSpecInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/clusters/validations][%d] validateClusterCreationSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateClusterCreationSpecInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateClusterCreationSpecInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
