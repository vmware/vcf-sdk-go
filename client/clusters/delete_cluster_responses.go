// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// DeleteClusterReader is a Reader for the DeleteCluster structure.
type DeleteClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewDeleteClusterAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/clusters/{id}] deleteCluster", response, response.Code())
	}
}

// NewDeleteClusterOK creates a DeleteClusterOK with default headers values
func NewDeleteClusterOK() *DeleteClusterOK {
	return &DeleteClusterOK{}
}

/*
DeleteClusterOK describes a response with status code 200, with default header values.

OK
*/
type DeleteClusterOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this delete cluster o k response has a 2xx status code
func (o *DeleteClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete cluster o k response has a 3xx status code
func (o *DeleteClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster o k response has a 4xx status code
func (o *DeleteClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cluster o k response has a 5xx status code
func (o *DeleteClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster o k response a status code equal to that given
func (o *DeleteClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete cluster o k response
func (o *DeleteClusterOK) Code() int {
	return 200
}

func (o *DeleteClusterOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterOK  %+v", 200, o.Payload)
}

func (o *DeleteClusterOK) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterOK  %+v", 200, o.Payload)
}

func (o *DeleteClusterOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *DeleteClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterAccepted creates a DeleteClusterAccepted with default headers values
func NewDeleteClusterAccepted() *DeleteClusterAccepted {
	return &DeleteClusterAccepted{}
}

/*
DeleteClusterAccepted describes a response with status code 202, with default header values.

Accepted
*/
type DeleteClusterAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this delete cluster accepted response has a 2xx status code
func (o *DeleteClusterAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete cluster accepted response has a 3xx status code
func (o *DeleteClusterAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster accepted response has a 4xx status code
func (o *DeleteClusterAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cluster accepted response has a 5xx status code
func (o *DeleteClusterAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster accepted response a status code equal to that given
func (o *DeleteClusterAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the delete cluster accepted response
func (o *DeleteClusterAccepted) Code() int {
	return 202
}

func (o *DeleteClusterAccepted) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterAccepted  %+v", 202, o.Payload)
}

func (o *DeleteClusterAccepted) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterAccepted  %+v", 202, o.Payload)
}

func (o *DeleteClusterAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *DeleteClusterAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterBadRequest creates a DeleteClusterBadRequest with default headers values
func NewDeleteClusterBadRequest() *DeleteClusterBadRequest {
	return &DeleteClusterBadRequest{}
}

/*
DeleteClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteClusterBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cluster bad request response has a 2xx status code
func (o *DeleteClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster bad request response has a 3xx status code
func (o *DeleteClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster bad request response has a 4xx status code
func (o *DeleteClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster bad request response has a 5xx status code
func (o *DeleteClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster bad request response a status code equal to that given
func (o *DeleteClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete cluster bad request response
func (o *DeleteClusterBadRequest) Code() int {
	return 400
}

func (o *DeleteClusterBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteClusterBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterNotFound creates a DeleteClusterNotFound with default headers values
func NewDeleteClusterNotFound() *DeleteClusterNotFound {
	return &DeleteClusterNotFound{}
}

/*
DeleteClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteClusterNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cluster not found response has a 2xx status code
func (o *DeleteClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster not found response has a 3xx status code
func (o *DeleteClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster not found response has a 4xx status code
func (o *DeleteClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster not found response has a 5xx status code
func (o *DeleteClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster not found response a status code equal to that given
func (o *DeleteClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete cluster not found response
func (o *DeleteClusterNotFound) Code() int {
	return 404
}

func (o *DeleteClusterNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterNotFound  %+v", 404, o.Payload)
}

func (o *DeleteClusterNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterNotFound  %+v", 404, o.Payload)
}

func (o *DeleteClusterNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterInternalServerError creates a DeleteClusterInternalServerError with default headers values
func NewDeleteClusterInternalServerError() *DeleteClusterInternalServerError {
	return &DeleteClusterInternalServerError{}
}

/*
DeleteClusterInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type DeleteClusterInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete cluster internal server error response has a 2xx status code
func (o *DeleteClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster internal server error response has a 3xx status code
func (o *DeleteClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster internal server error response has a 4xx status code
func (o *DeleteClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cluster internal server error response has a 5xx status code
func (o *DeleteClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete cluster internal server error response a status code equal to that given
func (o *DeleteClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete cluster internal server error response
func (o *DeleteClusterInternalServerError) Code() int {
	return 500
}

func (o *DeleteClusterInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteClusterInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}][%d] deleteClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
