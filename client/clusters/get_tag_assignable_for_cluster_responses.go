// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetTagAssignableForClusterReader is a Reader for the GetTagAssignableForCluster structure.
type GetTagAssignableForClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagAssignableForClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagAssignableForClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTagAssignableForClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTagAssignableForClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/clusters/{id}/tags/assignable-tags] getTagAssignableForCluster", response, response.Code())
	}
}

// NewGetTagAssignableForClusterOK creates a GetTagAssignableForClusterOK with default headers values
func NewGetTagAssignableForClusterOK() *GetTagAssignableForClusterOK {
	return &GetTagAssignableForClusterOK{}
}

/*
GetTagAssignableForClusterOK describes a response with status code 200, with default header values.

Ok
*/
type GetTagAssignableForClusterOK struct {
	Payload *models.PageOfTag
}

// IsSuccess returns true when this get tag assignable for cluster o k response has a 2xx status code
func (o *GetTagAssignableForClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tag assignable for cluster o k response has a 3xx status code
func (o *GetTagAssignableForClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tag assignable for cluster o k response has a 4xx status code
func (o *GetTagAssignableForClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tag assignable for cluster o k response has a 5xx status code
func (o *GetTagAssignableForClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tag assignable for cluster o k response a status code equal to that given
func (o *GetTagAssignableForClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tag assignable for cluster o k response
func (o *GetTagAssignableForClusterOK) Code() int {
	return 200
}

func (o *GetTagAssignableForClusterOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags/assignable-tags][%d] getTagAssignableForClusterOK  %+v", 200, o.Payload)
}

func (o *GetTagAssignableForClusterOK) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags/assignable-tags][%d] getTagAssignableForClusterOK  %+v", 200, o.Payload)
}

func (o *GetTagAssignableForClusterOK) GetPayload() *models.PageOfTag {
	return o.Payload
}

func (o *GetTagAssignableForClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfTag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagAssignableForClusterBadRequest creates a GetTagAssignableForClusterBadRequest with default headers values
func NewGetTagAssignableForClusterBadRequest() *GetTagAssignableForClusterBadRequest {
	return &GetTagAssignableForClusterBadRequest{}
}

/*
GetTagAssignableForClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTagAssignableForClusterBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tag assignable for cluster bad request response has a 2xx status code
func (o *GetTagAssignableForClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tag assignable for cluster bad request response has a 3xx status code
func (o *GetTagAssignableForClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tag assignable for cluster bad request response has a 4xx status code
func (o *GetTagAssignableForClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tag assignable for cluster bad request response has a 5xx status code
func (o *GetTagAssignableForClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get tag assignable for cluster bad request response a status code equal to that given
func (o *GetTagAssignableForClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get tag assignable for cluster bad request response
func (o *GetTagAssignableForClusterBadRequest) Code() int {
	return 400
}

func (o *GetTagAssignableForClusterBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags/assignable-tags][%d] getTagAssignableForClusterBadRequest  %+v", 400, o.Payload)
}

func (o *GetTagAssignableForClusterBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags/assignable-tags][%d] getTagAssignableForClusterBadRequest  %+v", 400, o.Payload)
}

func (o *GetTagAssignableForClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTagAssignableForClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagAssignableForClusterInternalServerError creates a GetTagAssignableForClusterInternalServerError with default headers values
func NewGetTagAssignableForClusterInternalServerError() *GetTagAssignableForClusterInternalServerError {
	return &GetTagAssignableForClusterInternalServerError{}
}

/*
GetTagAssignableForClusterInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GetTagAssignableForClusterInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tag assignable for cluster internal server error response has a 2xx status code
func (o *GetTagAssignableForClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tag assignable for cluster internal server error response has a 3xx status code
func (o *GetTagAssignableForClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tag assignable for cluster internal server error response has a 4xx status code
func (o *GetTagAssignableForClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tag assignable for cluster internal server error response has a 5xx status code
func (o *GetTagAssignableForClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tag assignable for cluster internal server error response a status code equal to that given
func (o *GetTagAssignableForClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get tag assignable for cluster internal server error response
func (o *GetTagAssignableForClusterInternalServerError) Code() int {
	return 500
}

func (o *GetTagAssignableForClusterInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags/assignable-tags][%d] getTagAssignableForClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTagAssignableForClusterInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags/assignable-tags][%d] getTagAssignableForClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTagAssignableForClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTagAssignableForClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
