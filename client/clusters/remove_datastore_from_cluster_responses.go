// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// RemoveDatastoreFromClusterReader is a Reader for the RemoveDatastoreFromCluster structure.
type RemoveDatastoreFromClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveDatastoreFromClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveDatastoreFromClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewRemoveDatastoreFromClusterAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveDatastoreFromClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveDatastoreFromClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveDatastoreFromClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/clusters/{id}/datastores/{datastoreId}] removeDatastoreFromCluster", response, response.Code())
	}
}

// NewRemoveDatastoreFromClusterOK creates a RemoveDatastoreFromClusterOK with default headers values
func NewRemoveDatastoreFromClusterOK() *RemoveDatastoreFromClusterOK {
	return &RemoveDatastoreFromClusterOK{}
}

/*
RemoveDatastoreFromClusterOK describes a response with status code 200, with default header values.

Accepted
*/
type RemoveDatastoreFromClusterOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this remove datastore from cluster o k response has a 2xx status code
func (o *RemoveDatastoreFromClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove datastore from cluster o k response has a 3xx status code
func (o *RemoveDatastoreFromClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove datastore from cluster o k response has a 4xx status code
func (o *RemoveDatastoreFromClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove datastore from cluster o k response has a 5xx status code
func (o *RemoveDatastoreFromClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove datastore from cluster o k response a status code equal to that given
func (o *RemoveDatastoreFromClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove datastore from cluster o k response
func (o *RemoveDatastoreFromClusterOK) Code() int {
	return 200
}

func (o *RemoveDatastoreFromClusterOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterOK  %+v", 200, o.Payload)
}

func (o *RemoveDatastoreFromClusterOK) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterOK  %+v", 200, o.Payload)
}

func (o *RemoveDatastoreFromClusterOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *RemoveDatastoreFromClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveDatastoreFromClusterAccepted creates a RemoveDatastoreFromClusterAccepted with default headers values
func NewRemoveDatastoreFromClusterAccepted() *RemoveDatastoreFromClusterAccepted {
	return &RemoveDatastoreFromClusterAccepted{}
}

/*
RemoveDatastoreFromClusterAccepted describes a response with status code 202, with default header values.

Accepted
*/
type RemoveDatastoreFromClusterAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this remove datastore from cluster accepted response has a 2xx status code
func (o *RemoveDatastoreFromClusterAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove datastore from cluster accepted response has a 3xx status code
func (o *RemoveDatastoreFromClusterAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove datastore from cluster accepted response has a 4xx status code
func (o *RemoveDatastoreFromClusterAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove datastore from cluster accepted response has a 5xx status code
func (o *RemoveDatastoreFromClusterAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this remove datastore from cluster accepted response a status code equal to that given
func (o *RemoveDatastoreFromClusterAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the remove datastore from cluster accepted response
func (o *RemoveDatastoreFromClusterAccepted) Code() int {
	return 202
}

func (o *RemoveDatastoreFromClusterAccepted) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterAccepted  %+v", 202, o.Payload)
}

func (o *RemoveDatastoreFromClusterAccepted) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterAccepted  %+v", 202, o.Payload)
}

func (o *RemoveDatastoreFromClusterAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *RemoveDatastoreFromClusterAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveDatastoreFromClusterBadRequest creates a RemoveDatastoreFromClusterBadRequest with default headers values
func NewRemoveDatastoreFromClusterBadRequest() *RemoveDatastoreFromClusterBadRequest {
	return &RemoveDatastoreFromClusterBadRequest{}
}

/*
RemoveDatastoreFromClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RemoveDatastoreFromClusterBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove datastore from cluster bad request response has a 2xx status code
func (o *RemoveDatastoreFromClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove datastore from cluster bad request response has a 3xx status code
func (o *RemoveDatastoreFromClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove datastore from cluster bad request response has a 4xx status code
func (o *RemoveDatastoreFromClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove datastore from cluster bad request response has a 5xx status code
func (o *RemoveDatastoreFromClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove datastore from cluster bad request response a status code equal to that given
func (o *RemoveDatastoreFromClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove datastore from cluster bad request response
func (o *RemoveDatastoreFromClusterBadRequest) Code() int {
	return 400
}

func (o *RemoveDatastoreFromClusterBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveDatastoreFromClusterBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveDatastoreFromClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveDatastoreFromClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveDatastoreFromClusterNotFound creates a RemoveDatastoreFromClusterNotFound with default headers values
func NewRemoveDatastoreFromClusterNotFound() *RemoveDatastoreFromClusterNotFound {
	return &RemoveDatastoreFromClusterNotFound{}
}

/*
RemoveDatastoreFromClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RemoveDatastoreFromClusterNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove datastore from cluster not found response has a 2xx status code
func (o *RemoveDatastoreFromClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove datastore from cluster not found response has a 3xx status code
func (o *RemoveDatastoreFromClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove datastore from cluster not found response has a 4xx status code
func (o *RemoveDatastoreFromClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove datastore from cluster not found response has a 5xx status code
func (o *RemoveDatastoreFromClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove datastore from cluster not found response a status code equal to that given
func (o *RemoveDatastoreFromClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove datastore from cluster not found response
func (o *RemoveDatastoreFromClusterNotFound) Code() int {
	return 404
}

func (o *RemoveDatastoreFromClusterNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterNotFound  %+v", 404, o.Payload)
}

func (o *RemoveDatastoreFromClusterNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterNotFound  %+v", 404, o.Payload)
}

func (o *RemoveDatastoreFromClusterNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveDatastoreFromClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveDatastoreFromClusterInternalServerError creates a RemoveDatastoreFromClusterInternalServerError with default headers values
func NewRemoveDatastoreFromClusterInternalServerError() *RemoveDatastoreFromClusterInternalServerError {
	return &RemoveDatastoreFromClusterInternalServerError{}
}

/*
RemoveDatastoreFromClusterInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type RemoveDatastoreFromClusterInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove datastore from cluster internal server error response has a 2xx status code
func (o *RemoveDatastoreFromClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove datastore from cluster internal server error response has a 3xx status code
func (o *RemoveDatastoreFromClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove datastore from cluster internal server error response has a 4xx status code
func (o *RemoveDatastoreFromClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove datastore from cluster internal server error response has a 5xx status code
func (o *RemoveDatastoreFromClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove datastore from cluster internal server error response a status code equal to that given
func (o *RemoveDatastoreFromClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove datastore from cluster internal server error response
func (o *RemoveDatastoreFromClusterInternalServerError) Code() int {
	return 500
}

func (o *RemoveDatastoreFromClusterInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveDatastoreFromClusterInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/clusters/{id}/datastores/{datastoreId}][%d] removeDatastoreFromClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveDatastoreFromClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveDatastoreFromClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
