// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetTagsAssignedToClusterReader is a Reader for the GetTagsAssignedToCluster structure.
type GetTagsAssignedToClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsAssignedToClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagsAssignedToClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTagsAssignedToClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTagsAssignedToClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTagsAssignedToClusterOK creates a GetTagsAssignedToClusterOK with default headers values
func NewGetTagsAssignedToClusterOK() *GetTagsAssignedToClusterOK {
	return &GetTagsAssignedToClusterOK{}
}

/*
GetTagsAssignedToClusterOK describes a response with status code 200, with default header values.

Ok
*/
type GetTagsAssignedToClusterOK struct {
	Payload *models.PageOfTag
}

// IsSuccess returns true when this get tags assigned to cluster o k response has a 2xx status code
func (o *GetTagsAssignedToClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tags assigned to cluster o k response has a 3xx status code
func (o *GetTagsAssignedToClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to cluster o k response has a 4xx status code
func (o *GetTagsAssignedToClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags assigned to cluster o k response has a 5xx status code
func (o *GetTagsAssignedToClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags assigned to cluster o k response a status code equal to that given
func (o *GetTagsAssignedToClusterOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTagsAssignedToClusterOK) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags][%d] getTagsAssignedToClusterOK  %+v", 200, o.Payload)
}

func (o *GetTagsAssignedToClusterOK) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags][%d] getTagsAssignedToClusterOK  %+v", 200, o.Payload)
}

func (o *GetTagsAssignedToClusterOK) GetPayload() *models.PageOfTag {
	return o.Payload
}

func (o *GetTagsAssignedToClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfTag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsAssignedToClusterBadRequest creates a GetTagsAssignedToClusterBadRequest with default headers values
func NewGetTagsAssignedToClusterBadRequest() *GetTagsAssignedToClusterBadRequest {
	return &GetTagsAssignedToClusterBadRequest{}
}

/*
GetTagsAssignedToClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTagsAssignedToClusterBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tags assigned to cluster bad request response has a 2xx status code
func (o *GetTagsAssignedToClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags assigned to cluster bad request response has a 3xx status code
func (o *GetTagsAssignedToClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to cluster bad request response has a 4xx status code
func (o *GetTagsAssignedToClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags assigned to cluster bad request response has a 5xx status code
func (o *GetTagsAssignedToClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags assigned to cluster bad request response a status code equal to that given
func (o *GetTagsAssignedToClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetTagsAssignedToClusterBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags][%d] getTagsAssignedToClusterBadRequest  %+v", 400, o.Payload)
}

func (o *GetTagsAssignedToClusterBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags][%d] getTagsAssignedToClusterBadRequest  %+v", 400, o.Payload)
}

func (o *GetTagsAssignedToClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTagsAssignedToClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsAssignedToClusterInternalServerError creates a GetTagsAssignedToClusterInternalServerError with default headers values
func NewGetTagsAssignedToClusterInternalServerError() *GetTagsAssignedToClusterInternalServerError {
	return &GetTagsAssignedToClusterInternalServerError{}
}

/*
GetTagsAssignedToClusterInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GetTagsAssignedToClusterInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tags assigned to cluster internal server error response has a 2xx status code
func (o *GetTagsAssignedToClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags assigned to cluster internal server error response has a 3xx status code
func (o *GetTagsAssignedToClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to cluster internal server error response has a 4xx status code
func (o *GetTagsAssignedToClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags assigned to cluster internal server error response has a 5xx status code
func (o *GetTagsAssignedToClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tags assigned to cluster internal server error response a status code equal to that given
func (o *GetTagsAssignedToClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetTagsAssignedToClusterInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags][%d] getTagsAssignedToClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTagsAssignedToClusterInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/clusters/{id}/tags][%d] getTagsAssignedToClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTagsAssignedToClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTagsAssignedToClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
