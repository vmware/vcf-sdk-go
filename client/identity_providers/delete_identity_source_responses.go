// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package identity_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// DeleteIdentitySourceReader is a Reader for the DeleteIdentitySource structure.
type DeleteIdentitySourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIdentitySourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteIdentitySourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteIdentitySourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIdentitySourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteIdentitySourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteIdentitySourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}] deleteIdentitySource", response, response.Code())
	}
}

// NewDeleteIdentitySourceOK creates a DeleteIdentitySourceOK with default headers values
func NewDeleteIdentitySourceOK() *DeleteIdentitySourceOK {
	return &DeleteIdentitySourceOK{}
}

/*
DeleteIdentitySourceOK describes a response with status code 200, with default header values.

OK
*/
type DeleteIdentitySourceOK struct {
	Payload interface{}
}

// IsSuccess returns true when this delete identity source o k response has a 2xx status code
func (o *DeleteIdentitySourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete identity source o k response has a 3xx status code
func (o *DeleteIdentitySourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identity source o k response has a 4xx status code
func (o *DeleteIdentitySourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identity source o k response has a 5xx status code
func (o *DeleteIdentitySourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identity source o k response a status code equal to that given
func (o *DeleteIdentitySourceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete identity source o k response
func (o *DeleteIdentitySourceOK) Code() int {
	return 200
}

func (o *DeleteIdentitySourceOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentitySourceOK) String() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceOK  %+v", 200, o.Payload)
}

func (o *DeleteIdentitySourceOK) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteIdentitySourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentitySourceNoContent creates a DeleteIdentitySourceNoContent with default headers values
func NewDeleteIdentitySourceNoContent() *DeleteIdentitySourceNoContent {
	return &DeleteIdentitySourceNoContent{}
}

/*
DeleteIdentitySourceNoContent describes a response with status code 204, with default header values.

No content
*/
type DeleteIdentitySourceNoContent struct {
	Payload interface{}
}

// IsSuccess returns true when this delete identity source no content response has a 2xx status code
func (o *DeleteIdentitySourceNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete identity source no content response has a 3xx status code
func (o *DeleteIdentitySourceNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identity source no content response has a 4xx status code
func (o *DeleteIdentitySourceNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identity source no content response has a 5xx status code
func (o *DeleteIdentitySourceNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identity source no content response a status code equal to that given
func (o *DeleteIdentitySourceNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete identity source no content response
func (o *DeleteIdentitySourceNoContent) Code() int {
	return 204
}

func (o *DeleteIdentitySourceNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceNoContent  %+v", 204, o.Payload)
}

func (o *DeleteIdentitySourceNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceNoContent  %+v", 204, o.Payload)
}

func (o *DeleteIdentitySourceNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *DeleteIdentitySourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentitySourceBadRequest creates a DeleteIdentitySourceBadRequest with default headers values
func NewDeleteIdentitySourceBadRequest() *DeleteIdentitySourceBadRequest {
	return &DeleteIdentitySourceBadRequest{}
}

/*
DeleteIdentitySourceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteIdentitySourceBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete identity source bad request response has a 2xx status code
func (o *DeleteIdentitySourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identity source bad request response has a 3xx status code
func (o *DeleteIdentitySourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identity source bad request response has a 4xx status code
func (o *DeleteIdentitySourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identity source bad request response has a 5xx status code
func (o *DeleteIdentitySourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identity source bad request response a status code equal to that given
func (o *DeleteIdentitySourceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete identity source bad request response
func (o *DeleteIdentitySourceBadRequest) Code() int {
	return 400
}

func (o *DeleteIdentitySourceBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentitySourceBadRequest) String() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteIdentitySourceBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIdentitySourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentitySourceNotFound creates a DeleteIdentitySourceNotFound with default headers values
func NewDeleteIdentitySourceNotFound() *DeleteIdentitySourceNotFound {
	return &DeleteIdentitySourceNotFound{}
}

/*
DeleteIdentitySourceNotFound describes a response with status code 404, with default header values.

Identity Source not found
*/
type DeleteIdentitySourceNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete identity source not found response has a 2xx status code
func (o *DeleteIdentitySourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identity source not found response has a 3xx status code
func (o *DeleteIdentitySourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identity source not found response has a 4xx status code
func (o *DeleteIdentitySourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete identity source not found response has a 5xx status code
func (o *DeleteIdentitySourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete identity source not found response a status code equal to that given
func (o *DeleteIdentitySourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete identity source not found response
func (o *DeleteIdentitySourceNotFound) Code() int {
	return 404
}

func (o *DeleteIdentitySourceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentitySourceNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceNotFound  %+v", 404, o.Payload)
}

func (o *DeleteIdentitySourceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIdentitySourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIdentitySourceInternalServerError creates a DeleteIdentitySourceInternalServerError with default headers values
func NewDeleteIdentitySourceInternalServerError() *DeleteIdentitySourceInternalServerError {
	return &DeleteIdentitySourceInternalServerError{}
}

/*
DeleteIdentitySourceInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteIdentitySourceInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete identity source internal server error response has a 2xx status code
func (o *DeleteIdentitySourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete identity source internal server error response has a 3xx status code
func (o *DeleteIdentitySourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete identity source internal server error response has a 4xx status code
func (o *DeleteIdentitySourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete identity source internal server error response has a 5xx status code
func (o *DeleteIdentitySourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete identity source internal server error response a status code equal to that given
func (o *DeleteIdentitySourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete identity source internal server error response
func (o *DeleteIdentitySourceInternalServerError) Code() int {
	return 500
}

func (o *DeleteIdentitySourceInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentitySourceInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/identity-providers/{id}/identity-sources/{domainName}][%d] deleteIdentitySourceInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteIdentitySourceInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIdentitySourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
