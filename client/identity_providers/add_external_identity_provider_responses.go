// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package identity_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// AddExternalIdentityProviderReader is a Reader for the AddExternalIdentityProvider structure.
type AddExternalIdentityProviderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddExternalIdentityProviderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddExternalIdentityProviderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddExternalIdentityProviderCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddExternalIdentityProviderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddExternalIdentityProviderInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/identity-providers] addExternalIdentityProvider", response, response.Code())
	}
}

// NewAddExternalIdentityProviderOK creates a AddExternalIdentityProviderOK with default headers values
func NewAddExternalIdentityProviderOK() *AddExternalIdentityProviderOK {
	return &AddExternalIdentityProviderOK{}
}

/*
AddExternalIdentityProviderOK describes a response with status code 200, with default header values.

OK
*/
type AddExternalIdentityProviderOK struct {
	Payload interface{}
}

// IsSuccess returns true when this add external identity provider o k response has a 2xx status code
func (o *AddExternalIdentityProviderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add external identity provider o k response has a 3xx status code
func (o *AddExternalIdentityProviderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add external identity provider o k response has a 4xx status code
func (o *AddExternalIdentityProviderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add external identity provider o k response has a 5xx status code
func (o *AddExternalIdentityProviderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add external identity provider o k response a status code equal to that given
func (o *AddExternalIdentityProviderOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add external identity provider o k response
func (o *AddExternalIdentityProviderOK) Code() int {
	return 200
}

func (o *AddExternalIdentityProviderOK) Error() string {
	return fmt.Sprintf("[POST /v1/identity-providers][%d] addExternalIdentityProviderOK  %+v", 200, o.Payload)
}

func (o *AddExternalIdentityProviderOK) String() string {
	return fmt.Sprintf("[POST /v1/identity-providers][%d] addExternalIdentityProviderOK  %+v", 200, o.Payload)
}

func (o *AddExternalIdentityProviderOK) GetPayload() interface{} {
	return o.Payload
}

func (o *AddExternalIdentityProviderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddExternalIdentityProviderCreated creates a AddExternalIdentityProviderCreated with default headers values
func NewAddExternalIdentityProviderCreated() *AddExternalIdentityProviderCreated {
	return &AddExternalIdentityProviderCreated{}
}

/*
AddExternalIdentityProviderCreated describes a response with status code 201, with default header values.

Created
*/
type AddExternalIdentityProviderCreated struct {
	Payload interface{}
}

// IsSuccess returns true when this add external identity provider created response has a 2xx status code
func (o *AddExternalIdentityProviderCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add external identity provider created response has a 3xx status code
func (o *AddExternalIdentityProviderCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add external identity provider created response has a 4xx status code
func (o *AddExternalIdentityProviderCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add external identity provider created response has a 5xx status code
func (o *AddExternalIdentityProviderCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add external identity provider created response a status code equal to that given
func (o *AddExternalIdentityProviderCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add external identity provider created response
func (o *AddExternalIdentityProviderCreated) Code() int {
	return 201
}

func (o *AddExternalIdentityProviderCreated) Error() string {
	return fmt.Sprintf("[POST /v1/identity-providers][%d] addExternalIdentityProviderCreated  %+v", 201, o.Payload)
}

func (o *AddExternalIdentityProviderCreated) String() string {
	return fmt.Sprintf("[POST /v1/identity-providers][%d] addExternalIdentityProviderCreated  %+v", 201, o.Payload)
}

func (o *AddExternalIdentityProviderCreated) GetPayload() interface{} {
	return o.Payload
}

func (o *AddExternalIdentityProviderCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddExternalIdentityProviderBadRequest creates a AddExternalIdentityProviderBadRequest with default headers values
func NewAddExternalIdentityProviderBadRequest() *AddExternalIdentityProviderBadRequest {
	return &AddExternalIdentityProviderBadRequest{}
}

/*
AddExternalIdentityProviderBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddExternalIdentityProviderBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this add external identity provider bad request response has a 2xx status code
func (o *AddExternalIdentityProviderBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add external identity provider bad request response has a 3xx status code
func (o *AddExternalIdentityProviderBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add external identity provider bad request response has a 4xx status code
func (o *AddExternalIdentityProviderBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add external identity provider bad request response has a 5xx status code
func (o *AddExternalIdentityProviderBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add external identity provider bad request response a status code equal to that given
func (o *AddExternalIdentityProviderBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add external identity provider bad request response
func (o *AddExternalIdentityProviderBadRequest) Code() int {
	return 400
}

func (o *AddExternalIdentityProviderBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/identity-providers][%d] addExternalIdentityProviderBadRequest  %+v", 400, o.Payload)
}

func (o *AddExternalIdentityProviderBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/identity-providers][%d] addExternalIdentityProviderBadRequest  %+v", 400, o.Payload)
}

func (o *AddExternalIdentityProviderBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddExternalIdentityProviderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddExternalIdentityProviderInternalServerError creates a AddExternalIdentityProviderInternalServerError with default headers values
func NewAddExternalIdentityProviderInternalServerError() *AddExternalIdentityProviderInternalServerError {
	return &AddExternalIdentityProviderInternalServerError{}
}

/*
AddExternalIdentityProviderInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type AddExternalIdentityProviderInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this add external identity provider internal server error response has a 2xx status code
func (o *AddExternalIdentityProviderInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add external identity provider internal server error response has a 3xx status code
func (o *AddExternalIdentityProviderInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add external identity provider internal server error response has a 4xx status code
func (o *AddExternalIdentityProviderInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add external identity provider internal server error response has a 5xx status code
func (o *AddExternalIdentityProviderInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add external identity provider internal server error response a status code equal to that given
func (o *AddExternalIdentityProviderInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add external identity provider internal server error response
func (o *AddExternalIdentityProviderInternalServerError) Code() int {
	return 500
}

func (o *AddExternalIdentityProviderInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/identity-providers][%d] addExternalIdentityProviderInternalServerError  %+v", 500, o.Payload)
}

func (o *AddExternalIdentityProviderInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/identity-providers][%d] addExternalIdentityProviderInternalServerError  %+v", 500, o.Payload)
}

func (o *AddExternalIdentityProviderInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *AddExternalIdentityProviderInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
