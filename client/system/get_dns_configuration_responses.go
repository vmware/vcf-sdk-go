// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetDNSConfigurationReader is a Reader for the GetDNSConfiguration structure.
type GetDNSConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDNSConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDNSConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDNSConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDNSConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDNSConfigurationOK creates a GetDNSConfigurationOK with default headers values
func NewGetDNSConfigurationOK() *GetDNSConfigurationOK {
	return &GetDNSConfigurationOK{}
}

/*
GetDNSConfigurationOK describes a response with status code 200, with default header values.

Ok
*/
type GetDNSConfigurationOK struct {
	Payload *models.DNSConfiguration
}

// IsSuccess returns true when this get Dns configuration o k response has a 2xx status code
func (o *GetDNSConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Dns configuration o k response has a 3xx status code
func (o *GetDNSConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Dns configuration o k response has a 4xx status code
func (o *GetDNSConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Dns configuration o k response has a 5xx status code
func (o *GetDNSConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Dns configuration o k response a status code equal to that given
func (o *GetDNSConfigurationOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetDNSConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration][%d] getDnsConfigurationOK  %+v", 200, o.Payload)
}

func (o *GetDNSConfigurationOK) String() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration][%d] getDnsConfigurationOK  %+v", 200, o.Payload)
}

func (o *GetDNSConfigurationOK) GetPayload() *models.DNSConfiguration {
	return o.Payload
}

func (o *GetDNSConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DNSConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDNSConfigurationBadRequest creates a GetDNSConfigurationBadRequest with default headers values
func NewGetDNSConfigurationBadRequest() *GetDNSConfigurationBadRequest {
	return &GetDNSConfigurationBadRequest{}
}

/*
GetDNSConfigurationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDNSConfigurationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Dns configuration bad request response has a 2xx status code
func (o *GetDNSConfigurationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Dns configuration bad request response has a 3xx status code
func (o *GetDNSConfigurationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Dns configuration bad request response has a 4xx status code
func (o *GetDNSConfigurationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Dns configuration bad request response has a 5xx status code
func (o *GetDNSConfigurationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Dns configuration bad request response a status code equal to that given
func (o *GetDNSConfigurationBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetDNSConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration][%d] getDnsConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GetDNSConfigurationBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration][%d] getDnsConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GetDNSConfigurationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDNSConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDNSConfigurationInternalServerError creates a GetDNSConfigurationInternalServerError with default headers values
func NewGetDNSConfigurationInternalServerError() *GetDNSConfigurationInternalServerError {
	return &GetDNSConfigurationInternalServerError{}
}

/*
GetDNSConfigurationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetDNSConfigurationInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Dns configuration internal server error response has a 2xx status code
func (o *GetDNSConfigurationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Dns configuration internal server error response has a 3xx status code
func (o *GetDNSConfigurationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Dns configuration internal server error response has a 4xx status code
func (o *GetDNSConfigurationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Dns configuration internal server error response has a 5xx status code
func (o *GetDNSConfigurationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Dns configuration internal server error response a status code equal to that given
func (o *GetDNSConfigurationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetDNSConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration][%d] getDnsConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDNSConfigurationInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/dns-configuration][%d] getDnsConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDNSConfigurationInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDNSConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
