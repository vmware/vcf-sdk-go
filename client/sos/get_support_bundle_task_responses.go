// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package sos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetSupportBundleTaskReader is a Reader for the GetSupportBundleTask structure.
type GetSupportBundleTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSupportBundleTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSupportBundleTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSupportBundleTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSupportBundleTaskUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSupportBundleTaskInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/system/support-bundles] getSupportBundleTask", response, response.Code())
	}
}

// NewGetSupportBundleTaskOK creates a GetSupportBundleTaskOK with default headers values
func NewGetSupportBundleTaskOK() *GetSupportBundleTaskOK {
	return &GetSupportBundleTaskOK{}
}

/*
GetSupportBundleTaskOK describes a response with status code 200, with default header values.

Ok
*/
type GetSupportBundleTaskOK struct {
	Payload *models.PageOfSupportBundle
}

// IsSuccess returns true when this get support bundle task o k response has a 2xx status code
func (o *GetSupportBundleTaskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get support bundle task o k response has a 3xx status code
func (o *GetSupportBundleTaskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get support bundle task o k response has a 4xx status code
func (o *GetSupportBundleTaskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get support bundle task o k response has a 5xx status code
func (o *GetSupportBundleTaskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get support bundle task o k response a status code equal to that given
func (o *GetSupportBundleTaskOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get support bundle task o k response
func (o *GetSupportBundleTaskOK) Code() int {
	return 200
}

func (o *GetSupportBundleTaskOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getSupportBundleTaskOK  %+v", 200, o.Payload)
}

func (o *GetSupportBundleTaskOK) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getSupportBundleTaskOK  %+v", 200, o.Payload)
}

func (o *GetSupportBundleTaskOK) GetPayload() *models.PageOfSupportBundle {
	return o.Payload
}

func (o *GetSupportBundleTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfSupportBundle)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSupportBundleTaskBadRequest creates a GetSupportBundleTaskBadRequest with default headers values
func NewGetSupportBundleTaskBadRequest() *GetSupportBundleTaskBadRequest {
	return &GetSupportBundleTaskBadRequest{}
}

/*
GetSupportBundleTaskBadRequest describes a response with status code 400, with default header values.

Bad request! Invalid Headers or Data. Error: {error}
*/
type GetSupportBundleTaskBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get support bundle task bad request response has a 2xx status code
func (o *GetSupportBundleTaskBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get support bundle task bad request response has a 3xx status code
func (o *GetSupportBundleTaskBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get support bundle task bad request response has a 4xx status code
func (o *GetSupportBundleTaskBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get support bundle task bad request response has a 5xx status code
func (o *GetSupportBundleTaskBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get support bundle task bad request response a status code equal to that given
func (o *GetSupportBundleTaskBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get support bundle task bad request response
func (o *GetSupportBundleTaskBadRequest) Code() int {
	return 400
}

func (o *GetSupportBundleTaskBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getSupportBundleTaskBadRequest  %+v", 400, o.Payload)
}

func (o *GetSupportBundleTaskBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getSupportBundleTaskBadRequest  %+v", 400, o.Payload)
}

func (o *GetSupportBundleTaskBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSupportBundleTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSupportBundleTaskUnauthorized creates a GetSupportBundleTaskUnauthorized with default headers values
func NewGetSupportBundleTaskUnauthorized() *GetSupportBundleTaskUnauthorized {
	return &GetSupportBundleTaskUnauthorized{}
}

/*
GetSupportBundleTaskUnauthorized describes a response with status code 401, with default header values.

Bad request! Authorization Header is missing or not in correct format.
*/
type GetSupportBundleTaskUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get support bundle task unauthorized response has a 2xx status code
func (o *GetSupportBundleTaskUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get support bundle task unauthorized response has a 3xx status code
func (o *GetSupportBundleTaskUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get support bundle task unauthorized response has a 4xx status code
func (o *GetSupportBundleTaskUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get support bundle task unauthorized response has a 5xx status code
func (o *GetSupportBundleTaskUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get support bundle task unauthorized response a status code equal to that given
func (o *GetSupportBundleTaskUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get support bundle task unauthorized response
func (o *GetSupportBundleTaskUnauthorized) Code() int {
	return 401
}

func (o *GetSupportBundleTaskUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getSupportBundleTaskUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSupportBundleTaskUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getSupportBundleTaskUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSupportBundleTaskUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSupportBundleTaskUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSupportBundleTaskInternalServerError creates a GetSupportBundleTaskInternalServerError with default headers values
func NewGetSupportBundleTaskInternalServerError() *GetSupportBundleTaskInternalServerError {
	return &GetSupportBundleTaskInternalServerError{}
}

/*
GetSupportBundleTaskInternalServerError describes a response with status code 500, with default header values.

Something went wrong. Internal server error occurred. Error {error}
*/
type GetSupportBundleTaskInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get support bundle task internal server error response has a 2xx status code
func (o *GetSupportBundleTaskInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get support bundle task internal server error response has a 3xx status code
func (o *GetSupportBundleTaskInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get support bundle task internal server error response has a 4xx status code
func (o *GetSupportBundleTaskInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get support bundle task internal server error response has a 5xx status code
func (o *GetSupportBundleTaskInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get support bundle task internal server error response a status code equal to that given
func (o *GetSupportBundleTaskInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get support bundle task internal server error response
func (o *GetSupportBundleTaskInternalServerError) Code() int {
	return 500
}

func (o *GetSupportBundleTaskInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getSupportBundleTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSupportBundleTaskInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles][%d] getSupportBundleTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSupportBundleTaskInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSupportBundleTaskInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
