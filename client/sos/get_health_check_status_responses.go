// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package sos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetHealthCheckStatusReader is a Reader for the GetHealthCheckStatus structure.
type GetHealthCheckStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHealthCheckStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHealthCheckStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetHealthCheckStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetHealthCheckStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHealthCheckStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/system/health-summary/{id}] getHealthCheckStatus", response, response.Code())
	}
}

// NewGetHealthCheckStatusOK creates a GetHealthCheckStatusOK with default headers values
func NewGetHealthCheckStatusOK() *GetHealthCheckStatusOK {
	return &GetHealthCheckStatusOK{}
}

/*
GetHealthCheckStatusOK describes a response with status code 200, with default header values.

Ok
*/
type GetHealthCheckStatusOK struct {
	Payload *models.HealthSummary
}

// IsSuccess returns true when this get health check status o k response has a 2xx status code
func (o *GetHealthCheckStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get health check status o k response has a 3xx status code
func (o *GetHealthCheckStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get health check status o k response has a 4xx status code
func (o *GetHealthCheckStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get health check status o k response has a 5xx status code
func (o *GetHealthCheckStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get health check status o k response a status code equal to that given
func (o *GetHealthCheckStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get health check status o k response
func (o *GetHealthCheckStatusOK) Code() int {
	return 200
}

func (o *GetHealthCheckStatusOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/health-summary/{id}][%d] getHealthCheckStatusOK  %+v", 200, o.Payload)
}

func (o *GetHealthCheckStatusOK) String() string {
	return fmt.Sprintf("[GET /v1/system/health-summary/{id}][%d] getHealthCheckStatusOK  %+v", 200, o.Payload)
}

func (o *GetHealthCheckStatusOK) GetPayload() *models.HealthSummary {
	return o.Payload
}

func (o *GetHealthCheckStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHealthCheckStatusBadRequest creates a GetHealthCheckStatusBadRequest with default headers values
func NewGetHealthCheckStatusBadRequest() *GetHealthCheckStatusBadRequest {
	return &GetHealthCheckStatusBadRequest{}
}

/*
GetHealthCheckStatusBadRequest describes a response with status code 400, with default header values.

Bad request! Invalid Headers or Data. Error: {error}
*/
type GetHealthCheckStatusBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get health check status bad request response has a 2xx status code
func (o *GetHealthCheckStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get health check status bad request response has a 3xx status code
func (o *GetHealthCheckStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get health check status bad request response has a 4xx status code
func (o *GetHealthCheckStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get health check status bad request response has a 5xx status code
func (o *GetHealthCheckStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get health check status bad request response a status code equal to that given
func (o *GetHealthCheckStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get health check status bad request response
func (o *GetHealthCheckStatusBadRequest) Code() int {
	return 400
}

func (o *GetHealthCheckStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/health-summary/{id}][%d] getHealthCheckStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetHealthCheckStatusBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/health-summary/{id}][%d] getHealthCheckStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetHealthCheckStatusBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHealthCheckStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHealthCheckStatusUnauthorized creates a GetHealthCheckStatusUnauthorized with default headers values
func NewGetHealthCheckStatusUnauthorized() *GetHealthCheckStatusUnauthorized {
	return &GetHealthCheckStatusUnauthorized{}
}

/*
GetHealthCheckStatusUnauthorized describes a response with status code 401, with default header values.

Bad request! Authorization Header is missing or not in correct format.
*/
type GetHealthCheckStatusUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get health check status unauthorized response has a 2xx status code
func (o *GetHealthCheckStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get health check status unauthorized response has a 3xx status code
func (o *GetHealthCheckStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get health check status unauthorized response has a 4xx status code
func (o *GetHealthCheckStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get health check status unauthorized response has a 5xx status code
func (o *GetHealthCheckStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get health check status unauthorized response a status code equal to that given
func (o *GetHealthCheckStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get health check status unauthorized response
func (o *GetHealthCheckStatusUnauthorized) Code() int {
	return 401
}

func (o *GetHealthCheckStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/system/health-summary/{id}][%d] getHealthCheckStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetHealthCheckStatusUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/system/health-summary/{id}][%d] getHealthCheckStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetHealthCheckStatusUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHealthCheckStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHealthCheckStatusInternalServerError creates a GetHealthCheckStatusInternalServerError with default headers values
func NewGetHealthCheckStatusInternalServerError() *GetHealthCheckStatusInternalServerError {
	return &GetHealthCheckStatusInternalServerError{}
}

/*
GetHealthCheckStatusInternalServerError describes a response with status code 500, with default header values.

Something went wrong. Internal server error occurred. Error {error}
*/
type GetHealthCheckStatusInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get health check status internal server error response has a 2xx status code
func (o *GetHealthCheckStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get health check status internal server error response has a 3xx status code
func (o *GetHealthCheckStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get health check status internal server error response has a 4xx status code
func (o *GetHealthCheckStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get health check status internal server error response has a 5xx status code
func (o *GetHealthCheckStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get health check status internal server error response a status code equal to that given
func (o *GetHealthCheckStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get health check status internal server error response
func (o *GetHealthCheckStatusInternalServerError) Code() int {
	return 500
}

func (o *GetHealthCheckStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/health-summary/{id}][%d] getHealthCheckStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHealthCheckStatusInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/health-summary/{id}][%d] getHealthCheckStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHealthCheckStatusInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHealthCheckStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
