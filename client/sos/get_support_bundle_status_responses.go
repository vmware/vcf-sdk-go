// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package sos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetSupportBundleStatusReader is a Reader for the GetSupportBundleStatus structure.
type GetSupportBundleStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSupportBundleStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSupportBundleStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSupportBundleStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSupportBundleStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSupportBundleStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/system/support-bundles/{id}] getSupportBundleStatus", response, response.Code())
	}
}

// NewGetSupportBundleStatusOK creates a GetSupportBundleStatusOK with default headers values
func NewGetSupportBundleStatusOK() *GetSupportBundleStatusOK {
	return &GetSupportBundleStatusOK{}
}

/*
GetSupportBundleStatusOK describes a response with status code 200, with default header values.

Ok
*/
type GetSupportBundleStatusOK struct {
	Payload *models.SupportBundle
}

// IsSuccess returns true when this get support bundle status o k response has a 2xx status code
func (o *GetSupportBundleStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get support bundle status o k response has a 3xx status code
func (o *GetSupportBundleStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get support bundle status o k response has a 4xx status code
func (o *GetSupportBundleStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get support bundle status o k response has a 5xx status code
func (o *GetSupportBundleStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get support bundle status o k response a status code equal to that given
func (o *GetSupportBundleStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get support bundle status o k response
func (o *GetSupportBundleStatusOK) Code() int {
	return 200
}

func (o *GetSupportBundleStatusOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles/{id}][%d] getSupportBundleStatusOK  %+v", 200, o.Payload)
}

func (o *GetSupportBundleStatusOK) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles/{id}][%d] getSupportBundleStatusOK  %+v", 200, o.Payload)
}

func (o *GetSupportBundleStatusOK) GetPayload() *models.SupportBundle {
	return o.Payload
}

func (o *GetSupportBundleStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SupportBundle)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSupportBundleStatusBadRequest creates a GetSupportBundleStatusBadRequest with default headers values
func NewGetSupportBundleStatusBadRequest() *GetSupportBundleStatusBadRequest {
	return &GetSupportBundleStatusBadRequest{}
}

/*
GetSupportBundleStatusBadRequest describes a response with status code 400, with default header values.

Bad request! Invalid Headers or Data. Error: {error}
*/
type GetSupportBundleStatusBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get support bundle status bad request response has a 2xx status code
func (o *GetSupportBundleStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get support bundle status bad request response has a 3xx status code
func (o *GetSupportBundleStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get support bundle status bad request response has a 4xx status code
func (o *GetSupportBundleStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get support bundle status bad request response has a 5xx status code
func (o *GetSupportBundleStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get support bundle status bad request response a status code equal to that given
func (o *GetSupportBundleStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get support bundle status bad request response
func (o *GetSupportBundleStatusBadRequest) Code() int {
	return 400
}

func (o *GetSupportBundleStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles/{id}][%d] getSupportBundleStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetSupportBundleStatusBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles/{id}][%d] getSupportBundleStatusBadRequest  %+v", 400, o.Payload)
}

func (o *GetSupportBundleStatusBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSupportBundleStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSupportBundleStatusUnauthorized creates a GetSupportBundleStatusUnauthorized with default headers values
func NewGetSupportBundleStatusUnauthorized() *GetSupportBundleStatusUnauthorized {
	return &GetSupportBundleStatusUnauthorized{}
}

/*
GetSupportBundleStatusUnauthorized describes a response with status code 401, with default header values.

Bad request! Authorization Header is missing or not in correct format.
*/
type GetSupportBundleStatusUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get support bundle status unauthorized response has a 2xx status code
func (o *GetSupportBundleStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get support bundle status unauthorized response has a 3xx status code
func (o *GetSupportBundleStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get support bundle status unauthorized response has a 4xx status code
func (o *GetSupportBundleStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get support bundle status unauthorized response has a 5xx status code
func (o *GetSupportBundleStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get support bundle status unauthorized response a status code equal to that given
func (o *GetSupportBundleStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get support bundle status unauthorized response
func (o *GetSupportBundleStatusUnauthorized) Code() int {
	return 401
}

func (o *GetSupportBundleStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles/{id}][%d] getSupportBundleStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSupportBundleStatusUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles/{id}][%d] getSupportBundleStatusUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSupportBundleStatusUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSupportBundleStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSupportBundleStatusInternalServerError creates a GetSupportBundleStatusInternalServerError with default headers values
func NewGetSupportBundleStatusInternalServerError() *GetSupportBundleStatusInternalServerError {
	return &GetSupportBundleStatusInternalServerError{}
}

/*
GetSupportBundleStatusInternalServerError describes a response with status code 500, with default header values.

Something went wrong. Internal server error occurred. Error {error}
*/
type GetSupportBundleStatusInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get support bundle status internal server error response has a 2xx status code
func (o *GetSupportBundleStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get support bundle status internal server error response has a 3xx status code
func (o *GetSupportBundleStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get support bundle status internal server error response has a 4xx status code
func (o *GetSupportBundleStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get support bundle status internal server error response has a 5xx status code
func (o *GetSupportBundleStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get support bundle status internal server error response a status code equal to that given
func (o *GetSupportBundleStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get support bundle status internal server error response
func (o *GetSupportBundleStatusInternalServerError) Code() int {
	return 500
}

func (o *GetSupportBundleStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles/{id}][%d] getSupportBundleStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSupportBundleStatusInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/support-bundles/{id}][%d] getSupportBundleStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSupportBundleStatusInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSupportBundleStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
