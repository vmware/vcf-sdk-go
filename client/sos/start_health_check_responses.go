// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package sos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// StartHealthCheckReader is a Reader for the StartHealthCheck structure.
type StartHealthCheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartHealthCheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartHealthCheckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewStartHealthCheckAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartHealthCheckBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStartHealthCheckUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewStartHealthCheckConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartHealthCheckInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/system/health-summary] startHealthCheck", response, response.Code())
	}
}

// NewStartHealthCheckOK creates a StartHealthCheckOK with default headers values
func NewStartHealthCheckOK() *StartHealthCheckOK {
	return &StartHealthCheckOK{}
}

/*
StartHealthCheckOK describes a response with status code 200, with default header values.

OK
*/
type StartHealthCheckOK struct {
	Payload *models.HealthSummary
}

// IsSuccess returns true when this start health check o k response has a 2xx status code
func (o *StartHealthCheckOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start health check o k response has a 3xx status code
func (o *StartHealthCheckOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start health check o k response has a 4xx status code
func (o *StartHealthCheckOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start health check o k response has a 5xx status code
func (o *StartHealthCheckOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start health check o k response a status code equal to that given
func (o *StartHealthCheckOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start health check o k response
func (o *StartHealthCheckOK) Code() int {
	return 200
}

func (o *StartHealthCheckOK) Error() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckOK  %+v", 200, o.Payload)
}

func (o *StartHealthCheckOK) String() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckOK  %+v", 200, o.Payload)
}

func (o *StartHealthCheckOK) GetPayload() *models.HealthSummary {
	return o.Payload
}

func (o *StartHealthCheckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartHealthCheckAccepted creates a StartHealthCheckAccepted with default headers values
func NewStartHealthCheckAccepted() *StartHealthCheckAccepted {
	return &StartHealthCheckAccepted{}
}

/*
StartHealthCheckAccepted describes a response with status code 202, with default header values.

Accepted
*/
type StartHealthCheckAccepted struct {
	Payload *models.HealthSummary
}

// IsSuccess returns true when this start health check accepted response has a 2xx status code
func (o *StartHealthCheckAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start health check accepted response has a 3xx status code
func (o *StartHealthCheckAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start health check accepted response has a 4xx status code
func (o *StartHealthCheckAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this start health check accepted response has a 5xx status code
func (o *StartHealthCheckAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this start health check accepted response a status code equal to that given
func (o *StartHealthCheckAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the start health check accepted response
func (o *StartHealthCheckAccepted) Code() int {
	return 202
}

func (o *StartHealthCheckAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckAccepted  %+v", 202, o.Payload)
}

func (o *StartHealthCheckAccepted) String() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckAccepted  %+v", 202, o.Payload)
}

func (o *StartHealthCheckAccepted) GetPayload() *models.HealthSummary {
	return o.Payload
}

func (o *StartHealthCheckAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthSummary)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartHealthCheckBadRequest creates a StartHealthCheckBadRequest with default headers values
func NewStartHealthCheckBadRequest() *StartHealthCheckBadRequest {
	return &StartHealthCheckBadRequest{}
}

/*
StartHealthCheckBadRequest describes a response with status code 400, with default header values.

Bad request! Invalid Headers or Data. Error: {error}
*/
type StartHealthCheckBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this start health check bad request response has a 2xx status code
func (o *StartHealthCheckBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start health check bad request response has a 3xx status code
func (o *StartHealthCheckBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start health check bad request response has a 4xx status code
func (o *StartHealthCheckBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start health check bad request response has a 5xx status code
func (o *StartHealthCheckBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start health check bad request response a status code equal to that given
func (o *StartHealthCheckBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start health check bad request response
func (o *StartHealthCheckBadRequest) Code() int {
	return 400
}

func (o *StartHealthCheckBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckBadRequest  %+v", 400, o.Payload)
}

func (o *StartHealthCheckBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckBadRequest  %+v", 400, o.Payload)
}

func (o *StartHealthCheckBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartHealthCheckBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartHealthCheckUnauthorized creates a StartHealthCheckUnauthorized with default headers values
func NewStartHealthCheckUnauthorized() *StartHealthCheckUnauthorized {
	return &StartHealthCheckUnauthorized{}
}

/*
StartHealthCheckUnauthorized describes a response with status code 401, with default header values.

Bad request! Authorization Header is missing or not in correct format.
*/
type StartHealthCheckUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this start health check unauthorized response has a 2xx status code
func (o *StartHealthCheckUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start health check unauthorized response has a 3xx status code
func (o *StartHealthCheckUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start health check unauthorized response has a 4xx status code
func (o *StartHealthCheckUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this start health check unauthorized response has a 5xx status code
func (o *StartHealthCheckUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this start health check unauthorized response a status code equal to that given
func (o *StartHealthCheckUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the start health check unauthorized response
func (o *StartHealthCheckUnauthorized) Code() int {
	return 401
}

func (o *StartHealthCheckUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckUnauthorized  %+v", 401, o.Payload)
}

func (o *StartHealthCheckUnauthorized) String() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckUnauthorized  %+v", 401, o.Payload)
}

func (o *StartHealthCheckUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartHealthCheckUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartHealthCheckConflict creates a StartHealthCheckConflict with default headers values
func NewStartHealthCheckConflict() *StartHealthCheckConflict {
	return &StartHealthCheckConflict{}
}

/*
StartHealthCheckConflict describes a response with status code 409, with default header values.

Operation is in progress for Id {id}. Wait for the operation to complete.
*/
type StartHealthCheckConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this start health check conflict response has a 2xx status code
func (o *StartHealthCheckConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start health check conflict response has a 3xx status code
func (o *StartHealthCheckConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start health check conflict response has a 4xx status code
func (o *StartHealthCheckConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this start health check conflict response has a 5xx status code
func (o *StartHealthCheckConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this start health check conflict response a status code equal to that given
func (o *StartHealthCheckConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the start health check conflict response
func (o *StartHealthCheckConflict) Code() int {
	return 409
}

func (o *StartHealthCheckConflict) Error() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckConflict  %+v", 409, o.Payload)
}

func (o *StartHealthCheckConflict) String() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckConflict  %+v", 409, o.Payload)
}

func (o *StartHealthCheckConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartHealthCheckConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartHealthCheckInternalServerError creates a StartHealthCheckInternalServerError with default headers values
func NewStartHealthCheckInternalServerError() *StartHealthCheckInternalServerError {
	return &StartHealthCheckInternalServerError{}
}

/*
StartHealthCheckInternalServerError describes a response with status code 500, with default header values.

Something went wrong. Internal server error occurred. Error {error}
*/
type StartHealthCheckInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this start health check internal server error response has a 2xx status code
func (o *StartHealthCheckInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start health check internal server error response has a 3xx status code
func (o *StartHealthCheckInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start health check internal server error response has a 4xx status code
func (o *StartHealthCheckInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start health check internal server error response has a 5xx status code
func (o *StartHealthCheckInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start health check internal server error response a status code equal to that given
func (o *StartHealthCheckInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start health check internal server error response
func (o *StartHealthCheckInternalServerError) Code() int {
	return 500
}

func (o *StartHealthCheckInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckInternalServerError  %+v", 500, o.Payload)
}

func (o *StartHealthCheckInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/system/health-summary][%d] startHealthCheckInternalServerError  %+v", 500, o.Payload)
}

func (o *StartHealthCheckInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartHealthCheckInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
