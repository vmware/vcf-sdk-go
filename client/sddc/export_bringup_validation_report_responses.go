// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package sddc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExportBringupValidationReportReader is a Reader for the ExportBringupValidationReport structure.
type ExportBringupValidationReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportBringupValidationReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportBringupValidationReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewExportBringupValidationReportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewExportBringupValidationReportNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/sddcs/validations/{validationId}/report] exportBringupValidationReport", response, response.Code())
	}
}

// NewExportBringupValidationReportOK creates a ExportBringupValidationReportOK with default headers values
func NewExportBringupValidationReportOK() *ExportBringupValidationReportOK {
	return &ExportBringupValidationReportOK{}
}

/*
ExportBringupValidationReportOK describes a response with status code 200, with default header values.

OK
*/
type ExportBringupValidationReportOK struct {
	Payload string
}

// IsSuccess returns true when this export bringup validation report o k response has a 2xx status code
func (o *ExportBringupValidationReportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export bringup validation report o k response has a 3xx status code
func (o *ExportBringupValidationReportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export bringup validation report o k response has a 4xx status code
func (o *ExportBringupValidationReportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export bringup validation report o k response has a 5xx status code
func (o *ExportBringupValidationReportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export bringup validation report o k response a status code equal to that given
func (o *ExportBringupValidationReportOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export bringup validation report o k response
func (o *ExportBringupValidationReportOK) Code() int {
	return 200
}

func (o *ExportBringupValidationReportOK) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations/{validationId}/report][%d] exportBringupValidationReportOK  %+v", 200, o.Payload)
}

func (o *ExportBringupValidationReportOK) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations/{validationId}/report][%d] exportBringupValidationReportOK  %+v", 200, o.Payload)
}

func (o *ExportBringupValidationReportOK) GetPayload() string {
	return o.Payload
}

func (o *ExportBringupValidationReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportBringupValidationReportInternalServerError creates a ExportBringupValidationReportInternalServerError with default headers values
func NewExportBringupValidationReportInternalServerError() *ExportBringupValidationReportInternalServerError {
	return &ExportBringupValidationReportInternalServerError{}
}

/*
ExportBringupValidationReportInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ExportBringupValidationReportInternalServerError struct {
}

// IsSuccess returns true when this export bringup validation report internal server error response has a 2xx status code
func (o *ExportBringupValidationReportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export bringup validation report internal server error response has a 3xx status code
func (o *ExportBringupValidationReportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export bringup validation report internal server error response has a 4xx status code
func (o *ExportBringupValidationReportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this export bringup validation report internal server error response has a 5xx status code
func (o *ExportBringupValidationReportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this export bringup validation report internal server error response a status code equal to that given
func (o *ExportBringupValidationReportInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the export bringup validation report internal server error response
func (o *ExportBringupValidationReportInternalServerError) Code() int {
	return 500
}

func (o *ExportBringupValidationReportInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations/{validationId}/report][%d] exportBringupValidationReportInternalServerError ", 500)
}

func (o *ExportBringupValidationReportInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations/{validationId}/report][%d] exportBringupValidationReportInternalServerError ", 500)
}

func (o *ExportBringupValidationReportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportBringupValidationReportNotImplemented creates a ExportBringupValidationReportNotImplemented with default headers values
func NewExportBringupValidationReportNotImplemented() *ExportBringupValidationReportNotImplemented {
	return &ExportBringupValidationReportNotImplemented{}
}

/*
ExportBringupValidationReportNotImplemented describes a response with status code 501, with default header values.

Not Implemented
*/
type ExportBringupValidationReportNotImplemented struct {
}

// IsSuccess returns true when this export bringup validation report not implemented response has a 2xx status code
func (o *ExportBringupValidationReportNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export bringup validation report not implemented response has a 3xx status code
func (o *ExportBringupValidationReportNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export bringup validation report not implemented response has a 4xx status code
func (o *ExportBringupValidationReportNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this export bringup validation report not implemented response has a 5xx status code
func (o *ExportBringupValidationReportNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this export bringup validation report not implemented response a status code equal to that given
func (o *ExportBringupValidationReportNotImplemented) IsCode(code int) bool {
	return code == 501
}

// Code gets the status code for the export bringup validation report not implemented response
func (o *ExportBringupValidationReportNotImplemented) Code() int {
	return 501
}

func (o *ExportBringupValidationReportNotImplemented) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations/{validationId}/report][%d] exportBringupValidationReportNotImplemented ", 501)
}

func (o *ExportBringupValidationReportNotImplemented) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations/{validationId}/report][%d] exportBringupValidationReportNotImplemented ", 501)
}

func (o *ExportBringupValidationReportNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
