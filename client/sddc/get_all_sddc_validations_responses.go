// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package sddc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetAllSDDCValidationsReader is a Reader for the GetAllSDDCValidations structure.
type GetAllSDDCValidationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllSDDCValidationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllSDDCValidationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetAllSDDCValidationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllSDDCValidationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGetAllSDDCValidationsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllSDDCValidationsOK creates a GetAllSDDCValidationsOK with default headers values
func NewGetAllSDDCValidationsOK() *GetAllSDDCValidationsOK {
	return &GetAllSDDCValidationsOK{}
}

/*
GetAllSDDCValidationsOK describes a response with status code 200, with default header values.

Accepted
*/
type GetAllSDDCValidationsOK struct {
	Payload []*models.Validation
}

// IsSuccess returns true when this get all Sddc validations o k response has a 2xx status code
func (o *GetAllSDDCValidationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all Sddc validations o k response has a 3xx status code
func (o *GetAllSDDCValidationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Sddc validations o k response has a 4xx status code
func (o *GetAllSDDCValidationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all Sddc validations o k response has a 5xx status code
func (o *GetAllSDDCValidationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all Sddc validations o k response a status code equal to that given
func (o *GetAllSDDCValidationsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAllSDDCValidationsOK) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsOK  %+v", 200, o.Payload)
}

func (o *GetAllSDDCValidationsOK) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsOK  %+v", 200, o.Payload)
}

func (o *GetAllSDDCValidationsOK) GetPayload() []*models.Validation {
	return o.Payload
}

func (o *GetAllSDDCValidationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSDDCValidationsNotFound creates a GetAllSDDCValidationsNotFound with default headers values
func NewGetAllSDDCValidationsNotFound() *GetAllSDDCValidationsNotFound {
	return &GetAllSDDCValidationsNotFound{}
}

/*
GetAllSDDCValidationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllSDDCValidationsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get all Sddc validations not found response has a 2xx status code
func (o *GetAllSDDCValidationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all Sddc validations not found response has a 3xx status code
func (o *GetAllSDDCValidationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Sddc validations not found response has a 4xx status code
func (o *GetAllSDDCValidationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all Sddc validations not found response has a 5xx status code
func (o *GetAllSDDCValidationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all Sddc validations not found response a status code equal to that given
func (o *GetAllSDDCValidationsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetAllSDDCValidationsNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsNotFound  %+v", 404, o.Payload)
}

func (o *GetAllSDDCValidationsNotFound) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsNotFound  %+v", 404, o.Payload)
}

func (o *GetAllSDDCValidationsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllSDDCValidationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSDDCValidationsInternalServerError creates a GetAllSDDCValidationsInternalServerError with default headers values
func NewGetAllSDDCValidationsInternalServerError() *GetAllSDDCValidationsInternalServerError {
	return &GetAllSDDCValidationsInternalServerError{}
}

/*
GetAllSDDCValidationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllSDDCValidationsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get all Sddc validations internal server error response has a 2xx status code
func (o *GetAllSDDCValidationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all Sddc validations internal server error response has a 3xx status code
func (o *GetAllSDDCValidationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Sddc validations internal server error response has a 4xx status code
func (o *GetAllSDDCValidationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all Sddc validations internal server error response has a 5xx status code
func (o *GetAllSDDCValidationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all Sddc validations internal server error response a status code equal to that given
func (o *GetAllSDDCValidationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAllSDDCValidationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllSDDCValidationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAllSDDCValidationsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllSDDCValidationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSDDCValidationsNotImplemented creates a GetAllSDDCValidationsNotImplemented with default headers values
func NewGetAllSDDCValidationsNotImplemented() *GetAllSDDCValidationsNotImplemented {
	return &GetAllSDDCValidationsNotImplemented{}
}

/*
GetAllSDDCValidationsNotImplemented describes a response with status code 501, with default header values.

Not Implemented
*/
type GetAllSDDCValidationsNotImplemented struct {
	Payload *models.Error
}

// IsSuccess returns true when this get all Sddc validations not implemented response has a 2xx status code
func (o *GetAllSDDCValidationsNotImplemented) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all Sddc validations not implemented response has a 3xx status code
func (o *GetAllSDDCValidationsNotImplemented) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all Sddc validations not implemented response has a 4xx status code
func (o *GetAllSDDCValidationsNotImplemented) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all Sddc validations not implemented response has a 5xx status code
func (o *GetAllSDDCValidationsNotImplemented) IsServerError() bool {
	return true
}

// IsCode returns true when this get all Sddc validations not implemented response a status code equal to that given
func (o *GetAllSDDCValidationsNotImplemented) IsCode(code int) bool {
	return code == 501
}

func (o *GetAllSDDCValidationsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsNotImplemented  %+v", 501, o.Payload)
}

func (o *GetAllSDDCValidationsNotImplemented) String() string {
	return fmt.Sprintf("[GET /v1/sddcs/validations][%d] getAllSddcValidationsNotImplemented  %+v", 501, o.Payload)
}

func (o *GetAllSDDCValidationsNotImplemented) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllSDDCValidationsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
