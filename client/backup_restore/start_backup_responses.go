// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package backup_restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// StartBackupReader is a Reader for the StartBackup structure.
type StartBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewStartBackupAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartBackupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartBackupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/backups/tasks] startBackup", response, response.Code())
	}
}

// NewStartBackupOK creates a StartBackupOK with default headers values
func NewStartBackupOK() *StartBackupOK {
	return &StartBackupOK{}
}

/*
StartBackupOK describes a response with status code 200, with default header values.

OK
*/
type StartBackupOK struct {
	Payload *models.BackupTask
}

// IsSuccess returns true when this start backup o k response has a 2xx status code
func (o *StartBackupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start backup o k response has a 3xx status code
func (o *StartBackupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start backup o k response has a 4xx status code
func (o *StartBackupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start backup o k response has a 5xx status code
func (o *StartBackupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start backup o k response a status code equal to that given
func (o *StartBackupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start backup o k response
func (o *StartBackupOK) Code() int {
	return 200
}

func (o *StartBackupOK) Error() string {
	return fmt.Sprintf("[POST /v1/backups/tasks][%d] startBackupOK  %+v", 200, o.Payload)
}

func (o *StartBackupOK) String() string {
	return fmt.Sprintf("[POST /v1/backups/tasks][%d] startBackupOK  %+v", 200, o.Payload)
}

func (o *StartBackupOK) GetPayload() *models.BackupTask {
	return o.Payload
}

func (o *StartBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackupTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartBackupAccepted creates a StartBackupAccepted with default headers values
func NewStartBackupAccepted() *StartBackupAccepted {
	return &StartBackupAccepted{}
}

/*
StartBackupAccepted describes a response with status code 202, with default header values.

Accepted
*/
type StartBackupAccepted struct {
	Payload *models.BackupTask
}

// IsSuccess returns true when this start backup accepted response has a 2xx status code
func (o *StartBackupAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start backup accepted response has a 3xx status code
func (o *StartBackupAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start backup accepted response has a 4xx status code
func (o *StartBackupAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this start backup accepted response has a 5xx status code
func (o *StartBackupAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this start backup accepted response a status code equal to that given
func (o *StartBackupAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the start backup accepted response
func (o *StartBackupAccepted) Code() int {
	return 202
}

func (o *StartBackupAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/backups/tasks][%d] startBackupAccepted  %+v", 202, o.Payload)
}

func (o *StartBackupAccepted) String() string {
	return fmt.Sprintf("[POST /v1/backups/tasks][%d] startBackupAccepted  %+v", 202, o.Payload)
}

func (o *StartBackupAccepted) GetPayload() *models.BackupTask {
	return o.Payload
}

func (o *StartBackupAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackupTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartBackupBadRequest creates a StartBackupBadRequest with default headers values
func NewStartBackupBadRequest() *StartBackupBadRequest {
	return &StartBackupBadRequest{}
}

/*
StartBackupBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StartBackupBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this start backup bad request response has a 2xx status code
func (o *StartBackupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start backup bad request response has a 3xx status code
func (o *StartBackupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start backup bad request response has a 4xx status code
func (o *StartBackupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start backup bad request response has a 5xx status code
func (o *StartBackupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start backup bad request response a status code equal to that given
func (o *StartBackupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start backup bad request response
func (o *StartBackupBadRequest) Code() int {
	return 400
}

func (o *StartBackupBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/backups/tasks][%d] startBackupBadRequest  %+v", 400, o.Payload)
}

func (o *StartBackupBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/backups/tasks][%d] startBackupBadRequest  %+v", 400, o.Payload)
}

func (o *StartBackupBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartBackupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartBackupInternalServerError creates a StartBackupInternalServerError with default headers values
func NewStartBackupInternalServerError() *StartBackupInternalServerError {
	return &StartBackupInternalServerError{}
}

/*
StartBackupInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type StartBackupInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this start backup internal server error response has a 2xx status code
func (o *StartBackupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start backup internal server error response has a 3xx status code
func (o *StartBackupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start backup internal server error response has a 4xx status code
func (o *StartBackupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start backup internal server error response has a 5xx status code
func (o *StartBackupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start backup internal server error response a status code equal to that given
func (o *StartBackupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start backup internal server error response
func (o *StartBackupInternalServerError) Code() int {
	return 500
}

func (o *StartBackupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/backups/tasks][%d] startBackupInternalServerError  %+v", 500, o.Payload)
}

func (o *StartBackupInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/backups/tasks][%d] startBackupInternalServerError  %+v", 500, o.Payload)
}

func (o *StartBackupInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartBackupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
