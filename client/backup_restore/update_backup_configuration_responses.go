// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package backup_restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// UpdateBackupConfigurationReader is a Reader for the UpdateBackupConfiguration structure.
type UpdateBackupConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBackupConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBackupConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewUpdateBackupConfigurationAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBackupConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBackupConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /v1/system/backup-configuration] updateBackupConfiguration", response, response.Code())
	}
}

// NewUpdateBackupConfigurationOK creates a UpdateBackupConfigurationOK with default headers values
func NewUpdateBackupConfigurationOK() *UpdateBackupConfigurationOK {
	return &UpdateBackupConfigurationOK{}
}

/*
UpdateBackupConfigurationOK describes a response with status code 200, with default header values.

OK
*/
type UpdateBackupConfigurationOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this update backup configuration o k response has a 2xx status code
func (o *UpdateBackupConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update backup configuration o k response has a 3xx status code
func (o *UpdateBackupConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update backup configuration o k response has a 4xx status code
func (o *UpdateBackupConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update backup configuration o k response has a 5xx status code
func (o *UpdateBackupConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update backup configuration o k response a status code equal to that given
func (o *UpdateBackupConfigurationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update backup configuration o k response
func (o *UpdateBackupConfigurationOK) Code() int {
	return 200
}

func (o *UpdateBackupConfigurationOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/backup-configuration][%d] updateBackupConfigurationOK  %+v", 200, o.Payload)
}

func (o *UpdateBackupConfigurationOK) String() string {
	return fmt.Sprintf("[PATCH /v1/system/backup-configuration][%d] updateBackupConfigurationOK  %+v", 200, o.Payload)
}

func (o *UpdateBackupConfigurationOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *UpdateBackupConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBackupConfigurationAccepted creates a UpdateBackupConfigurationAccepted with default headers values
func NewUpdateBackupConfigurationAccepted() *UpdateBackupConfigurationAccepted {
	return &UpdateBackupConfigurationAccepted{}
}

/*
UpdateBackupConfigurationAccepted describes a response with status code 202, with default header values.

Accepted
*/
type UpdateBackupConfigurationAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this update backup configuration accepted response has a 2xx status code
func (o *UpdateBackupConfigurationAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update backup configuration accepted response has a 3xx status code
func (o *UpdateBackupConfigurationAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update backup configuration accepted response has a 4xx status code
func (o *UpdateBackupConfigurationAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this update backup configuration accepted response has a 5xx status code
func (o *UpdateBackupConfigurationAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this update backup configuration accepted response a status code equal to that given
func (o *UpdateBackupConfigurationAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the update backup configuration accepted response
func (o *UpdateBackupConfigurationAccepted) Code() int {
	return 202
}

func (o *UpdateBackupConfigurationAccepted) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/backup-configuration][%d] updateBackupConfigurationAccepted  %+v", 202, o.Payload)
}

func (o *UpdateBackupConfigurationAccepted) String() string {
	return fmt.Sprintf("[PATCH /v1/system/backup-configuration][%d] updateBackupConfigurationAccepted  %+v", 202, o.Payload)
}

func (o *UpdateBackupConfigurationAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *UpdateBackupConfigurationAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBackupConfigurationBadRequest creates a UpdateBackupConfigurationBadRequest with default headers values
func NewUpdateBackupConfigurationBadRequest() *UpdateBackupConfigurationBadRequest {
	return &UpdateBackupConfigurationBadRequest{}
}

/*
UpdateBackupConfigurationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateBackupConfigurationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update backup configuration bad request response has a 2xx status code
func (o *UpdateBackupConfigurationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update backup configuration bad request response has a 3xx status code
func (o *UpdateBackupConfigurationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update backup configuration bad request response has a 4xx status code
func (o *UpdateBackupConfigurationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update backup configuration bad request response has a 5xx status code
func (o *UpdateBackupConfigurationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update backup configuration bad request response a status code equal to that given
func (o *UpdateBackupConfigurationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update backup configuration bad request response
func (o *UpdateBackupConfigurationBadRequest) Code() int {
	return 400
}

func (o *UpdateBackupConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/backup-configuration][%d] updateBackupConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateBackupConfigurationBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/system/backup-configuration][%d] updateBackupConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateBackupConfigurationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateBackupConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBackupConfigurationInternalServerError creates a UpdateBackupConfigurationInternalServerError with default headers values
func NewUpdateBackupConfigurationInternalServerError() *UpdateBackupConfigurationInternalServerError {
	return &UpdateBackupConfigurationInternalServerError{}
}

/*
UpdateBackupConfigurationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateBackupConfigurationInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update backup configuration internal server error response has a 2xx status code
func (o *UpdateBackupConfigurationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update backup configuration internal server error response has a 3xx status code
func (o *UpdateBackupConfigurationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update backup configuration internal server error response has a 4xx status code
func (o *UpdateBackupConfigurationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update backup configuration internal server error response has a 5xx status code
func (o *UpdateBackupConfigurationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update backup configuration internal server error response a status code equal to that given
func (o *UpdateBackupConfigurationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update backup configuration internal server error response
func (o *UpdateBackupConfigurationInternalServerError) Code() int {
	return 500
}

func (o *UpdateBackupConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/backup-configuration][%d] updateBackupConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateBackupConfigurationInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /v1/system/backup-configuration][%d] updateBackupConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateBackupConfigurationInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateBackupConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
