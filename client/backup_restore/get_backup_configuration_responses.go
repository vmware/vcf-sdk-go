// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package backup_restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetBackupConfigurationReader is a Reader for the GetBackupConfiguration structure.
type GetBackupConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBackupConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBackupConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBackupConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBackupConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/system/backup-configuration] getBackupConfiguration", response, response.Code())
	}
}

// NewGetBackupConfigurationOK creates a GetBackupConfigurationOK with default headers values
func NewGetBackupConfigurationOK() *GetBackupConfigurationOK {
	return &GetBackupConfigurationOK{}
}

/*
GetBackupConfigurationOK describes a response with status code 200, with default header values.

Ok
*/
type GetBackupConfigurationOK struct {
	Payload *models.BackupConfiguration
}

// IsSuccess returns true when this get backup configuration o k response has a 2xx status code
func (o *GetBackupConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get backup configuration o k response has a 3xx status code
func (o *GetBackupConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backup configuration o k response has a 4xx status code
func (o *GetBackupConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get backup configuration o k response has a 5xx status code
func (o *GetBackupConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get backup configuration o k response a status code equal to that given
func (o *GetBackupConfigurationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get backup configuration o k response
func (o *GetBackupConfigurationOK) Code() int {
	return 200
}

func (o *GetBackupConfigurationOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/backup-configuration][%d] getBackupConfigurationOK  %+v", 200, o.Payload)
}

func (o *GetBackupConfigurationOK) String() string {
	return fmt.Sprintf("[GET /v1/system/backup-configuration][%d] getBackupConfigurationOK  %+v", 200, o.Payload)
}

func (o *GetBackupConfigurationOK) GetPayload() *models.BackupConfiguration {
	return o.Payload
}

func (o *GetBackupConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackupConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupConfigurationBadRequest creates a GetBackupConfigurationBadRequest with default headers values
func NewGetBackupConfigurationBadRequest() *GetBackupConfigurationBadRequest {
	return &GetBackupConfigurationBadRequest{}
}

/*
GetBackupConfigurationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBackupConfigurationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get backup configuration bad request response has a 2xx status code
func (o *GetBackupConfigurationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backup configuration bad request response has a 3xx status code
func (o *GetBackupConfigurationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backup configuration bad request response has a 4xx status code
func (o *GetBackupConfigurationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get backup configuration bad request response has a 5xx status code
func (o *GetBackupConfigurationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get backup configuration bad request response a status code equal to that given
func (o *GetBackupConfigurationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get backup configuration bad request response
func (o *GetBackupConfigurationBadRequest) Code() int {
	return 400
}

func (o *GetBackupConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/backup-configuration][%d] getBackupConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GetBackupConfigurationBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/backup-configuration][%d] getBackupConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *GetBackupConfigurationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBackupConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBackupConfigurationInternalServerError creates a GetBackupConfigurationInternalServerError with default headers values
func NewGetBackupConfigurationInternalServerError() *GetBackupConfigurationInternalServerError {
	return &GetBackupConfigurationInternalServerError{}
}

/*
GetBackupConfigurationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetBackupConfigurationInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get backup configuration internal server error response has a 2xx status code
func (o *GetBackupConfigurationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get backup configuration internal server error response has a 3xx status code
func (o *GetBackupConfigurationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get backup configuration internal server error response has a 4xx status code
func (o *GetBackupConfigurationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get backup configuration internal server error response has a 5xx status code
func (o *GetBackupConfigurationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get backup configuration internal server error response a status code equal to that given
func (o *GetBackupConfigurationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get backup configuration internal server error response
func (o *GetBackupConfigurationInternalServerError) Code() int {
	return 500
}

func (o *GetBackupConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/backup-configuration][%d] getBackupConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBackupConfigurationInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/backup-configuration][%d] getBackupConfigurationInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBackupConfigurationInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBackupConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
