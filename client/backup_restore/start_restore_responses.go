// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package backup_restore

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// StartRestoreReader is a Reader for the StartRestore structure.
type StartRestoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartRestoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartRestoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewStartRestoreAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartRestoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartRestoreInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/restores/tasks] startRestore", response, response.Code())
	}
}

// NewStartRestoreOK creates a StartRestoreOK with default headers values
func NewStartRestoreOK() *StartRestoreOK {
	return &StartRestoreOK{}
}

/*
StartRestoreOK describes a response with status code 200, with default header values.

OK
*/
type StartRestoreOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this start restore o k response has a 2xx status code
func (o *StartRestoreOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start restore o k response has a 3xx status code
func (o *StartRestoreOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start restore o k response has a 4xx status code
func (o *StartRestoreOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start restore o k response has a 5xx status code
func (o *StartRestoreOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start restore o k response a status code equal to that given
func (o *StartRestoreOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start restore o k response
func (o *StartRestoreOK) Code() int {
	return 200
}

func (o *StartRestoreOK) Error() string {
	return fmt.Sprintf("[POST /v1/restores/tasks][%d] startRestoreOK  %+v", 200, o.Payload)
}

func (o *StartRestoreOK) String() string {
	return fmt.Sprintf("[POST /v1/restores/tasks][%d] startRestoreOK  %+v", 200, o.Payload)
}

func (o *StartRestoreOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *StartRestoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartRestoreAccepted creates a StartRestoreAccepted with default headers values
func NewStartRestoreAccepted() *StartRestoreAccepted {
	return &StartRestoreAccepted{}
}

/*
StartRestoreAccepted describes a response with status code 202, with default header values.

Accepted
*/
type StartRestoreAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this start restore accepted response has a 2xx status code
func (o *StartRestoreAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start restore accepted response has a 3xx status code
func (o *StartRestoreAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start restore accepted response has a 4xx status code
func (o *StartRestoreAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this start restore accepted response has a 5xx status code
func (o *StartRestoreAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this start restore accepted response a status code equal to that given
func (o *StartRestoreAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the start restore accepted response
func (o *StartRestoreAccepted) Code() int {
	return 202
}

func (o *StartRestoreAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/restores/tasks][%d] startRestoreAccepted  %+v", 202, o.Payload)
}

func (o *StartRestoreAccepted) String() string {
	return fmt.Sprintf("[POST /v1/restores/tasks][%d] startRestoreAccepted  %+v", 202, o.Payload)
}

func (o *StartRestoreAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *StartRestoreAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartRestoreBadRequest creates a StartRestoreBadRequest with default headers values
func NewStartRestoreBadRequest() *StartRestoreBadRequest {
	return &StartRestoreBadRequest{}
}

/*
StartRestoreBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StartRestoreBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this start restore bad request response has a 2xx status code
func (o *StartRestoreBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start restore bad request response has a 3xx status code
func (o *StartRestoreBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start restore bad request response has a 4xx status code
func (o *StartRestoreBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start restore bad request response has a 5xx status code
func (o *StartRestoreBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start restore bad request response a status code equal to that given
func (o *StartRestoreBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start restore bad request response
func (o *StartRestoreBadRequest) Code() int {
	return 400
}

func (o *StartRestoreBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/restores/tasks][%d] startRestoreBadRequest  %+v", 400, o.Payload)
}

func (o *StartRestoreBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/restores/tasks][%d] startRestoreBadRequest  %+v", 400, o.Payload)
}

func (o *StartRestoreBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartRestoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartRestoreInternalServerError creates a StartRestoreInternalServerError with default headers values
func NewStartRestoreInternalServerError() *StartRestoreInternalServerError {
	return &StartRestoreInternalServerError{}
}

/*
StartRestoreInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type StartRestoreInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this start restore internal server error response has a 2xx status code
func (o *StartRestoreInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start restore internal server error response has a 3xx status code
func (o *StartRestoreInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start restore internal server error response has a 4xx status code
func (o *StartRestoreInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start restore internal server error response has a 5xx status code
func (o *StartRestoreInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start restore internal server error response a status code equal to that given
func (o *StartRestoreInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start restore internal server error response
func (o *StartRestoreInternalServerError) Code() int {
	return 500
}

func (o *StartRestoreInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/restores/tasks][%d] startRestoreInternalServerError  %+v", 500, o.Payload)
}

func (o *StartRestoreInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/restores/tasks][%d] startRestoreInternalServerError  %+v", 500, o.Payload)
}

func (o *StartRestoreInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *StartRestoreInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
