// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package identity_provider_precheck

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetIdentityPrecheckResultReader is a Reader for the GetIdentityPrecheckResult structure.
type GetIdentityPrecheckResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityPrecheckResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityPrecheckResultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetIdentityPrecheckResultNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIdentityPrecheckResultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/identity-broker/prechecks] getIdentityPrecheckResult", response, response.Code())
	}
}

// NewGetIdentityPrecheckResultOK creates a GetIdentityPrecheckResultOK with default headers values
func NewGetIdentityPrecheckResultOK() *GetIdentityPrecheckResultOK {
	return &GetIdentityPrecheckResultOK{}
}

/*
GetIdentityPrecheckResultOK describes a response with status code 200, with default header values.

OK
*/
type GetIdentityPrecheckResultOK struct {
	Payload *models.IdentityProviderPrecheckResult
}

// IsSuccess returns true when this get identity precheck result o k response has a 2xx status code
func (o *GetIdentityPrecheckResultOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identity precheck result o k response has a 3xx status code
func (o *GetIdentityPrecheckResultOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity precheck result o k response has a 4xx status code
func (o *GetIdentityPrecheckResultOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identity precheck result o k response has a 5xx status code
func (o *GetIdentityPrecheckResultOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity precheck result o k response a status code equal to that given
func (o *GetIdentityPrecheckResultOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get identity precheck result o k response
func (o *GetIdentityPrecheckResultOK) Code() int {
	return 200
}

func (o *GetIdentityPrecheckResultOK) Error() string {
	return fmt.Sprintf("[GET /v1/identity-broker/prechecks][%d] getIdentityPrecheckResultOK  %+v", 200, o.Payload)
}

func (o *GetIdentityPrecheckResultOK) String() string {
	return fmt.Sprintf("[GET /v1/identity-broker/prechecks][%d] getIdentityPrecheckResultOK  %+v", 200, o.Payload)
}

func (o *GetIdentityPrecheckResultOK) GetPayload() *models.IdentityProviderPrecheckResult {
	return o.Payload
}

func (o *GetIdentityPrecheckResultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IdentityProviderPrecheckResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityPrecheckResultNotFound creates a GetIdentityPrecheckResultNotFound with default headers values
func NewGetIdentityPrecheckResultNotFound() *GetIdentityPrecheckResultNotFound {
	return &GetIdentityPrecheckResultNotFound{}
}

/*
GetIdentityPrecheckResultNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetIdentityPrecheckResultNotFound struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get identity precheck result not found response has a 2xx status code
func (o *GetIdentityPrecheckResultNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity precheck result not found response has a 3xx status code
func (o *GetIdentityPrecheckResultNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity precheck result not found response has a 4xx status code
func (o *GetIdentityPrecheckResultNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identity precheck result not found response has a 5xx status code
func (o *GetIdentityPrecheckResultNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity precheck result not found response a status code equal to that given
func (o *GetIdentityPrecheckResultNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get identity precheck result not found response
func (o *GetIdentityPrecheckResultNotFound) Code() int {
	return 404
}

func (o *GetIdentityPrecheckResultNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/identity-broker/prechecks][%d] getIdentityPrecheckResultNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityPrecheckResultNotFound) String() string {
	return fmt.Sprintf("[GET /v1/identity-broker/prechecks][%d] getIdentityPrecheckResultNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityPrecheckResultNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetIdentityPrecheckResultNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityPrecheckResultInternalServerError creates a GetIdentityPrecheckResultInternalServerError with default headers values
func NewGetIdentityPrecheckResultInternalServerError() *GetIdentityPrecheckResultInternalServerError {
	return &GetIdentityPrecheckResultInternalServerError{}
}

/*
GetIdentityPrecheckResultInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetIdentityPrecheckResultInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get identity precheck result internal server error response has a 2xx status code
func (o *GetIdentityPrecheckResultInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity precheck result internal server error response has a 3xx status code
func (o *GetIdentityPrecheckResultInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity precheck result internal server error response has a 4xx status code
func (o *GetIdentityPrecheckResultInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identity precheck result internal server error response has a 5xx status code
func (o *GetIdentityPrecheckResultInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get identity precheck result internal server error response a status code equal to that given
func (o *GetIdentityPrecheckResultInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get identity precheck result internal server error response
func (o *GetIdentityPrecheckResultInternalServerError) Code() int {
	return 500
}

func (o *GetIdentityPrecheckResultInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/identity-broker/prechecks][%d] getIdentityPrecheckResultInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityPrecheckResultInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/identity-broker/prechecks][%d] getIdentityPrecheckResultInternalServerError  %+v", 500, o.Payload)
}

func (o *GetIdentityPrecheckResultInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetIdentityPrecheckResultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
