// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetTagsAssignedToHostReader is a Reader for the GetTagsAssignedToHost structure.
type GetTagsAssignedToHostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsAssignedToHostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagsAssignedToHostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTagsAssignedToHostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTagsAssignedToHostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTagsAssignedToHostOK creates a GetTagsAssignedToHostOK with default headers values
func NewGetTagsAssignedToHostOK() *GetTagsAssignedToHostOK {
	return &GetTagsAssignedToHostOK{}
}

/*
GetTagsAssignedToHostOK describes a response with status code 200, with default header values.

Ok
*/
type GetTagsAssignedToHostOK struct {
	Payload *models.PageOfTag
}

// IsSuccess returns true when this get tags assigned to host o k response has a 2xx status code
func (o *GetTagsAssignedToHostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tags assigned to host o k response has a 3xx status code
func (o *GetTagsAssignedToHostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to host o k response has a 4xx status code
func (o *GetTagsAssignedToHostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags assigned to host o k response has a 5xx status code
func (o *GetTagsAssignedToHostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags assigned to host o k response a status code equal to that given
func (o *GetTagsAssignedToHostOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTagsAssignedToHostOK) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostOK  %+v", 200, o.Payload)
}

func (o *GetTagsAssignedToHostOK) String() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostOK  %+v", 200, o.Payload)
}

func (o *GetTagsAssignedToHostOK) GetPayload() *models.PageOfTag {
	return o.Payload
}

func (o *GetTagsAssignedToHostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfTag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsAssignedToHostBadRequest creates a GetTagsAssignedToHostBadRequest with default headers values
func NewGetTagsAssignedToHostBadRequest() *GetTagsAssignedToHostBadRequest {
	return &GetTagsAssignedToHostBadRequest{}
}

/*
GetTagsAssignedToHostBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTagsAssignedToHostBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tags assigned to host bad request response has a 2xx status code
func (o *GetTagsAssignedToHostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags assigned to host bad request response has a 3xx status code
func (o *GetTagsAssignedToHostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to host bad request response has a 4xx status code
func (o *GetTagsAssignedToHostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags assigned to host bad request response has a 5xx status code
func (o *GetTagsAssignedToHostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags assigned to host bad request response a status code equal to that given
func (o *GetTagsAssignedToHostBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetTagsAssignedToHostBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostBadRequest  %+v", 400, o.Payload)
}

func (o *GetTagsAssignedToHostBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostBadRequest  %+v", 400, o.Payload)
}

func (o *GetTagsAssignedToHostBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTagsAssignedToHostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsAssignedToHostInternalServerError creates a GetTagsAssignedToHostInternalServerError with default headers values
func NewGetTagsAssignedToHostInternalServerError() *GetTagsAssignedToHostInternalServerError {
	return &GetTagsAssignedToHostInternalServerError{}
}

/*
GetTagsAssignedToHostInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GetTagsAssignedToHostInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tags assigned to host internal server error response has a 2xx status code
func (o *GetTagsAssignedToHostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags assigned to host internal server error response has a 3xx status code
func (o *GetTagsAssignedToHostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags assigned to host internal server error response has a 4xx status code
func (o *GetTagsAssignedToHostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags assigned to host internal server error response has a 5xx status code
func (o *GetTagsAssignedToHostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tags assigned to host internal server error response a status code equal to that given
func (o *GetTagsAssignedToHostInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetTagsAssignedToHostInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTagsAssignedToHostInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/hosts/{id}/tags][%d] getTagsAssignedToHostInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTagsAssignedToHostInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTagsAssignedToHostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
