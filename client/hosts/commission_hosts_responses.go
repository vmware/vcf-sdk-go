// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// CommissionHostsReader is a Reader for the CommissionHosts structure.
type CommissionHostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CommissionHostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCommissionHostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCommissionHostsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCommissionHostsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCommissionHostsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/hosts] commissionHosts", response, response.Code())
	}
}

// NewCommissionHostsOK creates a CommissionHostsOK with default headers values
func NewCommissionHostsOK() *CommissionHostsOK {
	return &CommissionHostsOK{}
}

/*
CommissionHostsOK describes a response with status code 200, with default header values.

OK
*/
type CommissionHostsOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this commission hosts o k response has a 2xx status code
func (o *CommissionHostsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this commission hosts o k response has a 3xx status code
func (o *CommissionHostsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this commission hosts o k response has a 4xx status code
func (o *CommissionHostsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this commission hosts o k response has a 5xx status code
func (o *CommissionHostsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this commission hosts o k response a status code equal to that given
func (o *CommissionHostsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the commission hosts o k response
func (o *CommissionHostsOK) Code() int {
	return 200
}

func (o *CommissionHostsOK) Error() string {
	return fmt.Sprintf("[POST /v1/hosts][%d] commissionHostsOK  %+v", 200, o.Payload)
}

func (o *CommissionHostsOK) String() string {
	return fmt.Sprintf("[POST /v1/hosts][%d] commissionHostsOK  %+v", 200, o.Payload)
}

func (o *CommissionHostsOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *CommissionHostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCommissionHostsAccepted creates a CommissionHostsAccepted with default headers values
func NewCommissionHostsAccepted() *CommissionHostsAccepted {
	return &CommissionHostsAccepted{}
}

/*
CommissionHostsAccepted describes a response with status code 202, with default header values.

Accepted
*/
type CommissionHostsAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this commission hosts accepted response has a 2xx status code
func (o *CommissionHostsAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this commission hosts accepted response has a 3xx status code
func (o *CommissionHostsAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this commission hosts accepted response has a 4xx status code
func (o *CommissionHostsAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this commission hosts accepted response has a 5xx status code
func (o *CommissionHostsAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this commission hosts accepted response a status code equal to that given
func (o *CommissionHostsAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the commission hosts accepted response
func (o *CommissionHostsAccepted) Code() int {
	return 202
}

func (o *CommissionHostsAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/hosts][%d] commissionHostsAccepted  %+v", 202, o.Payload)
}

func (o *CommissionHostsAccepted) String() string {
	return fmt.Sprintf("[POST /v1/hosts][%d] commissionHostsAccepted  %+v", 202, o.Payload)
}

func (o *CommissionHostsAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *CommissionHostsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCommissionHostsBadRequest creates a CommissionHostsBadRequest with default headers values
func NewCommissionHostsBadRequest() *CommissionHostsBadRequest {
	return &CommissionHostsBadRequest{}
}

/*
CommissionHostsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CommissionHostsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this commission hosts bad request response has a 2xx status code
func (o *CommissionHostsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this commission hosts bad request response has a 3xx status code
func (o *CommissionHostsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this commission hosts bad request response has a 4xx status code
func (o *CommissionHostsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this commission hosts bad request response has a 5xx status code
func (o *CommissionHostsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this commission hosts bad request response a status code equal to that given
func (o *CommissionHostsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the commission hosts bad request response
func (o *CommissionHostsBadRequest) Code() int {
	return 400
}

func (o *CommissionHostsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/hosts][%d] commissionHostsBadRequest  %+v", 400, o.Payload)
}

func (o *CommissionHostsBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/hosts][%d] commissionHostsBadRequest  %+v", 400, o.Payload)
}

func (o *CommissionHostsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CommissionHostsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCommissionHostsInternalServerError creates a CommissionHostsInternalServerError with default headers values
func NewCommissionHostsInternalServerError() *CommissionHostsInternalServerError {
	return &CommissionHostsInternalServerError{}
}

/*
CommissionHostsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CommissionHostsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this commission hosts internal server error response has a 2xx status code
func (o *CommissionHostsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this commission hosts internal server error response has a 3xx status code
func (o *CommissionHostsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this commission hosts internal server error response has a 4xx status code
func (o *CommissionHostsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this commission hosts internal server error response has a 5xx status code
func (o *CommissionHostsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this commission hosts internal server error response a status code equal to that given
func (o *CommissionHostsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the commission hosts internal server error response
func (o *CommissionHostsInternalServerError) Code() int {
	return 500
}

func (o *CommissionHostsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/hosts][%d] commissionHostsInternalServerError  %+v", 500, o.Payload)
}

func (o *CommissionHostsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/hosts][%d] commissionHostsInternalServerError  %+v", 500, o.Payload)
}

func (o *CommissionHostsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CommissionHostsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
