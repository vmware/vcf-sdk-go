// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetHostCommissionValidationByIDReader is a Reader for the GetHostCommissionValidationByID structure.
type GetHostCommissionValidationByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostCommissionValidationByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHostCommissionValidationByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetHostCommissionValidationByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHostCommissionValidationByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/hosts/validations/{id}] getHostCommissionValidationByID", response, response.Code())
	}
}

// NewGetHostCommissionValidationByIDOK creates a GetHostCommissionValidationByIDOK with default headers values
func NewGetHostCommissionValidationByIDOK() *GetHostCommissionValidationByIDOK {
	return &GetHostCommissionValidationByIDOK{}
}

/*
GetHostCommissionValidationByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetHostCommissionValidationByIDOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this get host commission validation by Id o k response has a 2xx status code
func (o *GetHostCommissionValidationByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get host commission validation by Id o k response has a 3xx status code
func (o *GetHostCommissionValidationByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get host commission validation by Id o k response has a 4xx status code
func (o *GetHostCommissionValidationByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get host commission validation by Id o k response has a 5xx status code
func (o *GetHostCommissionValidationByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get host commission validation by Id o k response a status code equal to that given
func (o *GetHostCommissionValidationByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get host commission validation by Id o k response
func (o *GetHostCommissionValidationByIDOK) Code() int {
	return 200
}

func (o *GetHostCommissionValidationByIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/validations/{id}][%d] getHostCommissionValidationByIdOK  %+v", 200, o.Payload)
}

func (o *GetHostCommissionValidationByIDOK) String() string {
	return fmt.Sprintf("[GET /v1/hosts/validations/{id}][%d] getHostCommissionValidationByIdOK  %+v", 200, o.Payload)
}

func (o *GetHostCommissionValidationByIDOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *GetHostCommissionValidationByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostCommissionValidationByIDBadRequest creates a GetHostCommissionValidationByIDBadRequest with default headers values
func NewGetHostCommissionValidationByIDBadRequest() *GetHostCommissionValidationByIDBadRequest {
	return &GetHostCommissionValidationByIDBadRequest{}
}

/*
GetHostCommissionValidationByIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetHostCommissionValidationByIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get host commission validation by Id bad request response has a 2xx status code
func (o *GetHostCommissionValidationByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get host commission validation by Id bad request response has a 3xx status code
func (o *GetHostCommissionValidationByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get host commission validation by Id bad request response has a 4xx status code
func (o *GetHostCommissionValidationByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get host commission validation by Id bad request response has a 5xx status code
func (o *GetHostCommissionValidationByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get host commission validation by Id bad request response a status code equal to that given
func (o *GetHostCommissionValidationByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get host commission validation by Id bad request response
func (o *GetHostCommissionValidationByIDBadRequest) Code() int {
	return 400
}

func (o *GetHostCommissionValidationByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/validations/{id}][%d] getHostCommissionValidationByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetHostCommissionValidationByIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/hosts/validations/{id}][%d] getHostCommissionValidationByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetHostCommissionValidationByIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHostCommissionValidationByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostCommissionValidationByIDInternalServerError creates a GetHostCommissionValidationByIDInternalServerError with default headers values
func NewGetHostCommissionValidationByIDInternalServerError() *GetHostCommissionValidationByIDInternalServerError {
	return &GetHostCommissionValidationByIDInternalServerError{}
}

/*
GetHostCommissionValidationByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetHostCommissionValidationByIDInternalServerError struct {
}

// IsSuccess returns true when this get host commission validation by Id internal server error response has a 2xx status code
func (o *GetHostCommissionValidationByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get host commission validation by Id internal server error response has a 3xx status code
func (o *GetHostCommissionValidationByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get host commission validation by Id internal server error response has a 4xx status code
func (o *GetHostCommissionValidationByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get host commission validation by Id internal server error response has a 5xx status code
func (o *GetHostCommissionValidationByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get host commission validation by Id internal server error response a status code equal to that given
func (o *GetHostCommissionValidationByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get host commission validation by Id internal server error response
func (o *GetHostCommissionValidationByIDInternalServerError) Code() int {
	return 500
}

func (o *GetHostCommissionValidationByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/hosts/validations/{id}][%d] getHostCommissionValidationByIdInternalServerError ", 500)
}

func (o *GetHostCommissionValidationByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/hosts/validations/{id}][%d] getHostCommissionValidationByIdInternalServerError ", 500)
}

func (o *GetHostCommissionValidationByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
