// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetHostsReader is a Reader for the GetHosts structure.
type GetHostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetHostsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHostsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHostsOK creates a GetHostsOK with default headers values
func NewGetHostsOK() *GetHostsOK {
	return &GetHostsOK{}
}

/*
GetHostsOK describes a response with status code 200, with default header values.

Ok
*/
type GetHostsOK struct {
	Payload *models.PageOfHost
}

// IsSuccess returns true when this get hosts o k response has a 2xx status code
func (o *GetHostsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get hosts o k response has a 3xx status code
func (o *GetHostsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts o k response has a 4xx status code
func (o *GetHostsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get hosts o k response has a 5xx status code
func (o *GetHostsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get hosts o k response a status code equal to that given
func (o *GetHostsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetHostsOK) Error() string {
	return fmt.Sprintf("[GET /v1/hosts][%d] getHostsOK  %+v", 200, o.Payload)
}

func (o *GetHostsOK) String() string {
	return fmt.Sprintf("[GET /v1/hosts][%d] getHostsOK  %+v", 200, o.Payload)
}

func (o *GetHostsOK) GetPayload() *models.PageOfHost {
	return o.Payload
}

func (o *GetHostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfHost)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsBadRequest creates a GetHostsBadRequest with default headers values
func NewGetHostsBadRequest() *GetHostsBadRequest {
	return &GetHostsBadRequest{}
}

/*
GetHostsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetHostsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get hosts bad request response has a 2xx status code
func (o *GetHostsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get hosts bad request response has a 3xx status code
func (o *GetHostsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts bad request response has a 4xx status code
func (o *GetHostsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get hosts bad request response has a 5xx status code
func (o *GetHostsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get hosts bad request response a status code equal to that given
func (o *GetHostsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetHostsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/hosts][%d] getHostsBadRequest  %+v", 400, o.Payload)
}

func (o *GetHostsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/hosts][%d] getHostsBadRequest  %+v", 400, o.Payload)
}

func (o *GetHostsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHostsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHostsInternalServerError creates a GetHostsInternalServerError with default headers values
func NewGetHostsInternalServerError() *GetHostsInternalServerError {
	return &GetHostsInternalServerError{}
}

/*
GetHostsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetHostsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get hosts internal server error response has a 2xx status code
func (o *GetHostsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get hosts internal server error response has a 3xx status code
func (o *GetHostsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get hosts internal server error response has a 4xx status code
func (o *GetHostsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get hosts internal server error response has a 5xx status code
func (o *GetHostsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get hosts internal server error response a status code equal to that given
func (o *GetHostsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetHostsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/hosts][%d] getHostsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHostsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/hosts][%d] getHostsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHostsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHostsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
