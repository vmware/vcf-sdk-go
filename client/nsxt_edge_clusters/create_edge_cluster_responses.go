// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package nsxt_edge_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// CreateEdgeClusterReader is a Reader for the CreateEdgeCluster structure.
type CreateEdgeClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEdgeClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateEdgeClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewCreateEdgeClusterAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateEdgeClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateEdgeClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/edge-clusters] createEdgeCluster", response, response.Code())
	}
}

// NewCreateEdgeClusterOK creates a CreateEdgeClusterOK with default headers values
func NewCreateEdgeClusterOK() *CreateEdgeClusterOK {
	return &CreateEdgeClusterOK{}
}

/*
CreateEdgeClusterOK describes a response with status code 200, with default header values.

OK
*/
type CreateEdgeClusterOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this create edge cluster o k response has a 2xx status code
func (o *CreateEdgeClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create edge cluster o k response has a 3xx status code
func (o *CreateEdgeClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge cluster o k response has a 4xx status code
func (o *CreateEdgeClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create edge cluster o k response has a 5xx status code
func (o *CreateEdgeClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create edge cluster o k response a status code equal to that given
func (o *CreateEdgeClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create edge cluster o k response
func (o *CreateEdgeClusterOK) Code() int {
	return 200
}

func (o *CreateEdgeClusterOK) Error() string {
	return fmt.Sprintf("[POST /v1/edge-clusters][%d] createEdgeClusterOK  %+v", 200, o.Payload)
}

func (o *CreateEdgeClusterOK) String() string {
	return fmt.Sprintf("[POST /v1/edge-clusters][%d] createEdgeClusterOK  %+v", 200, o.Payload)
}

func (o *CreateEdgeClusterOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *CreateEdgeClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEdgeClusterAccepted creates a CreateEdgeClusterAccepted with default headers values
func NewCreateEdgeClusterAccepted() *CreateEdgeClusterAccepted {
	return &CreateEdgeClusterAccepted{}
}

/*
CreateEdgeClusterAccepted describes a response with status code 202, with default header values.

Accepted
*/
type CreateEdgeClusterAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this create edge cluster accepted response has a 2xx status code
func (o *CreateEdgeClusterAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create edge cluster accepted response has a 3xx status code
func (o *CreateEdgeClusterAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge cluster accepted response has a 4xx status code
func (o *CreateEdgeClusterAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create edge cluster accepted response has a 5xx status code
func (o *CreateEdgeClusterAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create edge cluster accepted response a status code equal to that given
func (o *CreateEdgeClusterAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the create edge cluster accepted response
func (o *CreateEdgeClusterAccepted) Code() int {
	return 202
}

func (o *CreateEdgeClusterAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/edge-clusters][%d] createEdgeClusterAccepted  %+v", 202, o.Payload)
}

func (o *CreateEdgeClusterAccepted) String() string {
	return fmt.Sprintf("[POST /v1/edge-clusters][%d] createEdgeClusterAccepted  %+v", 202, o.Payload)
}

func (o *CreateEdgeClusterAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *CreateEdgeClusterAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEdgeClusterBadRequest creates a CreateEdgeClusterBadRequest with default headers values
func NewCreateEdgeClusterBadRequest() *CreateEdgeClusterBadRequest {
	return &CreateEdgeClusterBadRequest{}
}

/*
CreateEdgeClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateEdgeClusterBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create edge cluster bad request response has a 2xx status code
func (o *CreateEdgeClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create edge cluster bad request response has a 3xx status code
func (o *CreateEdgeClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge cluster bad request response has a 4xx status code
func (o *CreateEdgeClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create edge cluster bad request response has a 5xx status code
func (o *CreateEdgeClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create edge cluster bad request response a status code equal to that given
func (o *CreateEdgeClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create edge cluster bad request response
func (o *CreateEdgeClusterBadRequest) Code() int {
	return 400
}

func (o *CreateEdgeClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/edge-clusters][%d] createEdgeClusterBadRequest  %+v", 400, o.Payload)
}

func (o *CreateEdgeClusterBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/edge-clusters][%d] createEdgeClusterBadRequest  %+v", 400, o.Payload)
}

func (o *CreateEdgeClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateEdgeClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEdgeClusterInternalServerError creates a CreateEdgeClusterInternalServerError with default headers values
func NewCreateEdgeClusterInternalServerError() *CreateEdgeClusterInternalServerError {
	return &CreateEdgeClusterInternalServerError{}
}

/*
CreateEdgeClusterInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type CreateEdgeClusterInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create edge cluster internal server error response has a 2xx status code
func (o *CreateEdgeClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create edge cluster internal server error response has a 3xx status code
func (o *CreateEdgeClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create edge cluster internal server error response has a 4xx status code
func (o *CreateEdgeClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create edge cluster internal server error response has a 5xx status code
func (o *CreateEdgeClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create edge cluster internal server error response a status code equal to that given
func (o *CreateEdgeClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create edge cluster internal server error response
func (o *CreateEdgeClusterInternalServerError) Code() int {
	return 500
}

func (o *CreateEdgeClusterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/edge-clusters][%d] createEdgeClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateEdgeClusterInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/edge-clusters][%d] createEdgeClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateEdgeClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateEdgeClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
