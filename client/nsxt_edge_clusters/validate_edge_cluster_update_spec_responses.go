// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package nsx_t_edge_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// ValidateEdgeClusterUpdateSpecReader is a Reader for the ValidateEdgeClusterUpdateSpec structure.
type ValidateEdgeClusterUpdateSpecReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateEdgeClusterUpdateSpecReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateEdgeClusterUpdateSpecOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewValidateEdgeClusterUpdateSpecAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateEdgeClusterUpdateSpecBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateEdgeClusterUpdateSpecInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/edge-clusters/{id}/validations] validateEdgeClusterUpdateSpec", response, response.Code())
	}
}

// NewValidateEdgeClusterUpdateSpecOK creates a ValidateEdgeClusterUpdateSpecOK with default headers values
func NewValidateEdgeClusterUpdateSpecOK() *ValidateEdgeClusterUpdateSpecOK {
	return &ValidateEdgeClusterUpdateSpecOK{}
}

/*
ValidateEdgeClusterUpdateSpecOK describes a response with status code 200, with default header values.

OK
*/
type ValidateEdgeClusterUpdateSpecOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate edge cluster update spec o k response has a 2xx status code
func (o *ValidateEdgeClusterUpdateSpecOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate edge cluster update spec o k response has a 3xx status code
func (o *ValidateEdgeClusterUpdateSpecOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate edge cluster update spec o k response has a 4xx status code
func (o *ValidateEdgeClusterUpdateSpecOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate edge cluster update spec o k response has a 5xx status code
func (o *ValidateEdgeClusterUpdateSpecOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate edge cluster update spec o k response a status code equal to that given
func (o *ValidateEdgeClusterUpdateSpecOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate edge cluster update spec o k response
func (o *ValidateEdgeClusterUpdateSpecOK) Code() int {
	return 200
}

func (o *ValidateEdgeClusterUpdateSpecOK) Error() string {
	return fmt.Sprintf("[POST /v1/edge-clusters/{id}/validations][%d] validateEdgeClusterUpdateSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateEdgeClusterUpdateSpecOK) String() string {
	return fmt.Sprintf("[POST /v1/edge-clusters/{id}/validations][%d] validateEdgeClusterUpdateSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateEdgeClusterUpdateSpecOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateEdgeClusterUpdateSpecOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateEdgeClusterUpdateSpecAccepted creates a ValidateEdgeClusterUpdateSpecAccepted with default headers values
func NewValidateEdgeClusterUpdateSpecAccepted() *ValidateEdgeClusterUpdateSpecAccepted {
	return &ValidateEdgeClusterUpdateSpecAccepted{}
}

/*
ValidateEdgeClusterUpdateSpecAccepted describes a response with status code 202, with default header values.

Accepted
*/
type ValidateEdgeClusterUpdateSpecAccepted struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate edge cluster update spec accepted response has a 2xx status code
func (o *ValidateEdgeClusterUpdateSpecAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate edge cluster update spec accepted response has a 3xx status code
func (o *ValidateEdgeClusterUpdateSpecAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate edge cluster update spec accepted response has a 4xx status code
func (o *ValidateEdgeClusterUpdateSpecAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate edge cluster update spec accepted response has a 5xx status code
func (o *ValidateEdgeClusterUpdateSpecAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this validate edge cluster update spec accepted response a status code equal to that given
func (o *ValidateEdgeClusterUpdateSpecAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the validate edge cluster update spec accepted response
func (o *ValidateEdgeClusterUpdateSpecAccepted) Code() int {
	return 202
}

func (o *ValidateEdgeClusterUpdateSpecAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/edge-clusters/{id}/validations][%d] validateEdgeClusterUpdateSpecAccepted  %+v", 202, o.Payload)
}

func (o *ValidateEdgeClusterUpdateSpecAccepted) String() string {
	return fmt.Sprintf("[POST /v1/edge-clusters/{id}/validations][%d] validateEdgeClusterUpdateSpecAccepted  %+v", 202, o.Payload)
}

func (o *ValidateEdgeClusterUpdateSpecAccepted) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateEdgeClusterUpdateSpecAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateEdgeClusterUpdateSpecBadRequest creates a ValidateEdgeClusterUpdateSpecBadRequest with default headers values
func NewValidateEdgeClusterUpdateSpecBadRequest() *ValidateEdgeClusterUpdateSpecBadRequest {
	return &ValidateEdgeClusterUpdateSpecBadRequest{}
}

/*
ValidateEdgeClusterUpdateSpecBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateEdgeClusterUpdateSpecBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate edge cluster update spec bad request response has a 2xx status code
func (o *ValidateEdgeClusterUpdateSpecBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate edge cluster update spec bad request response has a 3xx status code
func (o *ValidateEdgeClusterUpdateSpecBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate edge cluster update spec bad request response has a 4xx status code
func (o *ValidateEdgeClusterUpdateSpecBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate edge cluster update spec bad request response has a 5xx status code
func (o *ValidateEdgeClusterUpdateSpecBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate edge cluster update spec bad request response a status code equal to that given
func (o *ValidateEdgeClusterUpdateSpecBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate edge cluster update spec bad request response
func (o *ValidateEdgeClusterUpdateSpecBadRequest) Code() int {
	return 400
}

func (o *ValidateEdgeClusterUpdateSpecBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/edge-clusters/{id}/validations][%d] validateEdgeClusterUpdateSpecBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateEdgeClusterUpdateSpecBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/edge-clusters/{id}/validations][%d] validateEdgeClusterUpdateSpecBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateEdgeClusterUpdateSpecBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateEdgeClusterUpdateSpecBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateEdgeClusterUpdateSpecInternalServerError creates a ValidateEdgeClusterUpdateSpecInternalServerError with default headers values
func NewValidateEdgeClusterUpdateSpecInternalServerError() *ValidateEdgeClusterUpdateSpecInternalServerError {
	return &ValidateEdgeClusterUpdateSpecInternalServerError{}
}

/*
ValidateEdgeClusterUpdateSpecInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type ValidateEdgeClusterUpdateSpecInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate edge cluster update spec internal server error response has a 2xx status code
func (o *ValidateEdgeClusterUpdateSpecInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate edge cluster update spec internal server error response has a 3xx status code
func (o *ValidateEdgeClusterUpdateSpecInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate edge cluster update spec internal server error response has a 4xx status code
func (o *ValidateEdgeClusterUpdateSpecInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate edge cluster update spec internal server error response has a 5xx status code
func (o *ValidateEdgeClusterUpdateSpecInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate edge cluster update spec internal server error response a status code equal to that given
func (o *ValidateEdgeClusterUpdateSpecInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate edge cluster update spec internal server error response
func (o *ValidateEdgeClusterUpdateSpecInternalServerError) Code() int {
	return 500
}

func (o *ValidateEdgeClusterUpdateSpecInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/edge-clusters/{id}/validations][%d] validateEdgeClusterUpdateSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateEdgeClusterUpdateSpecInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/edge-clusters/{id}/validations][%d] validateEdgeClusterUpdateSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateEdgeClusterUpdateSpecInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateEdgeClusterUpdateSpecInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
