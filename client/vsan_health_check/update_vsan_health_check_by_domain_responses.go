// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vsan_health_check

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// UpdateVSANHealthCheckByDomainReader is a Reader for the UpdateVSANHealthCheckByDomain structure.
type UpdateVSANHealthCheckByDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateVSANHealthCheckByDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateVSANHealthCheckByDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewUpdateVSANHealthCheckByDomainAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateVSANHealthCheckByDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateVSANHealthCheckByDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /v1/domains/{domainId}/health-checks] updateVsanHealthCheckByDomain", response, response.Code())
	}
}

// NewUpdateVSANHealthCheckByDomainOK creates a UpdateVSANHealthCheckByDomainOK with default headers values
func NewUpdateVSANHealthCheckByDomainOK() *UpdateVSANHealthCheckByDomainOK {
	return &UpdateVSANHealthCheckByDomainOK{}
}

/*
UpdateVSANHealthCheckByDomainOK describes a response with status code 200, with default header values.

OK
*/
type UpdateVSANHealthCheckByDomainOK struct {
	Payload *models.HealthCheckTask
}

// IsSuccess returns true when this update Vsan health check by domain o k response has a 2xx status code
func (o *UpdateVSANHealthCheckByDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update Vsan health check by domain o k response has a 3xx status code
func (o *UpdateVSANHealthCheckByDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update Vsan health check by domain o k response has a 4xx status code
func (o *UpdateVSANHealthCheckByDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update Vsan health check by domain o k response has a 5xx status code
func (o *UpdateVSANHealthCheckByDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update Vsan health check by domain o k response a status code equal to that given
func (o *UpdateVSANHealthCheckByDomainOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update Vsan health check by domain o k response
func (o *UpdateVSANHealthCheckByDomainOK) Code() int {
	return 200
}

func (o *UpdateVSANHealthCheckByDomainOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] updateVsanHealthCheckByDomainOK  %+v", 200, o.Payload)
}

func (o *UpdateVSANHealthCheckByDomainOK) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] updateVsanHealthCheckByDomainOK  %+v", 200, o.Payload)
}

func (o *UpdateVSANHealthCheckByDomainOK) GetPayload() *models.HealthCheckTask {
	return o.Payload
}

func (o *UpdateVSANHealthCheckByDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVSANHealthCheckByDomainAccepted creates a UpdateVSANHealthCheckByDomainAccepted with default headers values
func NewUpdateVSANHealthCheckByDomainAccepted() *UpdateVSANHealthCheckByDomainAccepted {
	return &UpdateVSANHealthCheckByDomainAccepted{}
}

/*
UpdateVSANHealthCheckByDomainAccepted describes a response with status code 202, with default header values.

Accepted
*/
type UpdateVSANHealthCheckByDomainAccepted struct {
	Payload *models.HealthCheckTask
}

// IsSuccess returns true when this update Vsan health check by domain accepted response has a 2xx status code
func (o *UpdateVSANHealthCheckByDomainAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update Vsan health check by domain accepted response has a 3xx status code
func (o *UpdateVSANHealthCheckByDomainAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update Vsan health check by domain accepted response has a 4xx status code
func (o *UpdateVSANHealthCheckByDomainAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this update Vsan health check by domain accepted response has a 5xx status code
func (o *UpdateVSANHealthCheckByDomainAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this update Vsan health check by domain accepted response a status code equal to that given
func (o *UpdateVSANHealthCheckByDomainAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the update Vsan health check by domain accepted response
func (o *UpdateVSANHealthCheckByDomainAccepted) Code() int {
	return 202
}

func (o *UpdateVSANHealthCheckByDomainAccepted) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] updateVsanHealthCheckByDomainAccepted  %+v", 202, o.Payload)
}

func (o *UpdateVSANHealthCheckByDomainAccepted) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] updateVsanHealthCheckByDomainAccepted  %+v", 202, o.Payload)
}

func (o *UpdateVSANHealthCheckByDomainAccepted) GetPayload() *models.HealthCheckTask {
	return o.Payload
}

func (o *UpdateVSANHealthCheckByDomainAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVSANHealthCheckByDomainBadRequest creates a UpdateVSANHealthCheckByDomainBadRequest with default headers values
func NewUpdateVSANHealthCheckByDomainBadRequest() *UpdateVSANHealthCheckByDomainBadRequest {
	return &UpdateVSANHealthCheckByDomainBadRequest{}
}

/*
UpdateVSANHealthCheckByDomainBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateVSANHealthCheckByDomainBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update Vsan health check by domain bad request response has a 2xx status code
func (o *UpdateVSANHealthCheckByDomainBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update Vsan health check by domain bad request response has a 3xx status code
func (o *UpdateVSANHealthCheckByDomainBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update Vsan health check by domain bad request response has a 4xx status code
func (o *UpdateVSANHealthCheckByDomainBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update Vsan health check by domain bad request response has a 5xx status code
func (o *UpdateVSANHealthCheckByDomainBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update Vsan health check by domain bad request response a status code equal to that given
func (o *UpdateVSANHealthCheckByDomainBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update Vsan health check by domain bad request response
func (o *UpdateVSANHealthCheckByDomainBadRequest) Code() int {
	return 400
}

func (o *UpdateVSANHealthCheckByDomainBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] updateVsanHealthCheckByDomainBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateVSANHealthCheckByDomainBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] updateVsanHealthCheckByDomainBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateVSANHealthCheckByDomainBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateVSANHealthCheckByDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateVSANHealthCheckByDomainInternalServerError creates a UpdateVSANHealthCheckByDomainInternalServerError with default headers values
func NewUpdateVSANHealthCheckByDomainInternalServerError() *UpdateVSANHealthCheckByDomainInternalServerError {
	return &UpdateVSANHealthCheckByDomainInternalServerError{}
}

/*
UpdateVSANHealthCheckByDomainInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateVSANHealthCheckByDomainInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update Vsan health check by domain internal server error response has a 2xx status code
func (o *UpdateVSANHealthCheckByDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update Vsan health check by domain internal server error response has a 3xx status code
func (o *UpdateVSANHealthCheckByDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update Vsan health check by domain internal server error response has a 4xx status code
func (o *UpdateVSANHealthCheckByDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update Vsan health check by domain internal server error response has a 5xx status code
func (o *UpdateVSANHealthCheckByDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update Vsan health check by domain internal server error response a status code equal to that given
func (o *UpdateVSANHealthCheckByDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update Vsan health check by domain internal server error response
func (o *UpdateVSANHealthCheckByDomainInternalServerError) Code() int {
	return 500
}

func (o *UpdateVSANHealthCheckByDomainInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] updateVsanHealthCheckByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateVSANHealthCheckByDomainInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{domainId}/health-checks][%d] updateVsanHealthCheckByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateVSANHealthCheckByDomainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateVSANHealthCheckByDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
