// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vsan_health_check

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetVSANHealthCheckByDomainReader is a Reader for the GetVSANHealthCheckByDomain structure.
type GetVSANHealthCheckByDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVSANHealthCheckByDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVSANHealthCheckByDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetVSANHealthCheckByDomainAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVSANHealthCheckByDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVSANHealthCheckByDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/domains/{domainId}/health-checks] getVsanHealthCheckByDomain", response, response.Code())
	}
}

// NewGetVSANHealthCheckByDomainOK creates a GetVSANHealthCheckByDomainOK with default headers values
func NewGetVSANHealthCheckByDomainOK() *GetVSANHealthCheckByDomainOK {
	return &GetVSANHealthCheckByDomainOK{}
}

/*
GetVSANHealthCheckByDomainOK describes a response with status code 200, with default header values.

OK
*/
type GetVSANHealthCheckByDomainOK struct {
	Payload *models.HealthCheckQueryResult
}

// IsSuccess returns true when this get Vsan health check by domain o k response has a 2xx status code
func (o *GetVSANHealthCheckByDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Vsan health check by domain o k response has a 3xx status code
func (o *GetVSANHealthCheckByDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by domain o k response has a 4xx status code
func (o *GetVSANHealthCheckByDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Vsan health check by domain o k response has a 5xx status code
func (o *GetVSANHealthCheckByDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Vsan health check by domain o k response a status code equal to that given
func (o *GetVSANHealthCheckByDomainOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Vsan health check by domain o k response
func (o *GetVSANHealthCheckByDomainOK) Code() int {
	return 200
}

func (o *GetVSANHealthCheckByDomainOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getVsanHealthCheckByDomainOK  %+v", 200, o.Payload)
}

func (o *GetVSANHealthCheckByDomainOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getVsanHealthCheckByDomainOK  %+v", 200, o.Payload)
}

func (o *GetVSANHealthCheckByDomainOK) GetPayload() *models.HealthCheckQueryResult {
	return o.Payload
}

func (o *GetVSANHealthCheckByDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSANHealthCheckByDomainAccepted creates a GetVSANHealthCheckByDomainAccepted with default headers values
func NewGetVSANHealthCheckByDomainAccepted() *GetVSANHealthCheckByDomainAccepted {
	return &GetVSANHealthCheckByDomainAccepted{}
}

/*
GetVSANHealthCheckByDomainAccepted describes a response with status code 202, with default header values.

Accepted
*/
type GetVSANHealthCheckByDomainAccepted struct {
	Payload *models.HealthCheckQueryResult
}

// IsSuccess returns true when this get Vsan health check by domain accepted response has a 2xx status code
func (o *GetVSANHealthCheckByDomainAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Vsan health check by domain accepted response has a 3xx status code
func (o *GetVSANHealthCheckByDomainAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by domain accepted response has a 4xx status code
func (o *GetVSANHealthCheckByDomainAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Vsan health check by domain accepted response has a 5xx status code
func (o *GetVSANHealthCheckByDomainAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get Vsan health check by domain accepted response a status code equal to that given
func (o *GetVSANHealthCheckByDomainAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the get Vsan health check by domain accepted response
func (o *GetVSANHealthCheckByDomainAccepted) Code() int {
	return 202
}

func (o *GetVSANHealthCheckByDomainAccepted) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getVsanHealthCheckByDomainAccepted  %+v", 202, o.Payload)
}

func (o *GetVSANHealthCheckByDomainAccepted) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getVsanHealthCheckByDomainAccepted  %+v", 202, o.Payload)
}

func (o *GetVSANHealthCheckByDomainAccepted) GetPayload() *models.HealthCheckQueryResult {
	return o.Payload
}

func (o *GetVSANHealthCheckByDomainAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSANHealthCheckByDomainBadRequest creates a GetVSANHealthCheckByDomainBadRequest with default headers values
func NewGetVSANHealthCheckByDomainBadRequest() *GetVSANHealthCheckByDomainBadRequest {
	return &GetVSANHealthCheckByDomainBadRequest{}
}

/*
GetVSANHealthCheckByDomainBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVSANHealthCheckByDomainBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Vsan health check by domain bad request response has a 2xx status code
func (o *GetVSANHealthCheckByDomainBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Vsan health check by domain bad request response has a 3xx status code
func (o *GetVSANHealthCheckByDomainBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by domain bad request response has a 4xx status code
func (o *GetVSANHealthCheckByDomainBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Vsan health check by domain bad request response has a 5xx status code
func (o *GetVSANHealthCheckByDomainBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Vsan health check by domain bad request response a status code equal to that given
func (o *GetVSANHealthCheckByDomainBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Vsan health check by domain bad request response
func (o *GetVSANHealthCheckByDomainBadRequest) Code() int {
	return 400
}

func (o *GetVSANHealthCheckByDomainBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getVsanHealthCheckByDomainBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSANHealthCheckByDomainBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getVsanHealthCheckByDomainBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSANHealthCheckByDomainBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSANHealthCheckByDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSANHealthCheckByDomainInternalServerError creates a GetVSANHealthCheckByDomainInternalServerError with default headers values
func NewGetVSANHealthCheckByDomainInternalServerError() *GetVSANHealthCheckByDomainInternalServerError {
	return &GetVSANHealthCheckByDomainInternalServerError{}
}

/*
GetVSANHealthCheckByDomainInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVSANHealthCheckByDomainInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Vsan health check by domain internal server error response has a 2xx status code
func (o *GetVSANHealthCheckByDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Vsan health check by domain internal server error response has a 3xx status code
func (o *GetVSANHealthCheckByDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by domain internal server error response has a 4xx status code
func (o *GetVSANHealthCheckByDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Vsan health check by domain internal server error response has a 5xx status code
func (o *GetVSANHealthCheckByDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Vsan health check by domain internal server error response a status code equal to that given
func (o *GetVSANHealthCheckByDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Vsan health check by domain internal server error response
func (o *GetVSANHealthCheckByDomainInternalServerError) Code() int {
	return 500
}

func (o *GetVSANHealthCheckByDomainInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getVsanHealthCheckByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSANHealthCheckByDomainInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getVsanHealthCheckByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSANHealthCheckByDomainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSANHealthCheckByDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
