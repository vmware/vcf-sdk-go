// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vsan_health_check

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetVSANHealthCheckByQueryIDReader is a Reader for the GetVSANHealthCheckByQueryID structure.
type GetVSANHealthCheckByQueryIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVSANHealthCheckByQueryIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVSANHealthCheckByQueryIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVSANHealthCheckByQueryIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVSANHealthCheckByQueryIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/domains/{domainId}/health-checks/queries/{queryId}] getVsanHealthCheckByQueryID", response, response.Code())
	}
}

// NewGetVSANHealthCheckByQueryIDOK creates a GetVSANHealthCheckByQueryIDOK with default headers values
func NewGetVSANHealthCheckByQueryIDOK() *GetVSANHealthCheckByQueryIDOK {
	return &GetVSANHealthCheckByQueryIDOK{}
}

/*
GetVSANHealthCheckByQueryIDOK describes a response with status code 200, with default header values.

Ok
*/
type GetVSANHealthCheckByQueryIDOK struct {
	Payload *models.HealthCheckQueryResult
}

// IsSuccess returns true when this get Vsan health check by query Id o k response has a 2xx status code
func (o *GetVSANHealthCheckByQueryIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Vsan health check by query Id o k response has a 3xx status code
func (o *GetVSANHealthCheckByQueryIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by query Id o k response has a 4xx status code
func (o *GetVSANHealthCheckByQueryIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Vsan health check by query Id o k response has a 5xx status code
func (o *GetVSANHealthCheckByQueryIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Vsan health check by query Id o k response a status code equal to that given
func (o *GetVSANHealthCheckByQueryIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Vsan health check by query Id o k response
func (o *GetVSANHealthCheckByQueryIDOK) Code() int {
	return 200
}

func (o *GetVSANHealthCheckByQueryIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/queries/{queryId}][%d] getVsanHealthCheckByQueryIdOK  %+v", 200, o.Payload)
}

func (o *GetVSANHealthCheckByQueryIDOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/queries/{queryId}][%d] getVsanHealthCheckByQueryIdOK  %+v", 200, o.Payload)
}

func (o *GetVSANHealthCheckByQueryIDOK) GetPayload() *models.HealthCheckQueryResult {
	return o.Payload
}

func (o *GetVSANHealthCheckByQueryIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSANHealthCheckByQueryIDBadRequest creates a GetVSANHealthCheckByQueryIDBadRequest with default headers values
func NewGetVSANHealthCheckByQueryIDBadRequest() *GetVSANHealthCheckByQueryIDBadRequest {
	return &GetVSANHealthCheckByQueryIDBadRequest{}
}

/*
GetVSANHealthCheckByQueryIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVSANHealthCheckByQueryIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Vsan health check by query Id bad request response has a 2xx status code
func (o *GetVSANHealthCheckByQueryIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Vsan health check by query Id bad request response has a 3xx status code
func (o *GetVSANHealthCheckByQueryIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by query Id bad request response has a 4xx status code
func (o *GetVSANHealthCheckByQueryIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Vsan health check by query Id bad request response has a 5xx status code
func (o *GetVSANHealthCheckByQueryIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Vsan health check by query Id bad request response a status code equal to that given
func (o *GetVSANHealthCheckByQueryIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Vsan health check by query Id bad request response
func (o *GetVSANHealthCheckByQueryIDBadRequest) Code() int {
	return 400
}

func (o *GetVSANHealthCheckByQueryIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/queries/{queryId}][%d] getVsanHealthCheckByQueryIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSANHealthCheckByQueryIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/queries/{queryId}][%d] getVsanHealthCheckByQueryIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSANHealthCheckByQueryIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSANHealthCheckByQueryIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSANHealthCheckByQueryIDInternalServerError creates a GetVSANHealthCheckByQueryIDInternalServerError with default headers values
func NewGetVSANHealthCheckByQueryIDInternalServerError() *GetVSANHealthCheckByQueryIDInternalServerError {
	return &GetVSANHealthCheckByQueryIDInternalServerError{}
}

/*
GetVSANHealthCheckByQueryIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVSANHealthCheckByQueryIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Vsan health check by query Id internal server error response has a 2xx status code
func (o *GetVSANHealthCheckByQueryIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Vsan health check by query Id internal server error response has a 3xx status code
func (o *GetVSANHealthCheckByQueryIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by query Id internal server error response has a 4xx status code
func (o *GetVSANHealthCheckByQueryIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Vsan health check by query Id internal server error response has a 5xx status code
func (o *GetVSANHealthCheckByQueryIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Vsan health check by query Id internal server error response a status code equal to that given
func (o *GetVSANHealthCheckByQueryIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Vsan health check by query Id internal server error response
func (o *GetVSANHealthCheckByQueryIDInternalServerError) Code() int {
	return 500
}

func (o *GetVSANHealthCheckByQueryIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/queries/{queryId}][%d] getVsanHealthCheckByQueryIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSANHealthCheckByQueryIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/queries/{queryId}][%d] getVsanHealthCheckByQueryIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSANHealthCheckByQueryIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSANHealthCheckByQueryIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
