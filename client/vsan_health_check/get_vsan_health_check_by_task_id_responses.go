// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vsan_health_check

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetVSANHealthCheckByTaskIDReader is a Reader for the GetVSANHealthCheckByTaskID structure.
type GetVSANHealthCheckByTaskIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVSANHealthCheckByTaskIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVSANHealthCheckByTaskIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVSANHealthCheckByTaskIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVSANHealthCheckByTaskIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/domains/{domainId}/health-checks/tasks/{taskId}] getVsanHealthCheckByTaskID", response, response.Code())
	}
}

// NewGetVSANHealthCheckByTaskIDOK creates a GetVSANHealthCheckByTaskIDOK with default headers values
func NewGetVSANHealthCheckByTaskIDOK() *GetVSANHealthCheckByTaskIDOK {
	return &GetVSANHealthCheckByTaskIDOK{}
}

/*
GetVSANHealthCheckByTaskIDOK describes a response with status code 200, with default header values.

Ok
*/
type GetVSANHealthCheckByTaskIDOK struct {
	Payload *models.HealthCheckTask
}

// IsSuccess returns true when this get Vsan health check by task Id o k response has a 2xx status code
func (o *GetVSANHealthCheckByTaskIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Vsan health check by task Id o k response has a 3xx status code
func (o *GetVSANHealthCheckByTaskIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by task Id o k response has a 4xx status code
func (o *GetVSANHealthCheckByTaskIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Vsan health check by task Id o k response has a 5xx status code
func (o *GetVSANHealthCheckByTaskIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Vsan health check by task Id o k response a status code equal to that given
func (o *GetVSANHealthCheckByTaskIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Vsan health check by task Id o k response
func (o *GetVSANHealthCheckByTaskIDOK) Code() int {
	return 200
}

func (o *GetVSANHealthCheckByTaskIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/tasks/{taskId}][%d] getVsanHealthCheckByTaskIdOK  %+v", 200, o.Payload)
}

func (o *GetVSANHealthCheckByTaskIDOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/tasks/{taskId}][%d] getVsanHealthCheckByTaskIdOK  %+v", 200, o.Payload)
}

func (o *GetVSANHealthCheckByTaskIDOK) GetPayload() *models.HealthCheckTask {
	return o.Payload
}

func (o *GetVSANHealthCheckByTaskIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSANHealthCheckByTaskIDBadRequest creates a GetVSANHealthCheckByTaskIDBadRequest with default headers values
func NewGetVSANHealthCheckByTaskIDBadRequest() *GetVSANHealthCheckByTaskIDBadRequest {
	return &GetVSANHealthCheckByTaskIDBadRequest{}
}

/*
GetVSANHealthCheckByTaskIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVSANHealthCheckByTaskIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Vsan health check by task Id bad request response has a 2xx status code
func (o *GetVSANHealthCheckByTaskIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Vsan health check by task Id bad request response has a 3xx status code
func (o *GetVSANHealthCheckByTaskIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by task Id bad request response has a 4xx status code
func (o *GetVSANHealthCheckByTaskIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Vsan health check by task Id bad request response has a 5xx status code
func (o *GetVSANHealthCheckByTaskIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Vsan health check by task Id bad request response a status code equal to that given
func (o *GetVSANHealthCheckByTaskIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Vsan health check by task Id bad request response
func (o *GetVSANHealthCheckByTaskIDBadRequest) Code() int {
	return 400
}

func (o *GetVSANHealthCheckByTaskIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/tasks/{taskId}][%d] getVsanHealthCheckByTaskIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSANHealthCheckByTaskIDBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/tasks/{taskId}][%d] getVsanHealthCheckByTaskIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetVSANHealthCheckByTaskIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSANHealthCheckByTaskIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVSANHealthCheckByTaskIDInternalServerError creates a GetVSANHealthCheckByTaskIDInternalServerError with default headers values
func NewGetVSANHealthCheckByTaskIDInternalServerError() *GetVSANHealthCheckByTaskIDInternalServerError {
	return &GetVSANHealthCheckByTaskIDInternalServerError{}
}

/*
GetVSANHealthCheckByTaskIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVSANHealthCheckByTaskIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Vsan health check by task Id internal server error response has a 2xx status code
func (o *GetVSANHealthCheckByTaskIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Vsan health check by task Id internal server error response has a 3xx status code
func (o *GetVSANHealthCheckByTaskIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Vsan health check by task Id internal server error response has a 4xx status code
func (o *GetVSANHealthCheckByTaskIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Vsan health check by task Id internal server error response has a 5xx status code
func (o *GetVSANHealthCheckByTaskIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Vsan health check by task Id internal server error response a status code equal to that given
func (o *GetVSANHealthCheckByTaskIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Vsan health check by task Id internal server error response
func (o *GetVSANHealthCheckByTaskIDInternalServerError) Code() int {
	return 500
}

func (o *GetVSANHealthCheckByTaskIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/tasks/{taskId}][%d] getVsanHealthCheckByTaskIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSANHealthCheckByTaskIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks/tasks/{taskId}][%d] getVsanHealthCheckByTaskIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVSANHealthCheckByTaskIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVSANHealthCheckByTaskIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
