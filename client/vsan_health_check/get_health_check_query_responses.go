// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vsan_health_check

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetHealthCheckQueryReader is a Reader for the GetHealthCheckQuery structure.
type GetHealthCheckQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHealthCheckQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHealthCheckQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetHealthCheckQueryAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetHealthCheckQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHealthCheckQueryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetHealthCheckQueryOK creates a GetHealthCheckQueryOK with default headers values
func NewGetHealthCheckQueryOK() *GetHealthCheckQueryOK {
	return &GetHealthCheckQueryOK{}
}

/*
GetHealthCheckQueryOK describes a response with status code 200, with default header values.

OK
*/
type GetHealthCheckQueryOK struct {
	Payload *models.HealthCheckQueryResult
}

// IsSuccess returns true when this get health check query o k response has a 2xx status code
func (o *GetHealthCheckQueryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get health check query o k response has a 3xx status code
func (o *GetHealthCheckQueryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get health check query o k response has a 4xx status code
func (o *GetHealthCheckQueryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get health check query o k response has a 5xx status code
func (o *GetHealthCheckQueryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get health check query o k response a status code equal to that given
func (o *GetHealthCheckQueryOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetHealthCheckQueryOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getHealthCheckQueryOK  %+v", 200, o.Payload)
}

func (o *GetHealthCheckQueryOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getHealthCheckQueryOK  %+v", 200, o.Payload)
}

func (o *GetHealthCheckQueryOK) GetPayload() *models.HealthCheckQueryResult {
	return o.Payload
}

func (o *GetHealthCheckQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHealthCheckQueryAccepted creates a GetHealthCheckQueryAccepted with default headers values
func NewGetHealthCheckQueryAccepted() *GetHealthCheckQueryAccepted {
	return &GetHealthCheckQueryAccepted{}
}

/*
GetHealthCheckQueryAccepted describes a response with status code 202, with default header values.

Accepted
*/
type GetHealthCheckQueryAccepted struct {
	Payload *models.HealthCheckQueryResult
}

// IsSuccess returns true when this get health check query accepted response has a 2xx status code
func (o *GetHealthCheckQueryAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get health check query accepted response has a 3xx status code
func (o *GetHealthCheckQueryAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get health check query accepted response has a 4xx status code
func (o *GetHealthCheckQueryAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get health check query accepted response has a 5xx status code
func (o *GetHealthCheckQueryAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get health check query accepted response a status code equal to that given
func (o *GetHealthCheckQueryAccepted) IsCode(code int) bool {
	return code == 202
}

func (o *GetHealthCheckQueryAccepted) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getHealthCheckQueryAccepted  %+v", 202, o.Payload)
}

func (o *GetHealthCheckQueryAccepted) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getHealthCheckQueryAccepted  %+v", 202, o.Payload)
}

func (o *GetHealthCheckQueryAccepted) GetPayload() *models.HealthCheckQueryResult {
	return o.Payload
}

func (o *GetHealthCheckQueryAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HealthCheckQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHealthCheckQueryBadRequest creates a GetHealthCheckQueryBadRequest with default headers values
func NewGetHealthCheckQueryBadRequest() *GetHealthCheckQueryBadRequest {
	return &GetHealthCheckQueryBadRequest{}
}

/*
GetHealthCheckQueryBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetHealthCheckQueryBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get health check query bad request response has a 2xx status code
func (o *GetHealthCheckQueryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get health check query bad request response has a 3xx status code
func (o *GetHealthCheckQueryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get health check query bad request response has a 4xx status code
func (o *GetHealthCheckQueryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get health check query bad request response has a 5xx status code
func (o *GetHealthCheckQueryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get health check query bad request response a status code equal to that given
func (o *GetHealthCheckQueryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetHealthCheckQueryBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getHealthCheckQueryBadRequest  %+v", 400, o.Payload)
}

func (o *GetHealthCheckQueryBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getHealthCheckQueryBadRequest  %+v", 400, o.Payload)
}

func (o *GetHealthCheckQueryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHealthCheckQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHealthCheckQueryInternalServerError creates a GetHealthCheckQueryInternalServerError with default headers values
func NewGetHealthCheckQueryInternalServerError() *GetHealthCheckQueryInternalServerError {
	return &GetHealthCheckQueryInternalServerError{}
}

/*
GetHealthCheckQueryInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetHealthCheckQueryInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get health check query internal server error response has a 2xx status code
func (o *GetHealthCheckQueryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get health check query internal server error response has a 3xx status code
func (o *GetHealthCheckQueryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get health check query internal server error response has a 4xx status code
func (o *GetHealthCheckQueryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get health check query internal server error response has a 5xx status code
func (o *GetHealthCheckQueryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get health check query internal server error response a status code equal to that given
func (o *GetHealthCheckQueryInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetHealthCheckQueryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getHealthCheckQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHealthCheckQueryInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainId}/health-checks][%d] getHealthCheckQueryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetHealthCheckQueryInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetHealthCheckQueryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
