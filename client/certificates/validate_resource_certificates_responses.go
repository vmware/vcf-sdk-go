// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// ValidateResourceCertificatesReader is a Reader for the ValidateResourceCertificates structure.
type ValidateResourceCertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateResourceCertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateResourceCertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewValidateResourceCertificatesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewValidateResourceCertificatesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateResourceCertificatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/domains/{id}/resource-certificates/validations] validateResourceCertificates", response, response.Code())
	}
}

// NewValidateResourceCertificatesOK creates a ValidateResourceCertificatesOK with default headers values
func NewValidateResourceCertificatesOK() *ValidateResourceCertificatesOK {
	return &ValidateResourceCertificatesOK{}
}

/*
ValidateResourceCertificatesOK describes a response with status code 200, with default header values.

OK
*/
type ValidateResourceCertificatesOK struct {
	Payload *models.CertificateValidationTask
}

// IsSuccess returns true when this validate resource certificates o k response has a 2xx status code
func (o *ValidateResourceCertificatesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate resource certificates o k response has a 3xx status code
func (o *ValidateResourceCertificatesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate resource certificates o k response has a 4xx status code
func (o *ValidateResourceCertificatesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate resource certificates o k response has a 5xx status code
func (o *ValidateResourceCertificatesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate resource certificates o k response a status code equal to that given
func (o *ValidateResourceCertificatesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate resource certificates o k response
func (o *ValidateResourceCertificatesOK) Code() int {
	return 200
}

func (o *ValidateResourceCertificatesOK) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/resource-certificates/validations][%d] validateResourceCertificatesOK  %+v", 200, o.Payload)
}

func (o *ValidateResourceCertificatesOK) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/resource-certificates/validations][%d] validateResourceCertificatesOK  %+v", 200, o.Payload)
}

func (o *ValidateResourceCertificatesOK) GetPayload() *models.CertificateValidationTask {
	return o.Payload
}

func (o *ValidateResourceCertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateValidationTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateResourceCertificatesCreated creates a ValidateResourceCertificatesCreated with default headers values
func NewValidateResourceCertificatesCreated() *ValidateResourceCertificatesCreated {
	return &ValidateResourceCertificatesCreated{}
}

/*
ValidateResourceCertificatesCreated describes a response with status code 201, with default header values.

Created
*/
type ValidateResourceCertificatesCreated struct {
	Payload *models.CertificateValidationTask
}

// IsSuccess returns true when this validate resource certificates created response has a 2xx status code
func (o *ValidateResourceCertificatesCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate resource certificates created response has a 3xx status code
func (o *ValidateResourceCertificatesCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate resource certificates created response has a 4xx status code
func (o *ValidateResourceCertificatesCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate resource certificates created response has a 5xx status code
func (o *ValidateResourceCertificatesCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this validate resource certificates created response a status code equal to that given
func (o *ValidateResourceCertificatesCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the validate resource certificates created response
func (o *ValidateResourceCertificatesCreated) Code() int {
	return 201
}

func (o *ValidateResourceCertificatesCreated) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/resource-certificates/validations][%d] validateResourceCertificatesCreated  %+v", 201, o.Payload)
}

func (o *ValidateResourceCertificatesCreated) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/resource-certificates/validations][%d] validateResourceCertificatesCreated  %+v", 201, o.Payload)
}

func (o *ValidateResourceCertificatesCreated) GetPayload() *models.CertificateValidationTask {
	return o.Payload
}

func (o *ValidateResourceCertificatesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateValidationTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateResourceCertificatesNotFound creates a ValidateResourceCertificatesNotFound with default headers values
func NewValidateResourceCertificatesNotFound() *ValidateResourceCertificatesNotFound {
	return &ValidateResourceCertificatesNotFound{}
}

/*
ValidateResourceCertificatesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateResourceCertificatesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate resource certificates not found response has a 2xx status code
func (o *ValidateResourceCertificatesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate resource certificates not found response has a 3xx status code
func (o *ValidateResourceCertificatesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate resource certificates not found response has a 4xx status code
func (o *ValidateResourceCertificatesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate resource certificates not found response has a 5xx status code
func (o *ValidateResourceCertificatesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate resource certificates not found response a status code equal to that given
func (o *ValidateResourceCertificatesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate resource certificates not found response
func (o *ValidateResourceCertificatesNotFound) Code() int {
	return 404
}

func (o *ValidateResourceCertificatesNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/resource-certificates/validations][%d] validateResourceCertificatesNotFound  %+v", 404, o.Payload)
}

func (o *ValidateResourceCertificatesNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/resource-certificates/validations][%d] validateResourceCertificatesNotFound  %+v", 404, o.Payload)
}

func (o *ValidateResourceCertificatesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateResourceCertificatesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateResourceCertificatesInternalServerError creates a ValidateResourceCertificatesInternalServerError with default headers values
func NewValidateResourceCertificatesInternalServerError() *ValidateResourceCertificatesInternalServerError {
	return &ValidateResourceCertificatesInternalServerError{}
}

/*
ValidateResourceCertificatesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type ValidateResourceCertificatesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate resource certificates internal server error response has a 2xx status code
func (o *ValidateResourceCertificatesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate resource certificates internal server error response has a 3xx status code
func (o *ValidateResourceCertificatesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate resource certificates internal server error response has a 4xx status code
func (o *ValidateResourceCertificatesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate resource certificates internal server error response has a 5xx status code
func (o *ValidateResourceCertificatesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate resource certificates internal server error response a status code equal to that given
func (o *ValidateResourceCertificatesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate resource certificates internal server error response
func (o *ValidateResourceCertificatesInternalServerError) Code() int {
	return 500
}

func (o *ValidateResourceCertificatesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/resource-certificates/validations][%d] validateResourceCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateResourceCertificatesInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/resource-certificates/validations][%d] validateResourceCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateResourceCertificatesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateResourceCertificatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
