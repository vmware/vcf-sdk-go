// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetResourceCertificatesValidationByIDReader is a Reader for the GetResourceCertificatesValidationByID structure.
type GetResourceCertificatesValidationByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceCertificatesValidationByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceCertificatesValidationByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetResourceCertificatesValidationByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceCertificatesValidationByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}] getResourceCertificatesValidationByID", response, response.Code())
	}
}

// NewGetResourceCertificatesValidationByIDOK creates a GetResourceCertificatesValidationByIDOK with default headers values
func NewGetResourceCertificatesValidationByIDOK() *GetResourceCertificatesValidationByIDOK {
	return &GetResourceCertificatesValidationByIDOK{}
}

/*
GetResourceCertificatesValidationByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceCertificatesValidationByIDOK struct {
	Payload *models.CertificateValidationTask
}

// IsSuccess returns true when this get resource certificates validation by Id o k response has a 2xx status code
func (o *GetResourceCertificatesValidationByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource certificates validation by Id o k response has a 3xx status code
func (o *GetResourceCertificatesValidationByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource certificates validation by Id o k response has a 4xx status code
func (o *GetResourceCertificatesValidationByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource certificates validation by Id o k response has a 5xx status code
func (o *GetResourceCertificatesValidationByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource certificates validation by Id o k response a status code equal to that given
func (o *GetResourceCertificatesValidationByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource certificates validation by Id o k response
func (o *GetResourceCertificatesValidationByIDOK) Code() int {
	return 200
}

func (o *GetResourceCertificatesValidationByIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationByIdOK  %+v", 200, o.Payload)
}

func (o *GetResourceCertificatesValidationByIDOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationByIdOK  %+v", 200, o.Payload)
}

func (o *GetResourceCertificatesValidationByIDOK) GetPayload() *models.CertificateValidationTask {
	return o.Payload
}

func (o *GetResourceCertificatesValidationByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CertificateValidationTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceCertificatesValidationByIDNotFound creates a GetResourceCertificatesValidationByIDNotFound with default headers values
func NewGetResourceCertificatesValidationByIDNotFound() *GetResourceCertificatesValidationByIDNotFound {
	return &GetResourceCertificatesValidationByIDNotFound{}
}

/*
GetResourceCertificatesValidationByIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceCertificatesValidationByIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get resource certificates validation by Id not found response has a 2xx status code
func (o *GetResourceCertificatesValidationByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource certificates validation by Id not found response has a 3xx status code
func (o *GetResourceCertificatesValidationByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource certificates validation by Id not found response has a 4xx status code
func (o *GetResourceCertificatesValidationByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource certificates validation by Id not found response has a 5xx status code
func (o *GetResourceCertificatesValidationByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource certificates validation by Id not found response a status code equal to that given
func (o *GetResourceCertificatesValidationByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource certificates validation by Id not found response
func (o *GetResourceCertificatesValidationByIDNotFound) Code() int {
	return 404
}

func (o *GetResourceCertificatesValidationByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetResourceCertificatesValidationByIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetResourceCertificatesValidationByIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResourceCertificatesValidationByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceCertificatesValidationByIDInternalServerError creates a GetResourceCertificatesValidationByIDInternalServerError with default headers values
func NewGetResourceCertificatesValidationByIDInternalServerError() *GetResourceCertificatesValidationByIDInternalServerError {
	return &GetResourceCertificatesValidationByIDInternalServerError{}
}

/*
GetResourceCertificatesValidationByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetResourceCertificatesValidationByIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get resource certificates validation by Id internal server error response has a 2xx status code
func (o *GetResourceCertificatesValidationByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource certificates validation by Id internal server error response has a 3xx status code
func (o *GetResourceCertificatesValidationByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource certificates validation by Id internal server error response has a 4xx status code
func (o *GetResourceCertificatesValidationByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource certificates validation by Id internal server error response has a 5xx status code
func (o *GetResourceCertificatesValidationByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource certificates validation by Id internal server error response a status code equal to that given
func (o *GetResourceCertificatesValidationByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get resource certificates validation by Id internal server error response
func (o *GetResourceCertificatesValidationByIDInternalServerError) Code() int {
	return 500
}

func (o *GetResourceCertificatesValidationByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourceCertificatesValidationByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates/validations/{validationId}][%d] getResourceCertificatesValidationByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourceCertificatesValidationByIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResourceCertificatesValidationByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
