// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetCertificatesReader is a Reader for the GetCertificates structure.
type GetCertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCertificatesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCertificatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCertificatesOK creates a GetCertificatesOK with default headers values
func NewGetCertificatesOK() *GetCertificatesOK {
	return &GetCertificatesOK{}
}

/*
GetCertificatesOK describes a response with status code 200, with default header values.

OK
*/
type GetCertificatesOK struct {
	Payload *models.PageOfCertificate
}

// IsSuccess returns true when this get certificates o k response has a 2xx status code
func (o *GetCertificatesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get certificates o k response has a 3xx status code
func (o *GetCertificatesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates o k response has a 4xx status code
func (o *GetCertificatesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get certificates o k response has a 5xx status code
func (o *GetCertificatesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get certificates o k response a status code equal to that given
func (o *GetCertificatesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCertificatesOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesOK  %+v", 200, o.Payload)
}

func (o *GetCertificatesOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesOK  %+v", 200, o.Payload)
}

func (o *GetCertificatesOK) GetPayload() *models.PageOfCertificate {
	return o.Payload
}

func (o *GetCertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfCertificate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesNotFound creates a GetCertificatesNotFound with default headers values
func NewGetCertificatesNotFound() *GetCertificatesNotFound {
	return &GetCertificatesNotFound{}
}

/*
GetCertificatesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCertificatesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get certificates not found response has a 2xx status code
func (o *GetCertificatesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get certificates not found response has a 3xx status code
func (o *GetCertificatesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates not found response has a 4xx status code
func (o *GetCertificatesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get certificates not found response has a 5xx status code
func (o *GetCertificatesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get certificates not found response a status code equal to that given
func (o *GetCertificatesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetCertificatesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesNotFound  %+v", 404, o.Payload)
}

func (o *GetCertificatesNotFound) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesNotFound  %+v", 404, o.Payload)
}

func (o *GetCertificatesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCertificatesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesInternalServerError creates a GetCertificatesInternalServerError with default headers values
func NewGetCertificatesInternalServerError() *GetCertificatesInternalServerError {
	return &GetCertificatesInternalServerError{}
}

/*
GetCertificatesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCertificatesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get certificates internal server error response has a 2xx status code
func (o *GetCertificatesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get certificates internal server error response has a 3xx status code
func (o *GetCertificatesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates internal server error response has a 4xx status code
func (o *GetCertificatesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get certificates internal server error response has a 5xx status code
func (o *GetCertificatesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get certificates internal server error response a status code equal to that given
func (o *GetCertificatesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCertificatesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCertificatesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{domainName}/certificates][%d] getCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCertificatesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCertificatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
