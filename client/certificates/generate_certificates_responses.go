// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GenerateCertificatesReader is a Reader for the GenerateCertificates structure.
type GenerateCertificatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GenerateCertificatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGenerateCertificatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGenerateCertificatesAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGenerateCertificatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGenerateCertificatesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGenerateCertificatesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGenerateCertificatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /v1/domains/{id}/certificates] generateCertificates", response, response.Code())
	}
}

// NewGenerateCertificatesOK creates a GenerateCertificatesOK with default headers values
func NewGenerateCertificatesOK() *GenerateCertificatesOK {
	return &GenerateCertificatesOK{}
}

/*
GenerateCertificatesOK describes a response with status code 200, with default header values.

OK
*/
type GenerateCertificatesOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this generate certificates o k response has a 2xx status code
func (o *GenerateCertificatesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this generate certificates o k response has a 3xx status code
func (o *GenerateCertificatesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate certificates o k response has a 4xx status code
func (o *GenerateCertificatesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this generate certificates o k response has a 5xx status code
func (o *GenerateCertificatesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this generate certificates o k response a status code equal to that given
func (o *GenerateCertificatesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the generate certificates o k response
func (o *GenerateCertificatesOK) Code() int {
	return 200
}

func (o *GenerateCertificatesOK) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesOK  %+v", 200, o.Payload)
}

func (o *GenerateCertificatesOK) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesOK  %+v", 200, o.Payload)
}

func (o *GenerateCertificatesOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *GenerateCertificatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateCertificatesAccepted creates a GenerateCertificatesAccepted with default headers values
func NewGenerateCertificatesAccepted() *GenerateCertificatesAccepted {
	return &GenerateCertificatesAccepted{}
}

/*
GenerateCertificatesAccepted describes a response with status code 202, with default header values.

Accepted
*/
type GenerateCertificatesAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this generate certificates accepted response has a 2xx status code
func (o *GenerateCertificatesAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this generate certificates accepted response has a 3xx status code
func (o *GenerateCertificatesAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate certificates accepted response has a 4xx status code
func (o *GenerateCertificatesAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this generate certificates accepted response has a 5xx status code
func (o *GenerateCertificatesAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this generate certificates accepted response a status code equal to that given
func (o *GenerateCertificatesAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the generate certificates accepted response
func (o *GenerateCertificatesAccepted) Code() int {
	return 202
}

func (o *GenerateCertificatesAccepted) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesAccepted  %+v", 202, o.Payload)
}

func (o *GenerateCertificatesAccepted) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesAccepted  %+v", 202, o.Payload)
}

func (o *GenerateCertificatesAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *GenerateCertificatesAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateCertificatesBadRequest creates a GenerateCertificatesBadRequest with default headers values
func NewGenerateCertificatesBadRequest() *GenerateCertificatesBadRequest {
	return &GenerateCertificatesBadRequest{}
}

/*
GenerateCertificatesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GenerateCertificatesBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this generate certificates bad request response has a 2xx status code
func (o *GenerateCertificatesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate certificates bad request response has a 3xx status code
func (o *GenerateCertificatesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate certificates bad request response has a 4xx status code
func (o *GenerateCertificatesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate certificates bad request response has a 5xx status code
func (o *GenerateCertificatesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this generate certificates bad request response a status code equal to that given
func (o *GenerateCertificatesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the generate certificates bad request response
func (o *GenerateCertificatesBadRequest) Code() int {
	return 400
}

func (o *GenerateCertificatesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesBadRequest  %+v", 400, o.Payload)
}

func (o *GenerateCertificatesBadRequest) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesBadRequest  %+v", 400, o.Payload)
}

func (o *GenerateCertificatesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GenerateCertificatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateCertificatesNotFound creates a GenerateCertificatesNotFound with default headers values
func NewGenerateCertificatesNotFound() *GenerateCertificatesNotFound {
	return &GenerateCertificatesNotFound{}
}

/*
GenerateCertificatesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GenerateCertificatesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this generate certificates not found response has a 2xx status code
func (o *GenerateCertificatesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate certificates not found response has a 3xx status code
func (o *GenerateCertificatesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate certificates not found response has a 4xx status code
func (o *GenerateCertificatesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate certificates not found response has a 5xx status code
func (o *GenerateCertificatesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this generate certificates not found response a status code equal to that given
func (o *GenerateCertificatesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the generate certificates not found response
func (o *GenerateCertificatesNotFound) Code() int {
	return 404
}

func (o *GenerateCertificatesNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesNotFound  %+v", 404, o.Payload)
}

func (o *GenerateCertificatesNotFound) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesNotFound  %+v", 404, o.Payload)
}

func (o *GenerateCertificatesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GenerateCertificatesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateCertificatesConflict creates a GenerateCertificatesConflict with default headers values
func NewGenerateCertificatesConflict() *GenerateCertificatesConflict {
	return &GenerateCertificatesConflict{}
}

/*
GenerateCertificatesConflict describes a response with status code 409, with default header values.

Conflict
*/
type GenerateCertificatesConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this generate certificates conflict response has a 2xx status code
func (o *GenerateCertificatesConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate certificates conflict response has a 3xx status code
func (o *GenerateCertificatesConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate certificates conflict response has a 4xx status code
func (o *GenerateCertificatesConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this generate certificates conflict response has a 5xx status code
func (o *GenerateCertificatesConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this generate certificates conflict response a status code equal to that given
func (o *GenerateCertificatesConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the generate certificates conflict response
func (o *GenerateCertificatesConflict) Code() int {
	return 409
}

func (o *GenerateCertificatesConflict) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesConflict  %+v", 409, o.Payload)
}

func (o *GenerateCertificatesConflict) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesConflict  %+v", 409, o.Payload)
}

func (o *GenerateCertificatesConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *GenerateCertificatesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGenerateCertificatesInternalServerError creates a GenerateCertificatesInternalServerError with default headers values
func NewGenerateCertificatesInternalServerError() *GenerateCertificatesInternalServerError {
	return &GenerateCertificatesInternalServerError{}
}

/*
GenerateCertificatesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GenerateCertificatesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this generate certificates internal server error response has a 2xx status code
func (o *GenerateCertificatesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this generate certificates internal server error response has a 3xx status code
func (o *GenerateCertificatesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this generate certificates internal server error response has a 4xx status code
func (o *GenerateCertificatesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this generate certificates internal server error response has a 5xx status code
func (o *GenerateCertificatesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this generate certificates internal server error response a status code equal to that given
func (o *GenerateCertificatesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the generate certificates internal server error response
func (o *GenerateCertificatesInternalServerError) Code() int {
	return 500
}

func (o *GenerateCertificatesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *GenerateCertificatesInternalServerError) String() string {
	return fmt.Sprintf("[PUT /v1/domains/{id}/certificates][%d] generateCertificatesInternalServerError  %+v", 500, o.Payload)
}

func (o *GenerateCertificatesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GenerateCertificatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
