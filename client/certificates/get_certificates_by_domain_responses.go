// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetCertificatesByDomainReader is a Reader for the GetCertificatesByDomain structure.
type GetCertificatesByDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCertificatesByDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCertificatesByDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetCertificatesByDomainAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCertificatesByDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCertificatesByDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/domains/{id}/resource-certificates] getCertificatesByDomain", response, response.Code())
	}
}

// NewGetCertificatesByDomainOK creates a GetCertificatesByDomainOK with default headers values
func NewGetCertificatesByDomainOK() *GetCertificatesByDomainOK {
	return &GetCertificatesByDomainOK{}
}

/*
GetCertificatesByDomainOK describes a response with status code 200, with default header values.

OK
*/
type GetCertificatesByDomainOK struct {
	Payload *models.PageOfCertificate
}

// IsSuccess returns true when this get certificates by domain o k response has a 2xx status code
func (o *GetCertificatesByDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get certificates by domain o k response has a 3xx status code
func (o *GetCertificatesByDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates by domain o k response has a 4xx status code
func (o *GetCertificatesByDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get certificates by domain o k response has a 5xx status code
func (o *GetCertificatesByDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get certificates by domain o k response a status code equal to that given
func (o *GetCertificatesByDomainOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get certificates by domain o k response
func (o *GetCertificatesByDomainOK) Code() int {
	return 200
}

func (o *GetCertificatesByDomainOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates][%d] getCertificatesByDomainOK  %+v", 200, o.Payload)
}

func (o *GetCertificatesByDomainOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates][%d] getCertificatesByDomainOK  %+v", 200, o.Payload)
}

func (o *GetCertificatesByDomainOK) GetPayload() *models.PageOfCertificate {
	return o.Payload
}

func (o *GetCertificatesByDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfCertificate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesByDomainAccepted creates a GetCertificatesByDomainAccepted with default headers values
func NewGetCertificatesByDomainAccepted() *GetCertificatesByDomainAccepted {
	return &GetCertificatesByDomainAccepted{}
}

/*
GetCertificatesByDomainAccepted describes a response with status code 202, with default header values.

Accepted
*/
type GetCertificatesByDomainAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this get certificates by domain accepted response has a 2xx status code
func (o *GetCertificatesByDomainAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get certificates by domain accepted response has a 3xx status code
func (o *GetCertificatesByDomainAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates by domain accepted response has a 4xx status code
func (o *GetCertificatesByDomainAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this get certificates by domain accepted response has a 5xx status code
func (o *GetCertificatesByDomainAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this get certificates by domain accepted response a status code equal to that given
func (o *GetCertificatesByDomainAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the get certificates by domain accepted response
func (o *GetCertificatesByDomainAccepted) Code() int {
	return 202
}

func (o *GetCertificatesByDomainAccepted) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates][%d] getCertificatesByDomainAccepted  %+v", 202, o.Payload)
}

func (o *GetCertificatesByDomainAccepted) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates][%d] getCertificatesByDomainAccepted  %+v", 202, o.Payload)
}

func (o *GetCertificatesByDomainAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *GetCertificatesByDomainAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesByDomainNotFound creates a GetCertificatesByDomainNotFound with default headers values
func NewGetCertificatesByDomainNotFound() *GetCertificatesByDomainNotFound {
	return &GetCertificatesByDomainNotFound{}
}

/*
GetCertificatesByDomainNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCertificatesByDomainNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get certificates by domain not found response has a 2xx status code
func (o *GetCertificatesByDomainNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get certificates by domain not found response has a 3xx status code
func (o *GetCertificatesByDomainNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates by domain not found response has a 4xx status code
func (o *GetCertificatesByDomainNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get certificates by domain not found response has a 5xx status code
func (o *GetCertificatesByDomainNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get certificates by domain not found response a status code equal to that given
func (o *GetCertificatesByDomainNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get certificates by domain not found response
func (o *GetCertificatesByDomainNotFound) Code() int {
	return 404
}

func (o *GetCertificatesByDomainNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates][%d] getCertificatesByDomainNotFound  %+v", 404, o.Payload)
}

func (o *GetCertificatesByDomainNotFound) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates][%d] getCertificatesByDomainNotFound  %+v", 404, o.Payload)
}

func (o *GetCertificatesByDomainNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCertificatesByDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCertificatesByDomainInternalServerError creates a GetCertificatesByDomainInternalServerError with default headers values
func NewGetCertificatesByDomainInternalServerError() *GetCertificatesByDomainInternalServerError {
	return &GetCertificatesByDomainInternalServerError{}
}

/*
GetCertificatesByDomainInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetCertificatesByDomainInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get certificates by domain internal server error response has a 2xx status code
func (o *GetCertificatesByDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get certificates by domain internal server error response has a 3xx status code
func (o *GetCertificatesByDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get certificates by domain internal server error response has a 4xx status code
func (o *GetCertificatesByDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get certificates by domain internal server error response has a 5xx status code
func (o *GetCertificatesByDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get certificates by domain internal server error response a status code equal to that given
func (o *GetCertificatesByDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get certificates by domain internal server error response
func (o *GetCertificatesByDomainInternalServerError) Code() int {
	return 500
}

func (o *GetCertificatesByDomainInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates][%d] getCertificatesByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCertificatesByDomainInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/resource-certificates][%d] getCertificatesByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCertificatesByDomainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCertificatesByDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
