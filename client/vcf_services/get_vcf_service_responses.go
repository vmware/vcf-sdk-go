// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vcf_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetVcfServiceReader is a Reader for the GetVcfService structure.
type GetVcfServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVcfServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVcfServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetVcfServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVcfServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVcfServiceOK creates a GetVcfServiceOK with default headers values
func NewGetVcfServiceOK() *GetVcfServiceOK {
	return &GetVcfServiceOK{}
}

/*
GetVcfServiceOK describes a response with status code 200, with default header values.

Ok
*/
type GetVcfServiceOK struct {
	Payload *models.VcfService
}

// IsSuccess returns true when this get vcf service o k response has a 2xx status code
func (o *GetVcfServiceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vcf service o k response has a 3xx status code
func (o *GetVcfServiceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcf service o k response has a 4xx status code
func (o *GetVcfServiceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcf service o k response has a 5xx status code
func (o *GetVcfServiceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcf service o k response a status code equal to that given
func (o *GetVcfServiceOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetVcfServiceOK) Error() string {
	return fmt.Sprintf("[GET /v1/vcf-services/{id}][%d] getVcfServiceOK  %+v", 200, o.Payload)
}

func (o *GetVcfServiceOK) String() string {
	return fmt.Sprintf("[GET /v1/vcf-services/{id}][%d] getVcfServiceOK  %+v", 200, o.Payload)
}

func (o *GetVcfServiceOK) GetPayload() *models.VcfService {
	return o.Payload
}

func (o *GetVcfServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VcfService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcfServiceNotFound creates a GetVcfServiceNotFound with default headers values
func NewGetVcfServiceNotFound() *GetVcfServiceNotFound {
	return &GetVcfServiceNotFound{}
}

/*
GetVcfServiceNotFound describes a response with status code 404, with default header values.

VcfService not found
*/
type GetVcfServiceNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vcf service not found response has a 2xx status code
func (o *GetVcfServiceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcf service not found response has a 3xx status code
func (o *GetVcfServiceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcf service not found response has a 4xx status code
func (o *GetVcfServiceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcf service not found response has a 5xx status code
func (o *GetVcfServiceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcf service not found response a status code equal to that given
func (o *GetVcfServiceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetVcfServiceNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/vcf-services/{id}][%d] getVcfServiceNotFound  %+v", 404, o.Payload)
}

func (o *GetVcfServiceNotFound) String() string {
	return fmt.Sprintf("[GET /v1/vcf-services/{id}][%d] getVcfServiceNotFound  %+v", 404, o.Payload)
}

func (o *GetVcfServiceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVcfServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcfServiceInternalServerError creates a GetVcfServiceInternalServerError with default headers values
func NewGetVcfServiceInternalServerError() *GetVcfServiceInternalServerError {
	return &GetVcfServiceInternalServerError{}
}

/*
GetVcfServiceInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GetVcfServiceInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vcf service internal server error response has a 2xx status code
func (o *GetVcfServiceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcf service internal server error response has a 3xx status code
func (o *GetVcfServiceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcf service internal server error response has a 4xx status code
func (o *GetVcfServiceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcf service internal server error response has a 5xx status code
func (o *GetVcfServiceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get vcf service internal server error response a status code equal to that given
func (o *GetVcfServiceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetVcfServiceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/vcf-services/{id}][%d] getVcfServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVcfServiceInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/vcf-services/{id}][%d] getVcfServiceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVcfServiceInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVcfServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
