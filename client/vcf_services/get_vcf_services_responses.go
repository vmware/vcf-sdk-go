// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package vcf_services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetVcfServicesReader is a Reader for the GetVcfServices structure.
type GetVcfServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVcfServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVcfServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVcfServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVcfServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetVcfServicesOK creates a GetVcfServicesOK with default headers values
func NewGetVcfServicesOK() *GetVcfServicesOK {
	return &GetVcfServicesOK{}
}

/*
GetVcfServicesOK describes a response with status code 200, with default header values.

Ok
*/
type GetVcfServicesOK struct {
	Payload *models.PageOfVcfService
}

// IsSuccess returns true when this get vcf services o k response has a 2xx status code
func (o *GetVcfServicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vcf services o k response has a 3xx status code
func (o *GetVcfServicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcf services o k response has a 4xx status code
func (o *GetVcfServicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcf services o k response has a 5xx status code
func (o *GetVcfServicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcf services o k response a status code equal to that given
func (o *GetVcfServicesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetVcfServicesOK) Error() string {
	return fmt.Sprintf("[GET /v1/vcf-services][%d] getVcfServicesOK  %+v", 200, o.Payload)
}

func (o *GetVcfServicesOK) String() string {
	return fmt.Sprintf("[GET /v1/vcf-services][%d] getVcfServicesOK  %+v", 200, o.Payload)
}

func (o *GetVcfServicesOK) GetPayload() *models.PageOfVcfService {
	return o.Payload
}

func (o *GetVcfServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfVcfService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcfServicesBadRequest creates a GetVcfServicesBadRequest with default headers values
func NewGetVcfServicesBadRequest() *GetVcfServicesBadRequest {
	return &GetVcfServicesBadRequest{}
}

/*
GetVcfServicesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVcfServicesBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vcf services bad request response has a 2xx status code
func (o *GetVcfServicesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcf services bad request response has a 3xx status code
func (o *GetVcfServicesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcf services bad request response has a 4xx status code
func (o *GetVcfServicesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcf services bad request response has a 5xx status code
func (o *GetVcfServicesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcf services bad request response a status code equal to that given
func (o *GetVcfServicesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetVcfServicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/vcf-services][%d] getVcfServicesBadRequest  %+v", 400, o.Payload)
}

func (o *GetVcfServicesBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/vcf-services][%d] getVcfServicesBadRequest  %+v", 400, o.Payload)
}

func (o *GetVcfServicesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVcfServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcfServicesInternalServerError creates a GetVcfServicesInternalServerError with default headers values
func NewGetVcfServicesInternalServerError() *GetVcfServicesInternalServerError {
	return &GetVcfServicesInternalServerError{}
}

/*
GetVcfServicesInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GetVcfServicesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get vcf services internal server error response has a 2xx status code
func (o *GetVcfServicesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcf services internal server error response has a 3xx status code
func (o *GetVcfServicesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcf services internal server error response has a 4xx status code
func (o *GetVcfServicesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcf services internal server error response has a 5xx status code
func (o *GetVcfServicesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get vcf services internal server error response a status code equal to that given
func (o *GetVcfServicesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetVcfServicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/vcf-services][%d] getVcfServicesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVcfServicesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/vcf-services][%d] getVcfServicesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetVcfServicesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetVcfServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
