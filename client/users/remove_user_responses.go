// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// RemoveUserReader is a Reader for the RemoveUser structure.
type RemoveUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRemoveUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewRemoveUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/users/{id}] removeUser", response, response.Code())
	}
}

// NewRemoveUserNoContent creates a RemoveUserNoContent with default headers values
func NewRemoveUserNoContent() *RemoveUserNoContent {
	return &RemoveUserNoContent{}
}

/*
RemoveUserNoContent describes a response with status code 204, with default header values.

No content
*/
type RemoveUserNoContent struct {
}

// IsSuccess returns true when this remove user no content response has a 2xx status code
func (o *RemoveUserNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove user no content response has a 3xx status code
func (o *RemoveUserNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove user no content response has a 4xx status code
func (o *RemoveUserNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove user no content response has a 5xx status code
func (o *RemoveUserNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this remove user no content response a status code equal to that given
func (o *RemoveUserNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the remove user no content response
func (o *RemoveUserNoContent) Code() int {
	return 204
}

func (o *RemoveUserNoContent) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] removeUserNoContent ", 204)
}

func (o *RemoveUserNoContent) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] removeUserNoContent ", 204)
}

func (o *RemoveUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserNotFound creates a RemoveUserNotFound with default headers values
func NewRemoveUserNotFound() *RemoveUserNotFound {
	return &RemoveUserNotFound{}
}

/*
RemoveUserNotFound describes a response with status code 404, with default header values.

User not found
*/
type RemoveUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove user not found response has a 2xx status code
func (o *RemoveUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove user not found response has a 3xx status code
func (o *RemoveUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove user not found response has a 4xx status code
func (o *RemoveUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove user not found response has a 5xx status code
func (o *RemoveUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove user not found response a status code equal to that given
func (o *RemoveUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove user not found response
func (o *RemoveUserNotFound) Code() int {
	return 404
}

func (o *RemoveUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] removeUserNotFound  %+v", 404, o.Payload)
}

func (o *RemoveUserNotFound) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] removeUserNotFound  %+v", 404, o.Payload)
}

func (o *RemoveUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserInternalServerError creates a RemoveUserInternalServerError with default headers values
func NewRemoveUserInternalServerError() *RemoveUserInternalServerError {
	return &RemoveUserInternalServerError{}
}

/*
RemoveUserInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type RemoveUserInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove user internal server error response has a 2xx status code
func (o *RemoveUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove user internal server error response has a 3xx status code
func (o *RemoveUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove user internal server error response has a 4xx status code
func (o *RemoveUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove user internal server error response has a 5xx status code
func (o *RemoveUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove user internal server error response a status code equal to that given
func (o *RemoveUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove user internal server error response
func (o *RemoveUserInternalServerError) Code() int {
	return 500
}

func (o *RemoveUserInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] removeUserInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveUserInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /v1/users/{id}][%d] removeUserInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveUserInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
