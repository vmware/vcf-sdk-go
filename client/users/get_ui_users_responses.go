// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetUIUsersReader is a Reader for the GetUIUsers structure.
type GetUIUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUIUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUIUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUIUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetUIUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUIUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/users/ui] getUiUsers", response, response.Code())
	}
}

// NewGetUIUsersOK creates a GetUIUsersOK with default headers values
func NewGetUIUsersOK() *GetUIUsersOK {
	return &GetUIUsersOK{}
}

/*
GetUIUsersOK describes a response with status code 200, with default header values.

OK
*/
type GetUIUsersOK struct {
	Payload *models.PageOfUser
}

// IsSuccess returns true when this get Ui users o k response has a 2xx status code
func (o *GetUIUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Ui users o k response has a 3xx status code
func (o *GetUIUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Ui users o k response has a 4xx status code
func (o *GetUIUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Ui users o k response has a 5xx status code
func (o *GetUIUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Ui users o k response a status code equal to that given
func (o *GetUIUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Ui users o k response
func (o *GetUIUsersOK) Code() int {
	return 200
}

func (o *GetUIUsersOK) Error() string {
	return fmt.Sprintf("[GET /v1/users/ui][%d] getUiUsersOK  %+v", 200, o.Payload)
}

func (o *GetUIUsersOK) String() string {
	return fmt.Sprintf("[GET /v1/users/ui][%d] getUiUsersOK  %+v", 200, o.Payload)
}

func (o *GetUIUsersOK) GetPayload() *models.PageOfUser {
	return o.Payload
}

func (o *GetUIUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUIUsersBadRequest creates a GetUIUsersBadRequest with default headers values
func NewGetUIUsersBadRequest() *GetUIUsersBadRequest {
	return &GetUIUsersBadRequest{}
}

/*
GetUIUsersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetUIUsersBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get Ui users bad request response has a 2xx status code
func (o *GetUIUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Ui users bad request response has a 3xx status code
func (o *GetUIUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Ui users bad request response has a 4xx status code
func (o *GetUIUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Ui users bad request response has a 5xx status code
func (o *GetUIUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Ui users bad request response a status code equal to that given
func (o *GetUIUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Ui users bad request response
func (o *GetUIUsersBadRequest) Code() int {
	return 400
}

func (o *GetUIUsersBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/users/ui][%d] getUiUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetUIUsersBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/users/ui][%d] getUiUsersBadRequest  %+v", 400, o.Payload)
}

func (o *GetUIUsersBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUIUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUIUsersUnauthorized creates a GetUIUsersUnauthorized with default headers values
func NewGetUIUsersUnauthorized() *GetUIUsersUnauthorized {
	return &GetUIUsersUnauthorized{}
}

/*
GetUIUsersUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetUIUsersUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get Ui users unauthorized response has a 2xx status code
func (o *GetUIUsersUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Ui users unauthorized response has a 3xx status code
func (o *GetUIUsersUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Ui users unauthorized response has a 4xx status code
func (o *GetUIUsersUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Ui users unauthorized response has a 5xx status code
func (o *GetUIUsersUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get Ui users unauthorized response a status code equal to that given
func (o *GetUIUsersUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get Ui users unauthorized response
func (o *GetUIUsersUnauthorized) Code() int {
	return 401
}

func (o *GetUIUsersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/users/ui][%d] getUiUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUIUsersUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/users/ui][%d] getUiUsersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetUIUsersUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUIUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUIUsersInternalServerError creates a GetUIUsersInternalServerError with default headers values
func NewGetUIUsersInternalServerError() *GetUIUsersInternalServerError {
	return &GetUIUsersInternalServerError{}
}

/*
GetUIUsersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUIUsersInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get Ui users internal server error response has a 2xx status code
func (o *GetUIUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Ui users internal server error response has a 3xx status code
func (o *GetUIUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Ui users internal server error response has a 4xx status code
func (o *GetUIUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Ui users internal server error response has a 5xx status code
func (o *GetUIUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Ui users internal server error response a status code equal to that given
func (o *GetUIUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Ui users internal server error response
func (o *GetUIUsersInternalServerError) Code() int {
	return 500
}

func (o *GetUIUsersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/users/ui][%d] getUiUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUIUsersInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/users/ui][%d] getUiUsersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUIUsersInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetUIUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
