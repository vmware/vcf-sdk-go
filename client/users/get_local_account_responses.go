// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetLocalAccountReader is a Reader for the GetLocalAccount structure.
type GetLocalAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLocalAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLocalAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLocalAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLocalAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLocalAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLocalAccountOK creates a GetLocalAccountOK with default headers values
func NewGetLocalAccountOK() *GetLocalAccountOK {
	return &GetLocalAccountOK{}
}

/*
GetLocalAccountOK describes a response with status code 200, with default header values.

OK
*/
type GetLocalAccountOK struct {
	Payload *models.LocalUser
}

// IsSuccess returns true when this get local account o k response has a 2xx status code
func (o *GetLocalAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get local account o k response has a 3xx status code
func (o *GetLocalAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local account o k response has a 4xx status code
func (o *GetLocalAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get local account o k response has a 5xx status code
func (o *GetLocalAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get local account o k response a status code equal to that given
func (o *GetLocalAccountOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLocalAccountOK) Error() string {
	return fmt.Sprintf("[GET /v1/users/local/admin][%d] getLocalAccountOK  %+v", 200, o.Payload)
}

func (o *GetLocalAccountOK) String() string {
	return fmt.Sprintf("[GET /v1/users/local/admin][%d] getLocalAccountOK  %+v", 200, o.Payload)
}

func (o *GetLocalAccountOK) GetPayload() *models.LocalUser {
	return o.Payload
}

func (o *GetLocalAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LocalUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocalAccountBadRequest creates a GetLocalAccountBadRequest with default headers values
func NewGetLocalAccountBadRequest() *GetLocalAccountBadRequest {
	return &GetLocalAccountBadRequest{}
}

/*
GetLocalAccountBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetLocalAccountBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get local account bad request response has a 2xx status code
func (o *GetLocalAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get local account bad request response has a 3xx status code
func (o *GetLocalAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local account bad request response has a 4xx status code
func (o *GetLocalAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get local account bad request response has a 5xx status code
func (o *GetLocalAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get local account bad request response a status code equal to that given
func (o *GetLocalAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetLocalAccountBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/users/local/admin][%d] getLocalAccountBadRequest  %+v", 400, o.Payload)
}

func (o *GetLocalAccountBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/users/local/admin][%d] getLocalAccountBadRequest  %+v", 400, o.Payload)
}

func (o *GetLocalAccountBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetLocalAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocalAccountUnauthorized creates a GetLocalAccountUnauthorized with default headers values
func NewGetLocalAccountUnauthorized() *GetLocalAccountUnauthorized {
	return &GetLocalAccountUnauthorized{}
}

/*
GetLocalAccountUnauthorized describes a response with status code 401, with default header values.

Unauthorized Request
*/
type GetLocalAccountUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get local account unauthorized response has a 2xx status code
func (o *GetLocalAccountUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get local account unauthorized response has a 3xx status code
func (o *GetLocalAccountUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local account unauthorized response has a 4xx status code
func (o *GetLocalAccountUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get local account unauthorized response has a 5xx status code
func (o *GetLocalAccountUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get local account unauthorized response a status code equal to that given
func (o *GetLocalAccountUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetLocalAccountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/users/local/admin][%d] getLocalAccountUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLocalAccountUnauthorized) String() string {
	return fmt.Sprintf("[GET /v1/users/local/admin][%d] getLocalAccountUnauthorized  %+v", 401, o.Payload)
}

func (o *GetLocalAccountUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetLocalAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocalAccountInternalServerError creates a GetLocalAccountInternalServerError with default headers values
func NewGetLocalAccountInternalServerError() *GetLocalAccountInternalServerError {
	return &GetLocalAccountInternalServerError{}
}

/*
GetLocalAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetLocalAccountInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get local account internal server error response has a 2xx status code
func (o *GetLocalAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get local account internal server error response has a 3xx status code
func (o *GetLocalAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local account internal server error response has a 4xx status code
func (o *GetLocalAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get local account internal server error response has a 5xx status code
func (o *GetLocalAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get local account internal server error response a status code equal to that given
func (o *GetLocalAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLocalAccountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/users/local/admin][%d] getLocalAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLocalAccountInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/users/local/admin][%d] getLocalAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLocalAccountInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetLocalAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
