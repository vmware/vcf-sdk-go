// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package compatibility_matrix

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetCompatibilityMatrixParams creates a new GetCompatibilityMatrixParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetCompatibilityMatrixParams() *GetCompatibilityMatrixParams {
	return &GetCompatibilityMatrixParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetCompatibilityMatrixParamsWithTimeout creates a new GetCompatibilityMatrixParams object
// with the ability to set a timeout on a request.
func NewGetCompatibilityMatrixParamsWithTimeout(timeout time.Duration) *GetCompatibilityMatrixParams {
	return &GetCompatibilityMatrixParams{
		timeout: timeout,
	}
}

// NewGetCompatibilityMatrixParamsWithContext creates a new GetCompatibilityMatrixParams object
// with the ability to set a context for a request.
func NewGetCompatibilityMatrixParamsWithContext(ctx context.Context) *GetCompatibilityMatrixParams {
	return &GetCompatibilityMatrixParams{
		Context: ctx,
	}
}

// NewGetCompatibilityMatrixParamsWithHTTPClient creates a new GetCompatibilityMatrixParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetCompatibilityMatrixParamsWithHTTPClient(client *http.Client) *GetCompatibilityMatrixParams {
	return &GetCompatibilityMatrixParams{
		HTTPClient: client,
	}
}

/*
GetCompatibilityMatrixParams contains all the parameters to send to the API endpoint

	for the get compatibility matrix operation.

	Typically these are written to a http.Request.
*/
type GetCompatibilityMatrixParams struct {

	/* CompatibilityMatrixSource.

	   compatibilityMatrixSource of compatibility data
	*/
	CompatibilityMatrixSource string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get compatibility matrix params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCompatibilityMatrixParams) WithDefaults() *GetCompatibilityMatrixParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get compatibility matrix params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCompatibilityMatrixParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get compatibility matrix params
func (o *GetCompatibilityMatrixParams) WithTimeout(timeout time.Duration) *GetCompatibilityMatrixParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get compatibility matrix params
func (o *GetCompatibilityMatrixParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get compatibility matrix params
func (o *GetCompatibilityMatrixParams) WithContext(ctx context.Context) *GetCompatibilityMatrixParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get compatibility matrix params
func (o *GetCompatibilityMatrixParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get compatibility matrix params
func (o *GetCompatibilityMatrixParams) WithHTTPClient(client *http.Client) *GetCompatibilityMatrixParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get compatibility matrix params
func (o *GetCompatibilityMatrixParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCompatibilityMatrixSource adds the compatibilityMatrixSource to the get compatibility matrix params
func (o *GetCompatibilityMatrixParams) WithCompatibilityMatrixSource(compatibilityMatrixSource string) *GetCompatibilityMatrixParams {
	o.SetCompatibilityMatrixSource(compatibilityMatrixSource)
	return o
}

// SetCompatibilityMatrixSource adds the compatibilityMatrixSource to the get compatibility matrix params
func (o *GetCompatibilityMatrixParams) SetCompatibilityMatrixSource(compatibilityMatrixSource string) {
	o.CompatibilityMatrixSource = compatibilityMatrixSource
}

// WriteToRequest writes these params to a swagger request
func (o *GetCompatibilityMatrixParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param compatibilityMatrixSource
	if err := r.SetPathParam("compatibilityMatrixSource", o.CompatibilityMatrixSource); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
