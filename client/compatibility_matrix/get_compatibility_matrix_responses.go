// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package compatibility_matrix

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetCompatibilityMatrixReader is a Reader for the GetCompatibilityMatrix structure.
type GetCompatibilityMatrixReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCompatibilityMatrixReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCompatibilityMatrixOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCompatibilityMatrixNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCompatibilityMatrixInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}] getCompatibilityMatrix", response, response.Code())
	}
}

// NewGetCompatibilityMatrixOK creates a GetCompatibilityMatrixOK with default headers values
func NewGetCompatibilityMatrixOK() *GetCompatibilityMatrixOK {
	return &GetCompatibilityMatrixOK{}
}

/*
GetCompatibilityMatrixOK describes a response with status code 200, with default header values.

Success
*/
type GetCompatibilityMatrixOK struct {
	Payload *models.CompatibilityMatrix
}

// IsSuccess returns true when this get compatibility matrix o k response has a 2xx status code
func (o *GetCompatibilityMatrixOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get compatibility matrix o k response has a 3xx status code
func (o *GetCompatibilityMatrixOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get compatibility matrix o k response has a 4xx status code
func (o *GetCompatibilityMatrixOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get compatibility matrix o k response has a 5xx status code
func (o *GetCompatibilityMatrixOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get compatibility matrix o k response a status code equal to that given
func (o *GetCompatibilityMatrixOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get compatibility matrix o k response
func (o *GetCompatibilityMatrixOK) Code() int {
	return 200
}

func (o *GetCompatibilityMatrixOK) Error() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}][%d] getCompatibilityMatrixOK  %+v", 200, o.Payload)
}

func (o *GetCompatibilityMatrixOK) String() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}][%d] getCompatibilityMatrixOK  %+v", 200, o.Payload)
}

func (o *GetCompatibilityMatrixOK) GetPayload() *models.CompatibilityMatrix {
	return o.Payload
}

func (o *GetCompatibilityMatrixOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CompatibilityMatrix)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCompatibilityMatrixNotFound creates a GetCompatibilityMatrixNotFound with default headers values
func NewGetCompatibilityMatrixNotFound() *GetCompatibilityMatrixNotFound {
	return &GetCompatibilityMatrixNotFound{}
}

/*
GetCompatibilityMatrixNotFound describes a response with status code 404, with default header values.

Resource Not Found
*/
type GetCompatibilityMatrixNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get compatibility matrix not found response has a 2xx status code
func (o *GetCompatibilityMatrixNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get compatibility matrix not found response has a 3xx status code
func (o *GetCompatibilityMatrixNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get compatibility matrix not found response has a 4xx status code
func (o *GetCompatibilityMatrixNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get compatibility matrix not found response has a 5xx status code
func (o *GetCompatibilityMatrixNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get compatibility matrix not found response a status code equal to that given
func (o *GetCompatibilityMatrixNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get compatibility matrix not found response
func (o *GetCompatibilityMatrixNotFound) Code() int {
	return 404
}

func (o *GetCompatibilityMatrixNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}][%d] getCompatibilityMatrixNotFound  %+v", 404, o.Payload)
}

func (o *GetCompatibilityMatrixNotFound) String() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}][%d] getCompatibilityMatrixNotFound  %+v", 404, o.Payload)
}

func (o *GetCompatibilityMatrixNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCompatibilityMatrixNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCompatibilityMatrixInternalServerError creates a GetCompatibilityMatrixInternalServerError with default headers values
func NewGetCompatibilityMatrixInternalServerError() *GetCompatibilityMatrixInternalServerError {
	return &GetCompatibilityMatrixInternalServerError{}
}

/*
GetCompatibilityMatrixInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCompatibilityMatrixInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get compatibility matrix internal server error response has a 2xx status code
func (o *GetCompatibilityMatrixInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get compatibility matrix internal server error response has a 3xx status code
func (o *GetCompatibilityMatrixInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get compatibility matrix internal server error response has a 4xx status code
func (o *GetCompatibilityMatrixInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get compatibility matrix internal server error response has a 5xx status code
func (o *GetCompatibilityMatrixInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get compatibility matrix internal server error response a status code equal to that given
func (o *GetCompatibilityMatrixInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get compatibility matrix internal server error response
func (o *GetCompatibilityMatrixInternalServerError) Code() int {
	return 500
}

func (o *GetCompatibilityMatrixInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}][%d] getCompatibilityMatrixInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCompatibilityMatrixInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}][%d] getCompatibilityMatrixInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCompatibilityMatrixInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCompatibilityMatrixInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
