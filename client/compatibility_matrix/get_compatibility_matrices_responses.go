// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package compatibility_matrix

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetCompatibilityMatricesReader is a Reader for the GetCompatibilityMatrices structure.
type GetCompatibilityMatricesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCompatibilityMatricesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCompatibilityMatricesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCompatibilityMatricesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCompatibilityMatricesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/compatibility-matrices] getCompatibilityMatrices", response, response.Code())
	}
}

// NewGetCompatibilityMatricesOK creates a GetCompatibilityMatricesOK with default headers values
func NewGetCompatibilityMatricesOK() *GetCompatibilityMatricesOK {
	return &GetCompatibilityMatricesOK{}
}

/*
GetCompatibilityMatricesOK describes a response with status code 200, with default header values.

Success
*/
type GetCompatibilityMatricesOK struct {
	Payload *models.PageOfCompatibilityMatrix
}

// IsSuccess returns true when this get compatibility matrices o k response has a 2xx status code
func (o *GetCompatibilityMatricesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get compatibility matrices o k response has a 3xx status code
func (o *GetCompatibilityMatricesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get compatibility matrices o k response has a 4xx status code
func (o *GetCompatibilityMatricesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get compatibility matrices o k response has a 5xx status code
func (o *GetCompatibilityMatricesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get compatibility matrices o k response a status code equal to that given
func (o *GetCompatibilityMatricesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get compatibility matrices o k response
func (o *GetCompatibilityMatricesOK) Code() int {
	return 200
}

func (o *GetCompatibilityMatricesOK) Error() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices][%d] getCompatibilityMatricesOK  %+v", 200, o.Payload)
}

func (o *GetCompatibilityMatricesOK) String() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices][%d] getCompatibilityMatricesOK  %+v", 200, o.Payload)
}

func (o *GetCompatibilityMatricesOK) GetPayload() *models.PageOfCompatibilityMatrix {
	return o.Payload
}

func (o *GetCompatibilityMatricesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfCompatibilityMatrix)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCompatibilityMatricesNotFound creates a GetCompatibilityMatricesNotFound with default headers values
func NewGetCompatibilityMatricesNotFound() *GetCompatibilityMatricesNotFound {
	return &GetCompatibilityMatricesNotFound{}
}

/*
GetCompatibilityMatricesNotFound describes a response with status code 404, with default header values.

Resource Not Found
*/
type GetCompatibilityMatricesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get compatibility matrices not found response has a 2xx status code
func (o *GetCompatibilityMatricesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get compatibility matrices not found response has a 3xx status code
func (o *GetCompatibilityMatricesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get compatibility matrices not found response has a 4xx status code
func (o *GetCompatibilityMatricesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get compatibility matrices not found response has a 5xx status code
func (o *GetCompatibilityMatricesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get compatibility matrices not found response a status code equal to that given
func (o *GetCompatibilityMatricesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get compatibility matrices not found response
func (o *GetCompatibilityMatricesNotFound) Code() int {
	return 404
}

func (o *GetCompatibilityMatricesNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices][%d] getCompatibilityMatricesNotFound  %+v", 404, o.Payload)
}

func (o *GetCompatibilityMatricesNotFound) String() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices][%d] getCompatibilityMatricesNotFound  %+v", 404, o.Payload)
}

func (o *GetCompatibilityMatricesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCompatibilityMatricesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCompatibilityMatricesInternalServerError creates a GetCompatibilityMatricesInternalServerError with default headers values
func NewGetCompatibilityMatricesInternalServerError() *GetCompatibilityMatricesInternalServerError {
	return &GetCompatibilityMatricesInternalServerError{}
}

/*
GetCompatibilityMatricesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCompatibilityMatricesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get compatibility matrices internal server error response has a 2xx status code
func (o *GetCompatibilityMatricesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get compatibility matrices internal server error response has a 3xx status code
func (o *GetCompatibilityMatricesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get compatibility matrices internal server error response has a 4xx status code
func (o *GetCompatibilityMatricesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get compatibility matrices internal server error response has a 5xx status code
func (o *GetCompatibilityMatricesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get compatibility matrices internal server error response a status code equal to that given
func (o *GetCompatibilityMatricesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get compatibility matrices internal server error response
func (o *GetCompatibilityMatricesInternalServerError) Code() int {
	return 500
}

func (o *GetCompatibilityMatricesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices][%d] getCompatibilityMatricesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCompatibilityMatricesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices][%d] getCompatibilityMatricesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCompatibilityMatricesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCompatibilityMatricesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
