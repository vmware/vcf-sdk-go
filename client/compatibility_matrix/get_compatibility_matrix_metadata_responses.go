// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package compatibility_matrix

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetCompatibilityMatrixMetadataReader is a Reader for the GetCompatibilityMatrixMetadata structure.
type GetCompatibilityMatrixMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCompatibilityMatrixMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCompatibilityMatrixMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCompatibilityMatrixMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCompatibilityMatrixMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}/metadata] getCompatibilityMatrixMetadata", response, response.Code())
	}
}

// NewGetCompatibilityMatrixMetadataOK creates a GetCompatibilityMatrixMetadataOK with default headers values
func NewGetCompatibilityMatrixMetadataOK() *GetCompatibilityMatrixMetadataOK {
	return &GetCompatibilityMatrixMetadataOK{}
}

/*
GetCompatibilityMatrixMetadataOK describes a response with status code 200, with default header values.

Success
*/
type GetCompatibilityMatrixMetadataOK struct {
	Payload *models.CompatibilityMatrixMetadata
}

// IsSuccess returns true when this get compatibility matrix metadata o k response has a 2xx status code
func (o *GetCompatibilityMatrixMetadataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get compatibility matrix metadata o k response has a 3xx status code
func (o *GetCompatibilityMatrixMetadataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get compatibility matrix metadata o k response has a 4xx status code
func (o *GetCompatibilityMatrixMetadataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get compatibility matrix metadata o k response has a 5xx status code
func (o *GetCompatibilityMatrixMetadataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get compatibility matrix metadata o k response a status code equal to that given
func (o *GetCompatibilityMatrixMetadataOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get compatibility matrix metadata o k response
func (o *GetCompatibilityMatrixMetadataOK) Code() int {
	return 200
}

func (o *GetCompatibilityMatrixMetadataOK) Error() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}/metadata][%d] getCompatibilityMatrixMetadataOK  %+v", 200, o.Payload)
}

func (o *GetCompatibilityMatrixMetadataOK) String() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}/metadata][%d] getCompatibilityMatrixMetadataOK  %+v", 200, o.Payload)
}

func (o *GetCompatibilityMatrixMetadataOK) GetPayload() *models.CompatibilityMatrixMetadata {
	return o.Payload
}

func (o *GetCompatibilityMatrixMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CompatibilityMatrixMetadata)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCompatibilityMatrixMetadataNotFound creates a GetCompatibilityMatrixMetadataNotFound with default headers values
func NewGetCompatibilityMatrixMetadataNotFound() *GetCompatibilityMatrixMetadataNotFound {
	return &GetCompatibilityMatrixMetadataNotFound{}
}

/*
GetCompatibilityMatrixMetadataNotFound describes a response with status code 404, with default header values.

Resource Not Found
*/
type GetCompatibilityMatrixMetadataNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get compatibility matrix metadata not found response has a 2xx status code
func (o *GetCompatibilityMatrixMetadataNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get compatibility matrix metadata not found response has a 3xx status code
func (o *GetCompatibilityMatrixMetadataNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get compatibility matrix metadata not found response has a 4xx status code
func (o *GetCompatibilityMatrixMetadataNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get compatibility matrix metadata not found response has a 5xx status code
func (o *GetCompatibilityMatrixMetadataNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get compatibility matrix metadata not found response a status code equal to that given
func (o *GetCompatibilityMatrixMetadataNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get compatibility matrix metadata not found response
func (o *GetCompatibilityMatrixMetadataNotFound) Code() int {
	return 404
}

func (o *GetCompatibilityMatrixMetadataNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}/metadata][%d] getCompatibilityMatrixMetadataNotFound  %+v", 404, o.Payload)
}

func (o *GetCompatibilityMatrixMetadataNotFound) String() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}/metadata][%d] getCompatibilityMatrixMetadataNotFound  %+v", 404, o.Payload)
}

func (o *GetCompatibilityMatrixMetadataNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCompatibilityMatrixMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCompatibilityMatrixMetadataInternalServerError creates a GetCompatibilityMatrixMetadataInternalServerError with default headers values
func NewGetCompatibilityMatrixMetadataInternalServerError() *GetCompatibilityMatrixMetadataInternalServerError {
	return &GetCompatibilityMatrixMetadataInternalServerError{}
}

/*
GetCompatibilityMatrixMetadataInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCompatibilityMatrixMetadataInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get compatibility matrix metadata internal server error response has a 2xx status code
func (o *GetCompatibilityMatrixMetadataInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get compatibility matrix metadata internal server error response has a 3xx status code
func (o *GetCompatibilityMatrixMetadataInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get compatibility matrix metadata internal server error response has a 4xx status code
func (o *GetCompatibilityMatrixMetadataInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get compatibility matrix metadata internal server error response has a 5xx status code
func (o *GetCompatibilityMatrixMetadataInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get compatibility matrix metadata internal server error response a status code equal to that given
func (o *GetCompatibilityMatrixMetadataInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get compatibility matrix metadata internal server error response
func (o *GetCompatibilityMatrixMetadataInternalServerError) Code() int {
	return 500
}

func (o *GetCompatibilityMatrixMetadataInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}/metadata][%d] getCompatibilityMatrixMetadataInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCompatibilityMatrixMetadataInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/compatibility-matrices/{compatibilityMatrixSource}/metadata][%d] getCompatibilityMatrixMetadataInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCompatibilityMatrixMetadataInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCompatibilityMatrixMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
