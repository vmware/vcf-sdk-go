// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package proxy_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// UpdateProxyConfigurationReader is a Reader for the UpdateProxyConfiguration structure.
type UpdateProxyConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProxyConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateProxyConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewUpdateProxyConfigurationAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateProxyConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateProxyConfigurationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /v1/system/proxy-configuration] updateProxyConfiguration", response, response.Code())
	}
}

// NewUpdateProxyConfigurationOK creates a UpdateProxyConfigurationOK with default headers values
func NewUpdateProxyConfigurationOK() *UpdateProxyConfigurationOK {
	return &UpdateProxyConfigurationOK{}
}

/*
UpdateProxyConfigurationOK describes a response with status code 200, with default header values.

OK
*/
type UpdateProxyConfigurationOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this update proxy configuration o k response has a 2xx status code
func (o *UpdateProxyConfigurationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update proxy configuration o k response has a 3xx status code
func (o *UpdateProxyConfigurationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update proxy configuration o k response has a 4xx status code
func (o *UpdateProxyConfigurationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update proxy configuration o k response has a 5xx status code
func (o *UpdateProxyConfigurationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update proxy configuration o k response a status code equal to that given
func (o *UpdateProxyConfigurationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update proxy configuration o k response
func (o *UpdateProxyConfigurationOK) Code() int {
	return 200
}

func (o *UpdateProxyConfigurationOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/proxy-configuration][%d] updateProxyConfigurationOK  %+v", 200, o.Payload)
}

func (o *UpdateProxyConfigurationOK) String() string {
	return fmt.Sprintf("[PATCH /v1/system/proxy-configuration][%d] updateProxyConfigurationOK  %+v", 200, o.Payload)
}

func (o *UpdateProxyConfigurationOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *UpdateProxyConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProxyConfigurationAccepted creates a UpdateProxyConfigurationAccepted with default headers values
func NewUpdateProxyConfigurationAccepted() *UpdateProxyConfigurationAccepted {
	return &UpdateProxyConfigurationAccepted{}
}

/*
UpdateProxyConfigurationAccepted describes a response with status code 202, with default header values.

Accepted
*/
type UpdateProxyConfigurationAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this update proxy configuration accepted response has a 2xx status code
func (o *UpdateProxyConfigurationAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update proxy configuration accepted response has a 3xx status code
func (o *UpdateProxyConfigurationAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update proxy configuration accepted response has a 4xx status code
func (o *UpdateProxyConfigurationAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this update proxy configuration accepted response has a 5xx status code
func (o *UpdateProxyConfigurationAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this update proxy configuration accepted response a status code equal to that given
func (o *UpdateProxyConfigurationAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the update proxy configuration accepted response
func (o *UpdateProxyConfigurationAccepted) Code() int {
	return 202
}

func (o *UpdateProxyConfigurationAccepted) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/proxy-configuration][%d] updateProxyConfigurationAccepted  %+v", 202, o.Payload)
}

func (o *UpdateProxyConfigurationAccepted) String() string {
	return fmt.Sprintf("[PATCH /v1/system/proxy-configuration][%d] updateProxyConfigurationAccepted  %+v", 202, o.Payload)
}

func (o *UpdateProxyConfigurationAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *UpdateProxyConfigurationAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProxyConfigurationBadRequest creates a UpdateProxyConfigurationBadRequest with default headers values
func NewUpdateProxyConfigurationBadRequest() *UpdateProxyConfigurationBadRequest {
	return &UpdateProxyConfigurationBadRequest{}
}

/*
UpdateProxyConfigurationBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateProxyConfigurationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update proxy configuration bad request response has a 2xx status code
func (o *UpdateProxyConfigurationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update proxy configuration bad request response has a 3xx status code
func (o *UpdateProxyConfigurationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update proxy configuration bad request response has a 4xx status code
func (o *UpdateProxyConfigurationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update proxy configuration bad request response has a 5xx status code
func (o *UpdateProxyConfigurationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update proxy configuration bad request response a status code equal to that given
func (o *UpdateProxyConfigurationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update proxy configuration bad request response
func (o *UpdateProxyConfigurationBadRequest) Code() int {
	return 400
}

func (o *UpdateProxyConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/proxy-configuration][%d] updateProxyConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateProxyConfigurationBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/system/proxy-configuration][%d] updateProxyConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateProxyConfigurationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateProxyConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProxyConfigurationInternalServerError creates a UpdateProxyConfigurationInternalServerError with default headers values
func NewUpdateProxyConfigurationInternalServerError() *UpdateProxyConfigurationInternalServerError {
	return &UpdateProxyConfigurationInternalServerError{}
}

/*
UpdateProxyConfigurationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type UpdateProxyConfigurationInternalServerError struct {
}

// IsSuccess returns true when this update proxy configuration internal server error response has a 2xx status code
func (o *UpdateProxyConfigurationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update proxy configuration internal server error response has a 3xx status code
func (o *UpdateProxyConfigurationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update proxy configuration internal server error response has a 4xx status code
func (o *UpdateProxyConfigurationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update proxy configuration internal server error response has a 5xx status code
func (o *UpdateProxyConfigurationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update proxy configuration internal server error response a status code equal to that given
func (o *UpdateProxyConfigurationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update proxy configuration internal server error response
func (o *UpdateProxyConfigurationInternalServerError) Code() int {
	return 500
}

func (o *UpdateProxyConfigurationInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/proxy-configuration][%d] updateProxyConfigurationInternalServerError ", 500)
}

func (o *UpdateProxyConfigurationInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /v1/system/proxy-configuration][%d] updateProxyConfigurationInternalServerError ", 500)
}

func (o *UpdateProxyConfigurationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
