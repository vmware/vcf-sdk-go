// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package resource_functionalities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetResourceFunctionalitiesReader is a Reader for the GetResourceFunctionalities structure.
type GetResourceFunctionalitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceFunctionalitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceFunctionalitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceFunctionalitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceFunctionalitiesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetResourceFunctionalitiesOK creates a GetResourceFunctionalitiesOK with default headers values
func NewGetResourceFunctionalitiesOK() *GetResourceFunctionalitiesOK {
	return &GetResourceFunctionalitiesOK{}
}

/*
GetResourceFunctionalitiesOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceFunctionalitiesOK struct {
	Payload *models.PageOfResourceFunctionalities
}

// IsSuccess returns true when this get resource functionalities o k response has a 2xx status code
func (o *GetResourceFunctionalitiesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource functionalities o k response has a 3xx status code
func (o *GetResourceFunctionalitiesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource functionalities o k response has a 4xx status code
func (o *GetResourceFunctionalitiesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource functionalities o k response has a 5xx status code
func (o *GetResourceFunctionalitiesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource functionalities o k response a status code equal to that given
func (o *GetResourceFunctionalitiesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetResourceFunctionalitiesOK) Error() string {
	return fmt.Sprintf("[GET /v1/resource-functionalities][%d] getResourceFunctionalitiesOK  %+v", 200, o.Payload)
}

func (o *GetResourceFunctionalitiesOK) String() string {
	return fmt.Sprintf("[GET /v1/resource-functionalities][%d] getResourceFunctionalitiesOK  %+v", 200, o.Payload)
}

func (o *GetResourceFunctionalitiesOK) GetPayload() *models.PageOfResourceFunctionalities {
	return o.Payload
}

func (o *GetResourceFunctionalitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfResourceFunctionalities)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceFunctionalitiesBadRequest creates a GetResourceFunctionalitiesBadRequest with default headers values
func NewGetResourceFunctionalitiesBadRequest() *GetResourceFunctionalitiesBadRequest {
	return &GetResourceFunctionalitiesBadRequest{}
}

/*
GetResourceFunctionalitiesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetResourceFunctionalitiesBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get resource functionalities bad request response has a 2xx status code
func (o *GetResourceFunctionalitiesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource functionalities bad request response has a 3xx status code
func (o *GetResourceFunctionalitiesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource functionalities bad request response has a 4xx status code
func (o *GetResourceFunctionalitiesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource functionalities bad request response has a 5xx status code
func (o *GetResourceFunctionalitiesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource functionalities bad request response a status code equal to that given
func (o *GetResourceFunctionalitiesBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetResourceFunctionalitiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/resource-functionalities][%d] getResourceFunctionalitiesBadRequest  %+v", 400, o.Payload)
}

func (o *GetResourceFunctionalitiesBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/resource-functionalities][%d] getResourceFunctionalitiesBadRequest  %+v", 400, o.Payload)
}

func (o *GetResourceFunctionalitiesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResourceFunctionalitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceFunctionalitiesInternalServerError creates a GetResourceFunctionalitiesInternalServerError with default headers values
func NewGetResourceFunctionalitiesInternalServerError() *GetResourceFunctionalitiesInternalServerError {
	return &GetResourceFunctionalitiesInternalServerError{}
}

/*
GetResourceFunctionalitiesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResourceFunctionalitiesInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get resource functionalities internal server error response has a 2xx status code
func (o *GetResourceFunctionalitiesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource functionalities internal server error response has a 3xx status code
func (o *GetResourceFunctionalitiesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource functionalities internal server error response has a 4xx status code
func (o *GetResourceFunctionalitiesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource functionalities internal server error response has a 5xx status code
func (o *GetResourceFunctionalitiesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource functionalities internal server error response a status code equal to that given
func (o *GetResourceFunctionalitiesInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetResourceFunctionalitiesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/resource-functionalities][%d] getResourceFunctionalitiesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourceFunctionalitiesInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/resource-functionalities][%d] getResourceFunctionalitiesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourceFunctionalitiesInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResourceFunctionalitiesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
