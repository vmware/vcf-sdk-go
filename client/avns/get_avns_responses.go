// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package avns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetAvnsReader is a Reader for the GetAvns structure.
type GetAvnsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAvnsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAvnsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAvnsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAvnsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/avns] getAvns", response, response.Code())
	}
}

// NewGetAvnsOK creates a GetAvnsOK with default headers values
func NewGetAvnsOK() *GetAvnsOK {
	return &GetAvnsOK{}
}

/*
GetAvnsOK describes a response with status code 200, with default header values.

Returns the list of all matching AVNs
*/
type GetAvnsOK struct {
	Payload []*models.Avn
}

// IsSuccess returns true when this get avns o k response has a 2xx status code
func (o *GetAvnsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get avns o k response has a 3xx status code
func (o *GetAvnsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get avns o k response has a 4xx status code
func (o *GetAvnsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get avns o k response has a 5xx status code
func (o *GetAvnsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get avns o k response a status code equal to that given
func (o *GetAvnsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get avns o k response
func (o *GetAvnsOK) Code() int {
	return 200
}

func (o *GetAvnsOK) Error() string {
	return fmt.Sprintf("[GET /v1/avns][%d] getAvnsOK  %+v", 200, o.Payload)
}

func (o *GetAvnsOK) String() string {
	return fmt.Sprintf("[GET /v1/avns][%d] getAvnsOK  %+v", 200, o.Payload)
}

func (o *GetAvnsOK) GetPayload() []*models.Avn {
	return o.Payload
}

func (o *GetAvnsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvnsBadRequest creates a GetAvnsBadRequest with default headers values
func NewGetAvnsBadRequest() *GetAvnsBadRequest {
	return &GetAvnsBadRequest{}
}

/*
GetAvnsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAvnsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get avns bad request response has a 2xx status code
func (o *GetAvnsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get avns bad request response has a 3xx status code
func (o *GetAvnsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get avns bad request response has a 4xx status code
func (o *GetAvnsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get avns bad request response has a 5xx status code
func (o *GetAvnsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get avns bad request response a status code equal to that given
func (o *GetAvnsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get avns bad request response
func (o *GetAvnsBadRequest) Code() int {
	return 400
}

func (o *GetAvnsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/avns][%d] getAvnsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAvnsBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/avns][%d] getAvnsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAvnsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvnsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvnsInternalServerError creates a GetAvnsInternalServerError with default headers values
func NewGetAvnsInternalServerError() *GetAvnsInternalServerError {
	return &GetAvnsInternalServerError{}
}

/*
GetAvnsInternalServerError describes a response with status code 500, with default header values.

Unexpected error
*/
type GetAvnsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get avns internal server error response has a 2xx status code
func (o *GetAvnsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get avns internal server error response has a 3xx status code
func (o *GetAvnsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get avns internal server error response has a 4xx status code
func (o *GetAvnsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get avns internal server error response has a 5xx status code
func (o *GetAvnsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get avns internal server error response a status code equal to that given
func (o *GetAvnsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get avns internal server error response
func (o *GetAvnsInternalServerError) Code() int {
	return 500
}

func (o *GetAvnsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/avns][%d] getAvnsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAvnsInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/avns][%d] getAvnsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAvnsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAvnsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
