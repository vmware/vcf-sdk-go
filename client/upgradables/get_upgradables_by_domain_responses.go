// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package upgradables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetUpgradablesByDomainReader is a Reader for the GetUpgradablesByDomain structure.
type GetUpgradablesByDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUpgradablesByDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUpgradablesByDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetUpgradablesByDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUpgradablesByDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUpgradablesByDomainOK creates a GetUpgradablesByDomainOK with default headers values
func NewGetUpgradablesByDomainOK() *GetUpgradablesByDomainOK {
	return &GetUpgradablesByDomainOK{}
}

/*
GetUpgradablesByDomainOK describes a response with status code 200, with default header values.

Ok
*/
type GetUpgradablesByDomainOK struct {
	Payload *models.PageOfUpgradable
}

// IsSuccess returns true when this get upgradables by domain o k response has a 2xx status code
func (o *GetUpgradablesByDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get upgradables by domain o k response has a 3xx status code
func (o *GetUpgradablesByDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgradables by domain o k response has a 4xx status code
func (o *GetUpgradablesByDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgradables by domain o k response has a 5xx status code
func (o *GetUpgradablesByDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgradables by domain o k response a status code equal to that given
func (o *GetUpgradablesByDomainOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetUpgradablesByDomainOK) Error() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainOK  %+v", 200, o.Payload)
}

func (o *GetUpgradablesByDomainOK) String() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainOK  %+v", 200, o.Payload)
}

func (o *GetUpgradablesByDomainOK) GetPayload() *models.PageOfUpgradable {
	return o.Payload
}

func (o *GetUpgradablesByDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageOfUpgradable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpgradablesByDomainNotFound creates a GetUpgradablesByDomainNotFound with default headers values
func NewGetUpgradablesByDomainNotFound() *GetUpgradablesByDomainNotFound {
	return &GetUpgradablesByDomainNotFound{}
}

/*
GetUpgradablesByDomainNotFound describes a response with status code 404, with default header values.

Domain not found
*/
type GetUpgradablesByDomainNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgradables by domain not found response has a 2xx status code
func (o *GetUpgradablesByDomainNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgradables by domain not found response has a 3xx status code
func (o *GetUpgradablesByDomainNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgradables by domain not found response has a 4xx status code
func (o *GetUpgradablesByDomainNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get upgradables by domain not found response has a 5xx status code
func (o *GetUpgradablesByDomainNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get upgradables by domain not found response a status code equal to that given
func (o *GetUpgradablesByDomainNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetUpgradablesByDomainNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainNotFound  %+v", 404, o.Payload)
}

func (o *GetUpgradablesByDomainNotFound) String() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainNotFound  %+v", 404, o.Payload)
}

func (o *GetUpgradablesByDomainNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUpgradablesByDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUpgradablesByDomainInternalServerError creates a GetUpgradablesByDomainInternalServerError with default headers values
func NewGetUpgradablesByDomainInternalServerError() *GetUpgradablesByDomainInternalServerError {
	return &GetUpgradablesByDomainInternalServerError{}
}

/*
GetUpgradablesByDomainInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUpgradablesByDomainInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get upgradables by domain internal server error response has a 2xx status code
func (o *GetUpgradablesByDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get upgradables by domain internal server error response has a 3xx status code
func (o *GetUpgradablesByDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get upgradables by domain internal server error response has a 4xx status code
func (o *GetUpgradablesByDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get upgradables by domain internal server error response has a 5xx status code
func (o *GetUpgradablesByDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get upgradables by domain internal server error response a status code equal to that given
func (o *GetUpgradablesByDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetUpgradablesByDomainInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUpgradablesByDomainInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/upgradables/domains/{domainId}][%d] getUpgradablesByDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUpgradablesByDomainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUpgradablesByDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
