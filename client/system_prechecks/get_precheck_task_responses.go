// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package system_prechecks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetPrecheckTaskReader is a Reader for the GetPrecheckTask structure.
type GetPrecheckTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPrecheckTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPrecheckTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPrecheckTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPrecheckTaskInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPrecheckTaskOK creates a GetPrecheckTaskOK with default headers values
func NewGetPrecheckTaskOK() *GetPrecheckTaskOK {
	return &GetPrecheckTaskOK{}
}

/*
GetPrecheckTaskOK describes a response with status code 200, with default header values.

Ok
*/
type GetPrecheckTaskOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this get precheck task o k response has a 2xx status code
func (o *GetPrecheckTaskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get precheck task o k response has a 3xx status code
func (o *GetPrecheckTaskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get precheck task o k response has a 4xx status code
func (o *GetPrecheckTaskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get precheck task o k response has a 5xx status code
func (o *GetPrecheckTaskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get precheck task o k response a status code equal to that given
func (o *GetPrecheckTaskOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetPrecheckTaskOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/prechecks/tasks/{id}][%d] getPrecheckTaskOK  %+v", 200, o.Payload)
}

func (o *GetPrecheckTaskOK) String() string {
	return fmt.Sprintf("[GET /v1/system/prechecks/tasks/{id}][%d] getPrecheckTaskOK  %+v", 200, o.Payload)
}

func (o *GetPrecheckTaskOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *GetPrecheckTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrecheckTaskNotFound creates a GetPrecheckTaskNotFound with default headers values
func NewGetPrecheckTaskNotFound() *GetPrecheckTaskNotFound {
	return &GetPrecheckTaskNotFound{}
}

/*
GetPrecheckTaskNotFound describes a response with status code 404, with default header values.

Precheck Task Not Found
*/
type GetPrecheckTaskNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get precheck task not found response has a 2xx status code
func (o *GetPrecheckTaskNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get precheck task not found response has a 3xx status code
func (o *GetPrecheckTaskNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get precheck task not found response has a 4xx status code
func (o *GetPrecheckTaskNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get precheck task not found response has a 5xx status code
func (o *GetPrecheckTaskNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get precheck task not found response a status code equal to that given
func (o *GetPrecheckTaskNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetPrecheckTaskNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/system/prechecks/tasks/{id}][%d] getPrecheckTaskNotFound  %+v", 404, o.Payload)
}

func (o *GetPrecheckTaskNotFound) String() string {
	return fmt.Sprintf("[GET /v1/system/prechecks/tasks/{id}][%d] getPrecheckTaskNotFound  %+v", 404, o.Payload)
}

func (o *GetPrecheckTaskNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPrecheckTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPrecheckTaskInternalServerError creates a GetPrecheckTaskInternalServerError with default headers values
func NewGetPrecheckTaskInternalServerError() *GetPrecheckTaskInternalServerError {
	return &GetPrecheckTaskInternalServerError{}
}

/*
GetPrecheckTaskInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPrecheckTaskInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get precheck task internal server error response has a 2xx status code
func (o *GetPrecheckTaskInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get precheck task internal server error response has a 3xx status code
func (o *GetPrecheckTaskInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get precheck task internal server error response has a 4xx status code
func (o *GetPrecheckTaskInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get precheck task internal server error response has a 5xx status code
func (o *GetPrecheckTaskInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get precheck task internal server error response a status code equal to that given
func (o *GetPrecheckTaskInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetPrecheckTaskInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/prechecks/tasks/{id}][%d] getPrecheckTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPrecheckTaskInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/prechecks/tasks/{id}][%d] getPrecheckTaskInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPrecheckTaskInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPrecheckTaskInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
