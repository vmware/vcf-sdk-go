// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package suite_lifecycle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// NewDeployVRSLCMParams creates a new DeployVRSLCMParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeployVRSLCMParams() *DeployVRSLCMParams {
	return &DeployVRSLCMParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeployVRSLCMParamsWithTimeout creates a new DeployVRSLCMParams object
// with the ability to set a timeout on a request.
func NewDeployVRSLCMParamsWithTimeout(timeout time.Duration) *DeployVRSLCMParams {
	return &DeployVRSLCMParams{
		timeout: timeout,
	}
}

// NewDeployVRSLCMParamsWithContext creates a new DeployVRSLCMParams object
// with the ability to set a context for a request.
func NewDeployVRSLCMParamsWithContext(ctx context.Context) *DeployVRSLCMParams {
	return &DeployVRSLCMParams{
		Context: ctx,
	}
}

// NewDeployVRSLCMParamsWithHTTPClient creates a new DeployVRSLCMParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeployVRSLCMParamsWithHTTPClient(client *http.Client) *DeployVRSLCMParams {
	return &DeployVRSLCMParams{
		HTTPClient: client,
	}
}

/*
DeployVRSLCMParams contains all the parameters to send to the API endpoint

	for the deploy Vrslcm operation.

	Typically these are written to a http.Request.
*/
type DeployVRSLCMParams struct {

	/* VRSLCMPublicDeploymentSpec.

	   VMware Aria Suite Lifecycle Deployment Specification
	*/
	VRSLCMPublicDeploymentSpec *models.VRSLCMDeploymentSpec

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the deploy Vrslcm params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeployVRSLCMParams) WithDefaults() *DeployVRSLCMParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the deploy Vrslcm params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeployVRSLCMParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the deploy Vrslcm params
func (o *DeployVRSLCMParams) WithTimeout(timeout time.Duration) *DeployVRSLCMParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the deploy Vrslcm params
func (o *DeployVRSLCMParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the deploy Vrslcm params
func (o *DeployVRSLCMParams) WithContext(ctx context.Context) *DeployVRSLCMParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the deploy Vrslcm params
func (o *DeployVRSLCMParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the deploy Vrslcm params
func (o *DeployVRSLCMParams) WithHTTPClient(client *http.Client) *DeployVRSLCMParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the deploy Vrslcm params
func (o *DeployVRSLCMParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithVRSLCMPublicDeploymentSpec adds the vRSLCMPublicDeploymentSpec to the deploy Vrslcm params
func (o *DeployVRSLCMParams) WithVRSLCMPublicDeploymentSpec(vRSLCMPublicDeploymentSpec *models.VRSLCMDeploymentSpec) *DeployVRSLCMParams {
	o.SetVRSLCMPublicDeploymentSpec(vRSLCMPublicDeploymentSpec)
	return o
}

// SetVRSLCMPublicDeploymentSpec adds the vrslcmPublicDeploymentSpec to the deploy Vrslcm params
func (o *DeployVRSLCMParams) SetVRSLCMPublicDeploymentSpec(vRSLCMPublicDeploymentSpec *models.VRSLCMDeploymentSpec) {
	o.VRSLCMPublicDeploymentSpec = vRSLCMPublicDeploymentSpec
}

// WriteToRequest writes these params to a swagger request
func (o *DeployVRSLCMParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.VRSLCMPublicDeploymentSpec != nil {
		if err := r.SetBodyParam(o.VRSLCMPublicDeploymentSpec); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
