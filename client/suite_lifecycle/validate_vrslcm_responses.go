// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package suite_lifecycle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// ValidateVRSLCMReader is a Reader for the ValidateVRSLCM structure.
type ValidateVRSLCMReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateVRSLCMReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewValidateVRSLCMAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateVRSLCMBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/vrslcms/validations] validateVrslcm", response, response.Code())
	}
}

// NewValidateVRSLCMAccepted creates a ValidateVRSLCMAccepted with default headers values
func NewValidateVRSLCMAccepted() *ValidateVRSLCMAccepted {
	return &ValidateVRSLCMAccepted{}
}

/*
ValidateVRSLCMAccepted describes a response with status code 202, with default header values.

Accepted
*/
type ValidateVRSLCMAccepted struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate Vrslcm accepted response has a 2xx status code
func (o *ValidateVRSLCMAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate Vrslcm accepted response has a 3xx status code
func (o *ValidateVRSLCMAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate Vrslcm accepted response has a 4xx status code
func (o *ValidateVRSLCMAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate Vrslcm accepted response has a 5xx status code
func (o *ValidateVRSLCMAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this validate Vrslcm accepted response a status code equal to that given
func (o *ValidateVRSLCMAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the validate Vrslcm accepted response
func (o *ValidateVRSLCMAccepted) Code() int {
	return 202
}

func (o *ValidateVRSLCMAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/vrslcms/validations][%d] validateVrslcmAccepted  %+v", 202, o.Payload)
}

func (o *ValidateVRSLCMAccepted) String() string {
	return fmt.Sprintf("[POST /v1/vrslcms/validations][%d] validateVrslcmAccepted  %+v", 202, o.Payload)
}

func (o *ValidateVRSLCMAccepted) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateVRSLCMAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateVRSLCMBadRequest creates a ValidateVRSLCMBadRequest with default headers values
func NewValidateVRSLCMBadRequest() *ValidateVRSLCMBadRequest {
	return &ValidateVRSLCMBadRequest{}
}

/*
ValidateVRSLCMBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateVRSLCMBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate Vrslcm bad request response has a 2xx status code
func (o *ValidateVRSLCMBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate Vrslcm bad request response has a 3xx status code
func (o *ValidateVRSLCMBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate Vrslcm bad request response has a 4xx status code
func (o *ValidateVRSLCMBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate Vrslcm bad request response has a 5xx status code
func (o *ValidateVRSLCMBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate Vrslcm bad request response a status code equal to that given
func (o *ValidateVRSLCMBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate Vrslcm bad request response
func (o *ValidateVRSLCMBadRequest) Code() int {
	return 400
}

func (o *ValidateVRSLCMBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/vrslcms/validations][%d] validateVrslcmBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateVRSLCMBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/vrslcms/validations][%d] validateVrslcmBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateVRSLCMBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateVRSLCMBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
