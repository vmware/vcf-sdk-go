// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package check_sets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// TriggerCheckRunReader is a Reader for the TriggerCheckRun structure.
type TriggerCheckRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TriggerCheckRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewTriggerCheckRunAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTriggerCheckRunBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTriggerCheckRunInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/system/check-sets] triggerCheckRun", response, response.Code())
	}
}

// NewTriggerCheckRunAccepted creates a TriggerCheckRunAccepted with default headers values
func NewTriggerCheckRunAccepted() *TriggerCheckRunAccepted {
	return &TriggerCheckRunAccepted{}
}

/*
TriggerCheckRunAccepted describes a response with status code 202, with default header values.

Accepted
*/
type TriggerCheckRunAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this trigger check run accepted response has a 2xx status code
func (o *TriggerCheckRunAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this trigger check run accepted response has a 3xx status code
func (o *TriggerCheckRunAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger check run accepted response has a 4xx status code
func (o *TriggerCheckRunAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this trigger check run accepted response has a 5xx status code
func (o *TriggerCheckRunAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger check run accepted response a status code equal to that given
func (o *TriggerCheckRunAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the trigger check run accepted response
func (o *TriggerCheckRunAccepted) Code() int {
	return 202
}

func (o *TriggerCheckRunAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/system/check-sets][%d] triggerCheckRunAccepted  %+v", 202, o.Payload)
}

func (o *TriggerCheckRunAccepted) String() string {
	return fmt.Sprintf("[POST /v1/system/check-sets][%d] triggerCheckRunAccepted  %+v", 202, o.Payload)
}

func (o *TriggerCheckRunAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *TriggerCheckRunAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerCheckRunBadRequest creates a TriggerCheckRunBadRequest with default headers values
func NewTriggerCheckRunBadRequest() *TriggerCheckRunBadRequest {
	return &TriggerCheckRunBadRequest{}
}

/*
TriggerCheckRunBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type TriggerCheckRunBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this trigger check run bad request response has a 2xx status code
func (o *TriggerCheckRunBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger check run bad request response has a 3xx status code
func (o *TriggerCheckRunBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger check run bad request response has a 4xx status code
func (o *TriggerCheckRunBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this trigger check run bad request response has a 5xx status code
func (o *TriggerCheckRunBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger check run bad request response a status code equal to that given
func (o *TriggerCheckRunBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the trigger check run bad request response
func (o *TriggerCheckRunBadRequest) Code() int {
	return 400
}

func (o *TriggerCheckRunBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/system/check-sets][%d] triggerCheckRunBadRequest  %+v", 400, o.Payload)
}

func (o *TriggerCheckRunBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/system/check-sets][%d] triggerCheckRunBadRequest  %+v", 400, o.Payload)
}

func (o *TriggerCheckRunBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *TriggerCheckRunBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerCheckRunInternalServerError creates a TriggerCheckRunInternalServerError with default headers values
func NewTriggerCheckRunInternalServerError() *TriggerCheckRunInternalServerError {
	return &TriggerCheckRunInternalServerError{}
}

/*
TriggerCheckRunInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type TriggerCheckRunInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this trigger check run internal server error response has a 2xx status code
func (o *TriggerCheckRunInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger check run internal server error response has a 3xx status code
func (o *TriggerCheckRunInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger check run internal server error response has a 4xx status code
func (o *TriggerCheckRunInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this trigger check run internal server error response has a 5xx status code
func (o *TriggerCheckRunInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this trigger check run internal server error response a status code equal to that given
func (o *TriggerCheckRunInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the trigger check run internal server error response
func (o *TriggerCheckRunInternalServerError) Code() int {
	return 500
}

func (o *TriggerCheckRunInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/system/check-sets][%d] triggerCheckRunInternalServerError  %+v", 500, o.Payload)
}

func (o *TriggerCheckRunInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/system/check-sets][%d] triggerCheckRunInternalServerError  %+v", 500, o.Payload)
}

func (o *TriggerCheckRunInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *TriggerCheckRunInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
