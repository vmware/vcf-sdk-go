// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package check_sets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetLastAssessmentRunInfoReader is a Reader for the GetLastAssessmentRunInfo structure.
type GetLastAssessmentRunInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLastAssessmentRunInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLastAssessmentRunInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLastAssessmentRunInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLastAssessmentRunInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/system/check-sets] getLastAssessmentRunInfo", response, response.Code())
	}
}

// NewGetLastAssessmentRunInfoOK creates a GetLastAssessmentRunInfoOK with default headers values
func NewGetLastAssessmentRunInfoOK() *GetLastAssessmentRunInfoOK {
	return &GetLastAssessmentRunInfoOK{}
}

/*
GetLastAssessmentRunInfoOK describes a response with status code 200, with default header values.

OK
*/
type GetLastAssessmentRunInfoOK struct {
	Payload []*models.AssessmentTaskInfo
}

// IsSuccess returns true when this get last assessment run info o k response has a 2xx status code
func (o *GetLastAssessmentRunInfoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get last assessment run info o k response has a 3xx status code
func (o *GetLastAssessmentRunInfoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get last assessment run info o k response has a 4xx status code
func (o *GetLastAssessmentRunInfoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get last assessment run info o k response has a 5xx status code
func (o *GetLastAssessmentRunInfoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get last assessment run info o k response a status code equal to that given
func (o *GetLastAssessmentRunInfoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get last assessment run info o k response
func (o *GetLastAssessmentRunInfoOK) Code() int {
	return 200
}

func (o *GetLastAssessmentRunInfoOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/check-sets][%d] getLastAssessmentRunInfoOK  %+v", 200, o.Payload)
}

func (o *GetLastAssessmentRunInfoOK) String() string {
	return fmt.Sprintf("[GET /v1/system/check-sets][%d] getLastAssessmentRunInfoOK  %+v", 200, o.Payload)
}

func (o *GetLastAssessmentRunInfoOK) GetPayload() []*models.AssessmentTaskInfo {
	return o.Payload
}

func (o *GetLastAssessmentRunInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLastAssessmentRunInfoBadRequest creates a GetLastAssessmentRunInfoBadRequest with default headers values
func NewGetLastAssessmentRunInfoBadRequest() *GetLastAssessmentRunInfoBadRequest {
	return &GetLastAssessmentRunInfoBadRequest{}
}

/*
GetLastAssessmentRunInfoBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetLastAssessmentRunInfoBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get last assessment run info bad request response has a 2xx status code
func (o *GetLastAssessmentRunInfoBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get last assessment run info bad request response has a 3xx status code
func (o *GetLastAssessmentRunInfoBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get last assessment run info bad request response has a 4xx status code
func (o *GetLastAssessmentRunInfoBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get last assessment run info bad request response has a 5xx status code
func (o *GetLastAssessmentRunInfoBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get last assessment run info bad request response a status code equal to that given
func (o *GetLastAssessmentRunInfoBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get last assessment run info bad request response
func (o *GetLastAssessmentRunInfoBadRequest) Code() int {
	return 400
}

func (o *GetLastAssessmentRunInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/check-sets][%d] getLastAssessmentRunInfoBadRequest  %+v", 400, o.Payload)
}

func (o *GetLastAssessmentRunInfoBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/check-sets][%d] getLastAssessmentRunInfoBadRequest  %+v", 400, o.Payload)
}

func (o *GetLastAssessmentRunInfoBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLastAssessmentRunInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLastAssessmentRunInfoInternalServerError creates a GetLastAssessmentRunInfoInternalServerError with default headers values
func NewGetLastAssessmentRunInfoInternalServerError() *GetLastAssessmentRunInfoInternalServerError {
	return &GetLastAssessmentRunInfoInternalServerError{}
}

/*
GetLastAssessmentRunInfoInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetLastAssessmentRunInfoInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get last assessment run info internal server error response has a 2xx status code
func (o *GetLastAssessmentRunInfoInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get last assessment run info internal server error response has a 3xx status code
func (o *GetLastAssessmentRunInfoInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get last assessment run info internal server error response has a 4xx status code
func (o *GetLastAssessmentRunInfoInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get last assessment run info internal server error response has a 5xx status code
func (o *GetLastAssessmentRunInfoInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get last assessment run info internal server error response a status code equal to that given
func (o *GetLastAssessmentRunInfoInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get last assessment run info internal server error response
func (o *GetLastAssessmentRunInfoInternalServerError) Code() int {
	return 500
}

func (o *GetLastAssessmentRunInfoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/check-sets][%d] getLastAssessmentRunInfoInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLastAssessmentRunInfoInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/check-sets][%d] getLastAssessmentRunInfoInternalServerError  %+v", 500, o.Payload)
}

func (o *GetLastAssessmentRunInfoInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLastAssessmentRunInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
