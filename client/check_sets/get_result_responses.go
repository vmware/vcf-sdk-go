// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package check_sets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetResultReader is a Reader for the GetResult structure.
type GetResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResultBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResultNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/system/check-sets/{runId}] getResult", response, response.Code())
	}
}

// NewGetResultOK creates a GetResultOK with default headers values
func NewGetResultOK() *GetResultOK {
	return &GetResultOK{}
}

/*
GetResultOK describes a response with status code 200, with default header values.

OK
*/
type GetResultOK struct {
	Payload *models.AssessmentOutput
}

// IsSuccess returns true when this get result o k response has a 2xx status code
func (o *GetResultOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get result o k response has a 3xx status code
func (o *GetResultOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get result o k response has a 4xx status code
func (o *GetResultOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get result o k response has a 5xx status code
func (o *GetResultOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get result o k response a status code equal to that given
func (o *GetResultOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get result o k response
func (o *GetResultOK) Code() int {
	return 200
}

func (o *GetResultOK) Error() string {
	return fmt.Sprintf("[GET /v1/system/check-sets/{runId}][%d] getResultOK  %+v", 200, o.Payload)
}

func (o *GetResultOK) String() string {
	return fmt.Sprintf("[GET /v1/system/check-sets/{runId}][%d] getResultOK  %+v", 200, o.Payload)
}

func (o *GetResultOK) GetPayload() *models.AssessmentOutput {
	return o.Payload
}

func (o *GetResultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssessmentOutput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResultBadRequest creates a GetResultBadRequest with default headers values
func NewGetResultBadRequest() *GetResultBadRequest {
	return &GetResultBadRequest{}
}

/*
GetResultBadRequest describes a response with status code 400, with default header values.

Invalid task for this UUID
*/
type GetResultBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get result bad request response has a 2xx status code
func (o *GetResultBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get result bad request response has a 3xx status code
func (o *GetResultBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get result bad request response has a 4xx status code
func (o *GetResultBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get result bad request response has a 5xx status code
func (o *GetResultBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get result bad request response a status code equal to that given
func (o *GetResultBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get result bad request response
func (o *GetResultBadRequest) Code() int {
	return 400
}

func (o *GetResultBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/system/check-sets/{runId}][%d] getResultBadRequest  %+v", 400, o.Payload)
}

func (o *GetResultBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/system/check-sets/{runId}][%d] getResultBadRequest  %+v", 400, o.Payload)
}

func (o *GetResultBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResultBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResultNotFound creates a GetResultNotFound with default headers values
func NewGetResultNotFound() *GetResultNotFound {
	return &GetResultNotFound{}
}

/*
GetResultNotFound describes a response with status code 404, with default header values.

No task for this UUID
*/
type GetResultNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get result not found response has a 2xx status code
func (o *GetResultNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get result not found response has a 3xx status code
func (o *GetResultNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get result not found response has a 4xx status code
func (o *GetResultNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get result not found response has a 5xx status code
func (o *GetResultNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get result not found response a status code equal to that given
func (o *GetResultNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get result not found response
func (o *GetResultNotFound) Code() int {
	return 404
}

func (o *GetResultNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/system/check-sets/{runId}][%d] getResultNotFound  %+v", 404, o.Payload)
}

func (o *GetResultNotFound) String() string {
	return fmt.Sprintf("[GET /v1/system/check-sets/{runId}][%d] getResultNotFound  %+v", 404, o.Payload)
}

func (o *GetResultNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResultNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResultInternalServerError creates a GetResultInternalServerError with default headers values
func NewGetResultInternalServerError() *GetResultInternalServerError {
	return &GetResultInternalServerError{}
}

/*
GetResultInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResultInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get result internal server error response has a 2xx status code
func (o *GetResultInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get result internal server error response has a 3xx status code
func (o *GetResultInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get result internal server error response has a 4xx status code
func (o *GetResultInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get result internal server error response has a 5xx status code
func (o *GetResultInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get result internal server error response a status code equal to that given
func (o *GetResultInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get result internal server error response
func (o *GetResultInternalServerError) Code() int {
	return 500
}

func (o *GetResultInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/system/check-sets/{runId}][%d] getResultInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResultInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/system/check-sets/{runId}][%d] getResultInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResultInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetResultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
