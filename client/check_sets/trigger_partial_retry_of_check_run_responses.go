// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package check_sets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// TriggerPartialRetryOfCheckRunReader is a Reader for the TriggerPartialRetryOfCheckRun structure.
type TriggerPartialRetryOfCheckRunReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TriggerPartialRetryOfCheckRunReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewTriggerPartialRetryOfCheckRunAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTriggerPartialRetryOfCheckRunBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTriggerPartialRetryOfCheckRunInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /v1/system/check-sets/{runId}] triggerPartialRetryOfCheckRun", response, response.Code())
	}
}

// NewTriggerPartialRetryOfCheckRunAccepted creates a TriggerPartialRetryOfCheckRunAccepted with default headers values
func NewTriggerPartialRetryOfCheckRunAccepted() *TriggerPartialRetryOfCheckRunAccepted {
	return &TriggerPartialRetryOfCheckRunAccepted{}
}

/*
TriggerPartialRetryOfCheckRunAccepted describes a response with status code 202, with default header values.

Accepted
*/
type TriggerPartialRetryOfCheckRunAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this trigger partial retry of check run accepted response has a 2xx status code
func (o *TriggerPartialRetryOfCheckRunAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this trigger partial retry of check run accepted response has a 3xx status code
func (o *TriggerPartialRetryOfCheckRunAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger partial retry of check run accepted response has a 4xx status code
func (o *TriggerPartialRetryOfCheckRunAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this trigger partial retry of check run accepted response has a 5xx status code
func (o *TriggerPartialRetryOfCheckRunAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger partial retry of check run accepted response a status code equal to that given
func (o *TriggerPartialRetryOfCheckRunAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the trigger partial retry of check run accepted response
func (o *TriggerPartialRetryOfCheckRunAccepted) Code() int {
	return 202
}

func (o *TriggerPartialRetryOfCheckRunAccepted) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/check-sets/{runId}][%d] triggerPartialRetryOfCheckRunAccepted  %+v", 202, o.Payload)
}

func (o *TriggerPartialRetryOfCheckRunAccepted) String() string {
	return fmt.Sprintf("[PATCH /v1/system/check-sets/{runId}][%d] triggerPartialRetryOfCheckRunAccepted  %+v", 202, o.Payload)
}

func (o *TriggerPartialRetryOfCheckRunAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *TriggerPartialRetryOfCheckRunAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerPartialRetryOfCheckRunBadRequest creates a TriggerPartialRetryOfCheckRunBadRequest with default headers values
func NewTriggerPartialRetryOfCheckRunBadRequest() *TriggerPartialRetryOfCheckRunBadRequest {
	return &TriggerPartialRetryOfCheckRunBadRequest{}
}

/*
TriggerPartialRetryOfCheckRunBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type TriggerPartialRetryOfCheckRunBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this trigger partial retry of check run bad request response has a 2xx status code
func (o *TriggerPartialRetryOfCheckRunBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger partial retry of check run bad request response has a 3xx status code
func (o *TriggerPartialRetryOfCheckRunBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger partial retry of check run bad request response has a 4xx status code
func (o *TriggerPartialRetryOfCheckRunBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this trigger partial retry of check run bad request response has a 5xx status code
func (o *TriggerPartialRetryOfCheckRunBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger partial retry of check run bad request response a status code equal to that given
func (o *TriggerPartialRetryOfCheckRunBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the trigger partial retry of check run bad request response
func (o *TriggerPartialRetryOfCheckRunBadRequest) Code() int {
	return 400
}

func (o *TriggerPartialRetryOfCheckRunBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/check-sets/{runId}][%d] triggerPartialRetryOfCheckRunBadRequest  %+v", 400, o.Payload)
}

func (o *TriggerPartialRetryOfCheckRunBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/system/check-sets/{runId}][%d] triggerPartialRetryOfCheckRunBadRequest  %+v", 400, o.Payload)
}

func (o *TriggerPartialRetryOfCheckRunBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *TriggerPartialRetryOfCheckRunBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerPartialRetryOfCheckRunInternalServerError creates a TriggerPartialRetryOfCheckRunInternalServerError with default headers values
func NewTriggerPartialRetryOfCheckRunInternalServerError() *TriggerPartialRetryOfCheckRunInternalServerError {
	return &TriggerPartialRetryOfCheckRunInternalServerError{}
}

/*
TriggerPartialRetryOfCheckRunInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type TriggerPartialRetryOfCheckRunInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this trigger partial retry of check run internal server error response has a 2xx status code
func (o *TriggerPartialRetryOfCheckRunInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger partial retry of check run internal server error response has a 3xx status code
func (o *TriggerPartialRetryOfCheckRunInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger partial retry of check run internal server error response has a 4xx status code
func (o *TriggerPartialRetryOfCheckRunInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this trigger partial retry of check run internal server error response has a 5xx status code
func (o *TriggerPartialRetryOfCheckRunInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this trigger partial retry of check run internal server error response a status code equal to that given
func (o *TriggerPartialRetryOfCheckRunInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the trigger partial retry of check run internal server error response
func (o *TriggerPartialRetryOfCheckRunInternalServerError) Code() int {
	return 500
}

func (o *TriggerPartialRetryOfCheckRunInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/system/check-sets/{runId}][%d] triggerPartialRetryOfCheckRunInternalServerError  %+v", 500, o.Payload)
}

func (o *TriggerPartialRetryOfCheckRunInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /v1/system/check-sets/{runId}][%d] triggerPartialRetryOfCheckRunInternalServerError  %+v", 500, o.Payload)
}

func (o *TriggerPartialRetryOfCheckRunInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *TriggerPartialRetryOfCheckRunInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
