// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package check_sets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// QueryCheckSetsReader is a Reader for the QueryCheckSets structure.
type QueryCheckSetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryCheckSetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQueryCheckSetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewQueryCheckSetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewQueryCheckSetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/system/check-sets/queries] queryCheckSets", response, response.Code())
	}
}

// NewQueryCheckSetsOK creates a QueryCheckSetsOK with default headers values
func NewQueryCheckSetsOK() *QueryCheckSetsOK {
	return &QueryCheckSetsOK{}
}

/*
QueryCheckSetsOK describes a response with status code 200, with default header values.

OK
*/
type QueryCheckSetsOK struct {
	Payload *models.CheckSetQueryResult
}

// IsSuccess returns true when this query check sets o k response has a 2xx status code
func (o *QueryCheckSetsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this query check sets o k response has a 3xx status code
func (o *QueryCheckSetsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query check sets o k response has a 4xx status code
func (o *QueryCheckSetsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this query check sets o k response has a 5xx status code
func (o *QueryCheckSetsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this query check sets o k response a status code equal to that given
func (o *QueryCheckSetsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the query check sets o k response
func (o *QueryCheckSetsOK) Code() int {
	return 200
}

func (o *QueryCheckSetsOK) Error() string {
	return fmt.Sprintf("[POST /v1/system/check-sets/queries][%d] queryCheckSetsOK  %+v", 200, o.Payload)
}

func (o *QueryCheckSetsOK) String() string {
	return fmt.Sprintf("[POST /v1/system/check-sets/queries][%d] queryCheckSetsOK  %+v", 200, o.Payload)
}

func (o *QueryCheckSetsOK) GetPayload() *models.CheckSetQueryResult {
	return o.Payload
}

func (o *QueryCheckSetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CheckSetQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryCheckSetsBadRequest creates a QueryCheckSetsBadRequest with default headers values
func NewQueryCheckSetsBadRequest() *QueryCheckSetsBadRequest {
	return &QueryCheckSetsBadRequest{}
}

/*
QueryCheckSetsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type QueryCheckSetsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this query check sets bad request response has a 2xx status code
func (o *QueryCheckSetsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this query check sets bad request response has a 3xx status code
func (o *QueryCheckSetsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query check sets bad request response has a 4xx status code
func (o *QueryCheckSetsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this query check sets bad request response has a 5xx status code
func (o *QueryCheckSetsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this query check sets bad request response a status code equal to that given
func (o *QueryCheckSetsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the query check sets bad request response
func (o *QueryCheckSetsBadRequest) Code() int {
	return 400
}

func (o *QueryCheckSetsBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/system/check-sets/queries][%d] queryCheckSetsBadRequest  %+v", 400, o.Payload)
}

func (o *QueryCheckSetsBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/system/check-sets/queries][%d] queryCheckSetsBadRequest  %+v", 400, o.Payload)
}

func (o *QueryCheckSetsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *QueryCheckSetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryCheckSetsInternalServerError creates a QueryCheckSetsInternalServerError with default headers values
func NewQueryCheckSetsInternalServerError() *QueryCheckSetsInternalServerError {
	return &QueryCheckSetsInternalServerError{}
}

/*
QueryCheckSetsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type QueryCheckSetsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this query check sets internal server error response has a 2xx status code
func (o *QueryCheckSetsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this query check sets internal server error response has a 3xx status code
func (o *QueryCheckSetsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this query check sets internal server error response has a 4xx status code
func (o *QueryCheckSetsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this query check sets internal server error response has a 5xx status code
func (o *QueryCheckSetsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this query check sets internal server error response a status code equal to that given
func (o *QueryCheckSetsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the query check sets internal server error response
func (o *QueryCheckSetsInternalServerError) Code() int {
	return 500
}

func (o *QueryCheckSetsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/system/check-sets/queries][%d] queryCheckSetsInternalServerError  %+v", 500, o.Payload)
}

func (o *QueryCheckSetsInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/system/check-sets/queries][%d] queryCheckSetsInternalServerError  %+v", 500, o.Payload)
}

func (o *QueryCheckSetsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *QueryCheckSetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
