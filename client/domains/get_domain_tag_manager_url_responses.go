// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// GetDomainTagManagerURLReader is a Reader for the GetDomainTagManagerURL structure.
type GetDomainTagManagerURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomainTagManagerURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDomainTagManagerURLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDomainTagManagerURLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDomainTagManagerURLInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDomainTagManagerURLOK creates a GetDomainTagManagerURLOK with default headers values
func NewGetDomainTagManagerURLOK() *GetDomainTagManagerURLOK {
	return &GetDomainTagManagerURLOK{}
}

/*
GetDomainTagManagerURLOK describes a response with status code 200, with default header values.

Ok
*/
type GetDomainTagManagerURLOK struct {
	Payload *models.TagManagerModel
}

// IsSuccess returns true when this get domain tag manager Url o k response has a 2xx status code
func (o *GetDomainTagManagerURLOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get domain tag manager Url o k response has a 3xx status code
func (o *GetDomainTagManagerURLOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domain tag manager Url o k response has a 4xx status code
func (o *GetDomainTagManagerURLOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get domain tag manager Url o k response has a 5xx status code
func (o *GetDomainTagManagerURLOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get domain tag manager Url o k response a status code equal to that given
func (o *GetDomainTagManagerURLOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetDomainTagManagerURLOK) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/tag-manager][%d] getDomainTagManagerUrlOK  %+v", 200, o.Payload)
}

func (o *GetDomainTagManagerURLOK) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/tag-manager][%d] getDomainTagManagerUrlOK  %+v", 200, o.Payload)
}

func (o *GetDomainTagManagerURLOK) GetPayload() *models.TagManagerModel {
	return o.Payload
}

func (o *GetDomainTagManagerURLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TagManagerModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomainTagManagerURLBadRequest creates a GetDomainTagManagerURLBadRequest with default headers values
func NewGetDomainTagManagerURLBadRequest() *GetDomainTagManagerURLBadRequest {
	return &GetDomainTagManagerURLBadRequest{}
}

/*
GetDomainTagManagerURLBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDomainTagManagerURLBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get domain tag manager Url bad request response has a 2xx status code
func (o *GetDomainTagManagerURLBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domain tag manager Url bad request response has a 3xx status code
func (o *GetDomainTagManagerURLBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domain tag manager Url bad request response has a 4xx status code
func (o *GetDomainTagManagerURLBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domain tag manager Url bad request response has a 5xx status code
func (o *GetDomainTagManagerURLBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get domain tag manager Url bad request response a status code equal to that given
func (o *GetDomainTagManagerURLBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetDomainTagManagerURLBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/tag-manager][%d] getDomainTagManagerUrlBadRequest  %+v", 400, o.Payload)
}

func (o *GetDomainTagManagerURLBadRequest) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/tag-manager][%d] getDomainTagManagerUrlBadRequest  %+v", 400, o.Payload)
}

func (o *GetDomainTagManagerURLBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDomainTagManagerURLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomainTagManagerURLInternalServerError creates a GetDomainTagManagerURLInternalServerError with default headers values
func NewGetDomainTagManagerURLInternalServerError() *GetDomainTagManagerURLInternalServerError {
	return &GetDomainTagManagerURLInternalServerError{}
}

/*
GetDomainTagManagerURLInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type GetDomainTagManagerURLInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get domain tag manager Url internal server error response has a 2xx status code
func (o *GetDomainTagManagerURLInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domain tag manager Url internal server error response has a 3xx status code
func (o *GetDomainTagManagerURLInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domain tag manager Url internal server error response has a 4xx status code
func (o *GetDomainTagManagerURLInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get domain tag manager Url internal server error response has a 5xx status code
func (o *GetDomainTagManagerURLInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get domain tag manager Url internal server error response a status code equal to that given
func (o *GetDomainTagManagerURLInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetDomainTagManagerURLInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/tag-manager][%d] getDomainTagManagerUrlInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDomainTagManagerURLInternalServerError) String() string {
	return fmt.Sprintf("[GET /v1/domains/{id}/tags/tag-manager][%d] getDomainTagManagerUrlInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDomainTagManagerURLInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDomainTagManagerURLInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
