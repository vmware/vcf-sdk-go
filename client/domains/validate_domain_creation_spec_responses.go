// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// ValidateDomainCreationSpecReader is a Reader for the ValidateDomainCreationSpec structure.
type ValidateDomainCreationSpecReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateDomainCreationSpecReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateDomainCreationSpecOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateDomainCreationSpecBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateDomainCreationSpecInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/domains/validations] validateDomainCreationSpec", response, response.Code())
	}
}

// NewValidateDomainCreationSpecOK creates a ValidateDomainCreationSpecOK with default headers values
func NewValidateDomainCreationSpecOK() *ValidateDomainCreationSpecOK {
	return &ValidateDomainCreationSpecOK{}
}

/*
ValidateDomainCreationSpecOK describes a response with status code 200, with default header values.

Ok
*/
type ValidateDomainCreationSpecOK struct {
	Payload *models.Validation
}

// IsSuccess returns true when this validate domain creation spec o k response has a 2xx status code
func (o *ValidateDomainCreationSpecOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate domain creation spec o k response has a 3xx status code
func (o *ValidateDomainCreationSpecOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate domain creation spec o k response has a 4xx status code
func (o *ValidateDomainCreationSpecOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate domain creation spec o k response has a 5xx status code
func (o *ValidateDomainCreationSpecOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate domain creation spec o k response a status code equal to that given
func (o *ValidateDomainCreationSpecOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate domain creation spec o k response
func (o *ValidateDomainCreationSpecOK) Code() int {
	return 200
}

func (o *ValidateDomainCreationSpecOK) Error() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainCreationSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateDomainCreationSpecOK) String() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainCreationSpecOK  %+v", 200, o.Payload)
}

func (o *ValidateDomainCreationSpecOK) GetPayload() *models.Validation {
	return o.Payload
}

func (o *ValidateDomainCreationSpecOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Validation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateDomainCreationSpecBadRequest creates a ValidateDomainCreationSpecBadRequest with default headers values
func NewValidateDomainCreationSpecBadRequest() *ValidateDomainCreationSpecBadRequest {
	return &ValidateDomainCreationSpecBadRequest{}
}

/*
ValidateDomainCreationSpecBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateDomainCreationSpecBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate domain creation spec bad request response has a 2xx status code
func (o *ValidateDomainCreationSpecBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate domain creation spec bad request response has a 3xx status code
func (o *ValidateDomainCreationSpecBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate domain creation spec bad request response has a 4xx status code
func (o *ValidateDomainCreationSpecBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate domain creation spec bad request response has a 5xx status code
func (o *ValidateDomainCreationSpecBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate domain creation spec bad request response a status code equal to that given
func (o *ValidateDomainCreationSpecBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate domain creation spec bad request response
func (o *ValidateDomainCreationSpecBadRequest) Code() int {
	return 400
}

func (o *ValidateDomainCreationSpecBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainCreationSpecBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateDomainCreationSpecBadRequest) String() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainCreationSpecBadRequest  %+v", 400, o.Payload)
}

func (o *ValidateDomainCreationSpecBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateDomainCreationSpecBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateDomainCreationSpecInternalServerError creates a ValidateDomainCreationSpecInternalServerError with default headers values
func NewValidateDomainCreationSpecInternalServerError() *ValidateDomainCreationSpecInternalServerError {
	return &ValidateDomainCreationSpecInternalServerError{}
}

/*
ValidateDomainCreationSpecInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type ValidateDomainCreationSpecInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this validate domain creation spec internal server error response has a 2xx status code
func (o *ValidateDomainCreationSpecInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate domain creation spec internal server error response has a 3xx status code
func (o *ValidateDomainCreationSpecInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate domain creation spec internal server error response has a 4xx status code
func (o *ValidateDomainCreationSpecInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate domain creation spec internal server error response has a 5xx status code
func (o *ValidateDomainCreationSpecInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate domain creation spec internal server error response a status code equal to that given
func (o *ValidateDomainCreationSpecInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate domain creation spec internal server error response
func (o *ValidateDomainCreationSpecInternalServerError) Code() int {
	return 500
}

func (o *ValidateDomainCreationSpecInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainCreationSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateDomainCreationSpecInternalServerError) String() string {
	return fmt.Sprintf("[POST /v1/domains/validations][%d] validateDomainCreationSpecInternalServerError  %+v", 500, o.Payload)
}

func (o *ValidateDomainCreationSpecInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ValidateDomainCreationSpecInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
