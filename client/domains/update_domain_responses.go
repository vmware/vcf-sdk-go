// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vcf-sdk-go/models"
)

// UpdateDomainReader is a Reader for the UpdateDomain structure.
type UpdateDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDomainOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewUpdateDomainAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateDomainBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateDomainInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /v1/domains/{id}] updateDomain", response, response.Code())
	}
}

// NewUpdateDomainOK creates a UpdateDomainOK with default headers values
func NewUpdateDomainOK() *UpdateDomainOK {
	return &UpdateDomainOK{}
}

/*
UpdateDomainOK describes a response with status code 200, with default header values.

Ok
*/
type UpdateDomainOK struct {
	Payload *models.Task
}

// IsSuccess returns true when this update domain o k response has a 2xx status code
func (o *UpdateDomainOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update domain o k response has a 3xx status code
func (o *UpdateDomainOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain o k response has a 4xx status code
func (o *UpdateDomainOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update domain o k response has a 5xx status code
func (o *UpdateDomainOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update domain o k response a status code equal to that given
func (o *UpdateDomainOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update domain o k response
func (o *UpdateDomainOK) Code() int {
	return 200
}

func (o *UpdateDomainOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainOK  %+v", 200, o.Payload)
}

func (o *UpdateDomainOK) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainOK  %+v", 200, o.Payload)
}

func (o *UpdateDomainOK) GetPayload() *models.Task {
	return o.Payload
}

func (o *UpdateDomainOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDomainAccepted creates a UpdateDomainAccepted with default headers values
func NewUpdateDomainAccepted() *UpdateDomainAccepted {
	return &UpdateDomainAccepted{}
}

/*
UpdateDomainAccepted describes a response with status code 202, with default header values.

Accepted
*/
type UpdateDomainAccepted struct {
	Payload *models.Task
}

// IsSuccess returns true when this update domain accepted response has a 2xx status code
func (o *UpdateDomainAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update domain accepted response has a 3xx status code
func (o *UpdateDomainAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain accepted response has a 4xx status code
func (o *UpdateDomainAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this update domain accepted response has a 5xx status code
func (o *UpdateDomainAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this update domain accepted response a status code equal to that given
func (o *UpdateDomainAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the update domain accepted response
func (o *UpdateDomainAccepted) Code() int {
	return 202
}

func (o *UpdateDomainAccepted) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainAccepted  %+v", 202, o.Payload)
}

func (o *UpdateDomainAccepted) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainAccepted  %+v", 202, o.Payload)
}

func (o *UpdateDomainAccepted) GetPayload() *models.Task {
	return o.Payload
}

func (o *UpdateDomainAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Task)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDomainBadRequest creates a UpdateDomainBadRequest with default headers values
func NewUpdateDomainBadRequest() *UpdateDomainBadRequest {
	return &UpdateDomainBadRequest{}
}

/*
UpdateDomainBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateDomainBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update domain bad request response has a 2xx status code
func (o *UpdateDomainBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update domain bad request response has a 3xx status code
func (o *UpdateDomainBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain bad request response has a 4xx status code
func (o *UpdateDomainBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update domain bad request response has a 5xx status code
func (o *UpdateDomainBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update domain bad request response a status code equal to that given
func (o *UpdateDomainBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update domain bad request response
func (o *UpdateDomainBadRequest) Code() int {
	return 400
}

func (o *UpdateDomainBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateDomainBadRequest) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateDomainBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateDomainBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDomainNotFound creates a UpdateDomainNotFound with default headers values
func NewUpdateDomainNotFound() *UpdateDomainNotFound {
	return &UpdateDomainNotFound{}
}

/*
UpdateDomainNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateDomainNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update domain not found response has a 2xx status code
func (o *UpdateDomainNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update domain not found response has a 3xx status code
func (o *UpdateDomainNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain not found response has a 4xx status code
func (o *UpdateDomainNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update domain not found response has a 5xx status code
func (o *UpdateDomainNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update domain not found response a status code equal to that given
func (o *UpdateDomainNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update domain not found response
func (o *UpdateDomainNotFound) Code() int {
	return 404
}

func (o *UpdateDomainNotFound) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainNotFound  %+v", 404, o.Payload)
}

func (o *UpdateDomainNotFound) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainNotFound  %+v", 404, o.Payload)
}

func (o *UpdateDomainNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDomainInternalServerError creates a UpdateDomainInternalServerError with default headers values
func NewUpdateDomainInternalServerError() *UpdateDomainInternalServerError {
	return &UpdateDomainInternalServerError{}
}

/*
UpdateDomainInternalServerError describes a response with status code 500, with default header values.

InternalServerError
*/
type UpdateDomainInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this update domain internal server error response has a 2xx status code
func (o *UpdateDomainInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update domain internal server error response has a 3xx status code
func (o *UpdateDomainInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain internal server error response has a 4xx status code
func (o *UpdateDomainInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update domain internal server error response has a 5xx status code
func (o *UpdateDomainInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update domain internal server error response a status code equal to that given
func (o *UpdateDomainInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update domain internal server error response
func (o *UpdateDomainInternalServerError) Code() int {
	return 500
}

func (o *UpdateDomainInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateDomainInternalServerError) String() string {
	return fmt.Sprintf("[PATCH /v1/domains/{id}][%d] updateDomainInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateDomainInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateDomainInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
