// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LicenseKeyUsage Defines license key usage
//
// swagger:model LicenseKeyUsage
type LicenseKeyUsage struct {

	// Units of the license key
	// Example: One among: CPUPACKAGE, INSTANCE, VMS, CCU, PLU, DESKTOPVM, SERVERVM, VM, SERVER, CORES, CONCURRENTUSER, NAMEDUSER, CPUCORE
	LicenseUnit string `json:"licenseUnit,omitempty"`

	// The remaining/free units of the license key
	Remaining int32 `json:"remaining,omitempty"`

	// The total units of the license key
	Total int32 `json:"total,omitempty"`

	// The consumed/used units of the license key
	Used int32 `json:"used,omitempty"`
}

// Validate validates this license key usage
func (m *LicenseKeyUsage) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this license key usage based on context it is used
func (m *LicenseKeyUsage) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LicenseKeyUsage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LicenseKeyUsage) UnmarshalBinary(b []byte) error {
	var res LicenseKeyUsage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
