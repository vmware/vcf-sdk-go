// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VdsUplinkToNsxUplinkConfiguration The map of vSphere Distributed Switch uplinks to the NSX switch uplinks.
//
// swagger:model VdsUplinkToNsxUplinkConfiguration
type VdsUplinkToNsxUplinkConfiguration struct {

	// The uplink name of the NSX switch
	NsxUplinkName string `json:"nsxUplinkName,omitempty"`

	// The uplink name of the vSphere Distributed Switch
	VdsUplinkName string `json:"vdsUplinkName,omitempty"`
}

// Validate validates this vds uplink to nsx uplink configuration
func (m *VdsUplinkToNsxUplinkConfiguration) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this vds uplink to nsx uplink configuration based on context it is used
func (m *VdsUplinkToNsxUplinkConfiguration) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VdsUplinkToNsxUplinkConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VdsUplinkToNsxUplinkConfiguration) UnmarshalBinary(b []byte) error {
	var res VdsUplinkToNsxUplinkConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
