// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NSXTUpgradeCoordinator NSX Upgrade coordinator Upgrade Resource
//
// swagger:model NsxtUpgradeCoordinator
type NSXTUpgradeCoordinator struct {

	// The IP of the manager on which UC is enabled
	EnabledOn string `json:"enabledOn,omitempty"`

	// Upgrade coordinator id
	ID string `json:"id,omitempty"`

	// Current resource health status
	ResourceHealth string `json:"resourceHealth,omitempty"`

	// Upgrade status with respect to the bundle
	UpgradeStatus string `json:"upgradeStatus,omitempty"`

	// The current version of the UC
	Version string `json:"version,omitempty"`
}

// Validate validates this Nsxt upgrade coordinator
func (m *NSXTUpgradeCoordinator) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this Nsxt upgrade coordinator based on context it is used
func (m *NSXTUpgradeCoordinator) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NSXTUpgradeCoordinator) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NSXTUpgradeCoordinator) UnmarshalBinary(b []byte) error {
	var res NSXTUpgradeCoordinator
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
