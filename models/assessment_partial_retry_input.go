// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2023 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AssessmentPartialRetryInput Input spec used to trigger partial retry of an already-completed assessment run
//
// swagger:model AssessmentPartialRetryInput
type AssessmentPartialRetryInput struct {

	// List of error ids to retry
	ErrorIds []string `json:"errorIds"`

	// Options map (toggles) to control assessment flow. Available toggles 'discoveryCaching' - if set to true the assessment engine will use the Domain data (if present) from previous discovery execution. If any of the passed in the request domains is not present in the cache the Discovery is triggered for ALL domains (even the ones existing in the cache).
	// Example: {\"discoveryCaching\": \"true\"}
	Options map[string]string `json:"options,omitempty"`
}

// Validate validates this assessment partial retry input
func (m *AssessmentPartialRetryInput) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this assessment partial retry input based on context it is used
func (m *AssessmentPartialRetryInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AssessmentPartialRetryInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AssessmentPartialRetryInput) UnmarshalBinary(b []byte) error {
	var res AssessmentPartialRetryInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
